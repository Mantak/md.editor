{"version":3,"sources":["webpack:///1.1.js","webpack:///./~/flowchart.js/src/flowchart.helpers.js","webpack:///./~/flowchart.js/src/flowchart.symbol.js","webpack:///./~/flowchart.js/src/flowchart.functions.js","webpack:///./~/raphael/raphael.min.js","webpack:///./~/flowchart.js/src/flowchart.parse.js","webpack:///./~/flowchart.js/src/flowchart.symbol.condition.js","webpack:///./~/flowchart.js/index.js","webpack:///./~/flowchart.js/src/flowchart.chart.js","webpack:///./~/flowchart.js/src/flowchart.defaults.js","webpack:///./~/flowchart.js/src/flowchart.shim.js","webpack:///./~/flowchart.js/src/flowchart.symbol.end.js","webpack:///./~/flowchart.js/src/flowchart.symbol.inputoutput.js","webpack:///./~/flowchart.js/src/flowchart.symbol.operation.js","webpack:///./~/flowchart.js/src/flowchart.symbol.start.js","webpack:///./~/flowchart.js/src/flowchart.symbol.subroutine.js","webpack:///./~/flowchart.js/src/jquery-plugin.js"],"names":["webpackJsonp","1","module","exports","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","2","__webpack_require__","Symbol","chart","symbol","this","group","paper","set","connectedTo","symbolType","flowstate","next_direction","next","undefined","text","key","node","id","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","target","maxWidth","words","split","tempText","i","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","render","lineLength","rightPoint","isPositioned","self","shift","symb","hasSymbolUnder","len","diff","Math","abs","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","right","bottom","left","symbolX","symbolY","symbolTop","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","maxXFromLine","7","drawPath","location","points","path","pathValues","from","to","toString","call","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","a","b","numerator1","numerator2","result","8","e","r","t","n","loaded","m","c","p","apply","is","w","on","Q","_engine","z","$","add","Array","slice","arguments","pop","T","s","join","o","cache","count","hex","h","u","f","d","g","v","Y","sqrt","H","W","G","toFixed","bezierBBox","isBBoxIntersect","findDotsAtSegment","concat","_","k","B","C","S","t1","t2","_path2curve","segment1","segment2","bez1","bez2","I","ms","times","ht","sort","Bt","anim","top","percents","Ee","el","percent","totalOrigin","initstatus","start","Date","pt","customAttributes","ft","getRGB","A","Qt","E","M","N","L","le","real","F","matrix","R","se","j","q","D","P","V","easing","O","easing_formulas","match","st","St","timestamp","del","status","stop","callback","prev","repeat","Ne","Me","version","eve","circle","rect","ellipse","image","doc","document","win","window","was","Raphael","ca","DocumentTouch","String","mousedown","mousemove","mouseup","toLowerCase","max","min","X","pow","U","PI","Z","tt","nt","_ISURL","at","NaN","Infinity","-Infinity","ot","round","parseFloat","ut","parseInt","ct","toUpperCase","_availableAttrs","arrow-start","blur","clip-rect","cursor","cx","cy","fill-opacity","font-style","gradient","href","letter-spacing","opacity","rx","ry","src","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","title","class","_availableAnimAttrs","gt","xt","hs","rg","vt","yt","mt","bt","wt","_radial_gradient","Tt","_rectPath","At","Et","_getPath","attrs","_getBBox","Mt","mapPath","_g","type","SVGAngle","implementation","hasFeature","Lt","Nt","createElement","innerHTML","firstChild","style","behavior","adj","svg","vml","_Paper","fn","_id","isArray","angle","atan2","rad","deg","snapTo","createUUID","replace","random","setWindow","initWin","Pt","ActiveXObject","write","close","body","createPopup","createTextRange","color","queryCommandValue","display","appendChild","defaultView","getComputedStyle","getPropertyValue","Ft","Rt","It","jt","qt","rgb","hsb2rgb","hsl2rgb","rgb2hsl","rgb2hsb","_path2string","_preload","cssText","onload","removeChild","onerror","error","charAt","hsb","hsl","getColor","reset","parsePathString","Vt","arr","Yt","parseTransformString","ps","sleep","setTimeout","end","alpha","Zt","x2","y2","isPointInsideBBox","pathIntersection","pathIntersectionNumber","isPointInsidePath","pathBBox","_removedFactory","Ot","bbox","Wt","_pathToRelative","rel","Gt","_pathToAbsolute","Ht","Xt","Ut","cos","sin","asin","tan","$t","curve","bx","by","qx","qy","Kt","_parseDots","offset","_tear","ne","_tofront","_toback","_insertafter","_insertbefore","toMatrix","transformPath","_extractTransform","invert","translate","rotate","scale","dirtyT","sx","sy","dx","dy","oe","_equaliseTransform","_getContainer","getElementById","tagName","container","pixelWidth","offsetWidth","pixelHeight","offsetHeight","pathToRelative","path2curve","clone","get","fromCharCode","toFilter","scalex","shear","scaley","acos","isSimple","isSuperSimple","noRotation","toTransformString","he","returnValue","ue","originalEvent","preventDefault","ce","cancelBubble","fe","stopPropagation","pe","documentElement","scrollTop","scrollLeft","clientX","clientY","de","addEventListener","targetTouches","removeEventListener","attachEvent","event","detachEvent","ge","xe","touches","identifier","_drag","nextSibling","parentNode","opera","getElementByPoint","move_scope","ve","unmousemove","unmouseup","end_scope","start_scope","ye","me","events","name","unbind","shape","data","removeData","getData","hover","mouseover","mouseout","unhover","unmouseover","unmouseout","be","drag","onDragOver","undrag","unmousedown","__set__","format","ze","setStart","setFinish","getSize","canvas","setSize","setViewBox","raphael","_e","getBoundingClientRect","ownerDocument","clientTop","clientLeft","pageYOffset","pageXOffset","elementFromPoint","createSVGRect","getIntersectionList","getById","raphaelid","getElementsByBBox","forEach","getElementsByPoint","isPointInside","realPath","removed","dirty","bboxwt","glow","offsetx","offsety","ke","Be","Ce","Se","Te","getTotalLength","getPointAtLength","getSubpath","getPath","Ae","linear","<",">","<>","backIn","backOut","elastic","bounce","easeIn","easeOut","easeInOut","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","paused","Le","animateWith","animation","onAnimation","delay","floor","100","animate","setTime","pause","resume","items","Pe","Fe","clear","exclude","insertAfter","registerFont","face","fonts","glyphs","getFont","normal","bold","lighter","bolder","RegExp","test","print","descent","fullfill","ninja","readyState","listeners","zIndex","_events","hasOwnProperty","nts","off","once","block","classic","diamond","open","oval","setAttributeNS","createElementNS","webkitTapHighlightColor","isNaN","defs","fx","fy","x1","y1","gradientTransform","stop-color","stop-opacity","isFinite","fillOpacity","documentMode","protocol","host","pathname","search","pattern","patternTransform","arrows","endPath","endMarker","startPath","startMarker","getElementsByTagName","markerHeight","markerWidth","orient","refX","refY","xlink:href","startdx","enddx","-",".","-.","-..",". ","- ","--","- .","--.","--..","square","butt","visibility","nodeValue","createTextNode","clip","clip-path","getAttribute","startString","endString","patternUnits","hide","show","remove","parentElement","clientWidth","clientHeight","def","toFront","toBack","stdDeviation","_blur","filter","removeAttribute","preserveAspectRatio","_viewBox","Error","xmlns","xmlns:xlink","_left","_top","renderfix","_vbSize","viewBox","getScreenCTM","createSVGMatrix","desc","fillpos","coordsize","rotation","flip","coordorigin","fillsize","position","size","clipRect","textpath","fontFamily","fontSize","fontWeight","fontStyle","weight","joinstyle","miterlimit","endcap","dashstyle","span","string","J","K","bbx","method","color2","colors","focus","focussize","focusposition","_oid","_viewBoxShift","skew","auxGetBBox","runtimeStyle","margin","Path","textpathok","styleSheets","createStyleSheet","addRule","namespaces","rvml","176","parse","input","getSymbol","startIndex","endIndex","getNextPath","flowSymb","trim","drawSVG","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","clean","FlowChart","constructChart","prevDisp","dispSymb","startWith","pathOk","yes","no","then","prevBreak","i0","i0len","line0","substr","currentLine","sub","parts","txtAndState","flowSymbols","lenS","realSymb","direction","condOpt","nextSymb","177","textMargin","yes_direction","no_direction","direction_yes","direction_no","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","212","flowchart","213","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","lineWidth","paperDom","214","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","condition","inputoutput","operation","subroutine","215","searchElement","TypeError","Number","lastIndexOf","216","217","218","219","220","innerWrap","221","jQuery","each","$this","html"],"mappings":"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","file":"1.1.js","sourcesContent":["webpackJsonp([1,4],{\n\n/***/ 1:\n/***/ function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\n\t  if (!options || typeof options === 'function') {\n\t    return defaultOptions;\n\t  }\n\t\n\t  var merged = {};\n\t  for (var attrname in defaultOptions) {\n\t    merged[attrname] = defaultOptions[attrname];\n\t  }\n\t\n\t  for (attrname in options) {\n\t    if (options[attrname]) {\n\t      if (typeof merged[attrname] === 'object') {\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n\t      } else {\n\t        merged[attrname] = options[attrname];\n\t      }\n\t    }\n\t  }\n\t  return merged;\n\t}\n\t\n\tfunction _inherits(ctor, superCtor) {\n\t  if (typeof(Object.create) === 'function') {\n\t    // implementation from standard node.js 'util' module\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  } else {\n\t    // old school shim for old browsers\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t}\n\t\n\t// move dependent functions to a container so that\n\t// they can be overriden easier in no jquery environment (node.js)\n\tmodule.exports = {\n\t  defaults: _defaults,\n\t  inherits: _inherits\n\t};\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(7);\n\tvar drawLine = drawAPI.drawLine;\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\n\t\n\tfunction Symbol(chart, options, symbol) {\n\t  this.chart = chart;\n\t  this.group = this.chart.paper.set();\n\t  this.symbol = symbol;\n\t  this.connectedTo = [];\n\t  this.symbolType = options.symbolType;\n\t  this.flowstate = (options.flowstate || 'future');\n\t\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\t\n\t  this.text = this.chart.paper.text(0, 0, options.text);\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\t\n\t  this.text.attr({\n\t    'text-anchor': 'start',\n\t    'x'          : this.getAttr('text-margin'),\n\t    'fill'       : this.getAttr('font-color'),\n\t    'font-size'  : this.getAttr('font-size')\n\t  });\n\t\n\t  var font  = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) this.text.attr({ 'font': font });\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { this.text.attr('href', options.link); }\n\t  if (options.target) { this.text.attr('target', options.target); }\n\t\n\t  var maxWidth = this.getAttr('maxWidth');\n\t  if (maxWidth) {\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\n\t    var words = options.text.split(' ');\n\t    var tempText = \"\";\n\t    for (var i=0, ii=words.length; i<ii; i++) {\n\t      var word = words[i];\n\t      this.text.attr(\"text\", tempText + \" \" + word);\n\t      if (this.text.getBBox().width > maxWidth) {\n\t        tempText += \"\\n\" + word;\n\t      } else {\n\t        tempText += \" \" + word;\n\t      }\n\t    }\n\t    this.text.attr(\"text\", tempText.substring(1));\n\t  }\n\t\n\t  this.group.push(this.text);\n\t\n\t  if (symbol) {\n\t    var tmpMargin = this.getAttr('text-margin');\n\t\n\t    symbol.attr({\n\t      'fill' : this.getAttr('fill'),\n\t      'stroke' : this.getAttr('element-color'),\n\t      'stroke-width' : this.getAttr('line-width'),\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\n\t    });\n\t\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t    if (options.link) { symbol.attr('href', options.link); }\n\t    if (options.target) { symbol.attr('target', options.target); }\n\t    if (options.key) { symbol.node.id = options.key; }\n\t\n\t    this.group.push(symbol);\n\t    symbol.insertBefore(this.text);\n\t\n\t    this.text.attr({\n\t      'y': symbol.getBBox().height/2\n\t    });\n\t\n\t    this.initialize();\n\t  }\n\t\n\t}\n\t\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\n\tSymbol.prototype.getAttr = function(attName) {\n\t  if (!this.chart) {\n\t    return undefined;\n\t  }\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n\t  var opt1;\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n\t  }\n\t  return (opt1 || opt2 || opt3);\n\t};\n\t\n\tSymbol.prototype.initialize = function() {\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\t\n\t  this.width = this.group.getBBox().width;\n\t  this.height = this.group.getBBox().height;\n\t};\n\t\n\tSymbol.prototype.getCenter = function() {\n\t  return {x: this.getX() + this.width/2,\n\t          y: this.getY() + this.height/2};\n\t};\n\t\n\tSymbol.prototype.getX = function() {\n\t  return this.group.getBBox().x;\n\t};\n\t\n\tSymbol.prototype.getY = function() {\n\t  return this.group.getBBox().y;\n\t};\n\t\n\tSymbol.prototype.shiftX = function(x) {\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.setX = function(x) {\n\t  this.group.transform('t' + x + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.shiftY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n\t};\n\t\n\tSymbol.prototype.setY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + y);\n\t};\n\t\n\tSymbol.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getBottom = function() {\n\t  var y = this.getY() + this.height;\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX();\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.render = function() {\n\t  if (this.next) {\n\t\n\t    var lineLength = this.getAttr('line-length');\n\t\n\t    if (this.next_direction === 'right') {\n\t\n\t      var rightPoint = this.getRight();\n\t\n\t      if (!this.next.isPositioned) {\n\t\n\t        this.next.setY(rightPoint.y - this.next.height/2);\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t        var self = this;\n\t        (function shift() {\n\t          var hasSymbolUnder = false;\n\t          var symb;\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t            symb = self.chart.symbols[i];\n\t\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (hasSymbolUnder) {\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\n\t            shift();\n\t          }\n\t        })();\n\t\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    } else {\n\t      var bottomPoint = this.getBottom();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.renderLines = function() {\n\t  if (this.next) {\n\t    if (this.next_direction) {\n\t      this.drawLineTo(this.next, '', this.next_direction);\n\t    } else {\n\t      this.drawLineTo(this.next);\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\n\t    this.connectedTo.push(symbol);\n\t  }\n\t\n\t  var x = this.getCenter().x,\n\t      y = this.getCenter().y,\n\t      right = this.getRight(),\n\t      bottom = this.getBottom(),\n\t      left = this.getLeft();\n\t\n\t  var symbolX = symbol.getCenter().x,\n\t      symbolY = symbol.getCenter().y,\n\t      symbolTop = symbol.getTop(),\n\t      symbolRight = symbol.getRight(),\n\t      symbolLeft = symbol.getLeft();\n\t\n\t  var isOnSameColumn = x === symbolX,\n\t      isOnSameLine = y === symbolY,\n\t      isUnder = y < symbolY,\n\t      isUpper = y > symbolY || this === symbol,\n\t      isLeft = x > symbolX,\n\t      isRight = x < symbolX;\n\t\n\t  var maxX = 0,\n\t      line,\n\t      lineLength = this.getAttr('line-length'),\n\t      lineWith = this.getAttr('line-width');\n\t\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n\t    line = drawLine(this.chart, right, symbolLeft, text);\n\t    this.rightStart = true;\n\t    symbol.leftEnd = true;\n\t    maxX = symbolLeft.x;\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n\t    line = drawLine(this.chart, left, symbolRight, text);\n\t    this.leftStart = true;\n\t    symbol.rightEnd = true;\n\t    maxX = symbolRight.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\n\t    if (this.leftEnd && isUpper) {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    } else {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    }\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((origin && origin === 'right') && isLeft) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'right') && isRight) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: symbolTop.x, y: right.y},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + lineLength/2;\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n\t    var diffX = left.x - lineLength/2;\n\t    if (symbolLeft.x < left.x) {\n\t      diffX = symbolLeft.x - lineLength/2;\n\t    }\n\t    line = drawLine(this.chart, left, [\n\t      {x: diffX, y: left.y},\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  } else if ((origin === 'left')) {\n\t    line = drawLine(this.chart, left, [\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  }\n\t\n\t  if (line) {\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n\t      var otherLine = this.chart.lines[l];\n\t      var len;\n\t\n\t      var ePath = otherLine.attr('path'),\n\t          lPath = line.attr('path');\n\t\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n\t        var newPath = [];\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\t\n\t        var line1_from_x = newPath[0][1];\n\t        var line1_from_y = newPath[0][2];\n\t        var line1_to_x = newPath[1][1];\n\t        var line1_to_y = newPath[1][2];\n\t\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n\t          var newLinePath = [];\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\t\n\t          var line2_from_x = newLinePath[0][1];\n\t          var line2_from_y = newLinePath[0][2];\n\t          var line2_to_x = newLinePath[1][1];\n\t          var line2_to_y = newLinePath[1][2];\n\t\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n\t          if (res.onLine1 && res.onLine2) {\n\t\n\t            var newSegment;\n\t            if (line2_from_y === line2_to_y) {\n\t              if (line2_from_x > line2_to_x) {\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            } else {\n\t              if (line2_from_y > line2_to_y) {\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            }\n\t\n\t            lP += 2;\n\t            len += 2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    this.chart.lines.push(line);\n\t  }\n\t\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n\t    this.chart.maxXFromLine = maxX;\n\t  }\n\t};\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\n\t  var i, len;\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [location.x, location.y];\n\t  for (i = 0, len = points.length; i < len; i++) {\n\t    pathValues.push(points[i].x);\n\t    pathValues.push(points[i].y);\n\t  }\n\t  var symbol = chart.paper.path(path, pathValues);\n\t  symbol.attr('stroke', chart.options['element-color']);\n\t  symbol.attr('stroke-width', chart.options['line-width']);\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) symbol.attr({ 'font': font });\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\n\t\n\t  return symbol;\n\t}\n\t\n\tfunction drawLine(chart, from, to, text) {\n\t  var i, len;\n\t\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\n\t    to = [to];\n\t  }\n\t\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [from.x, from.y];\n\t  for (i = 0, len = to.length; i < len; i++) {\n\t    pathValues.push(to[i].x);\n\t    pathValues.push(to[i].y);\n\t  }\n\t\n\t  var line = chart.paper.path(path, pathValues);\n\t  line.attr({\n\t    stroke: chart.options['line-color'],\n\t    'stroke-width': chart.options['line-width'],\n\t    'arrow-end': chart.options['arrow-end']\n\t  });\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) line.attr({ 'font': font });\n\t  if (fontF) line.attr({ 'font-family': fontF });\n\t  if (fontW) line.attr({ 'font-weight': fontW });\n\t\n\t  if (text) {\n\t\n\t    var centerText = false;\n\t\n\t    var textPath = chart.paper.text(0, 0, text);\n\t\n\t    var isHorizontal = false;\n\t    var firstTo = to[0];\n\t\n\t    if (from.y === firstTo.y) {\n\t      isHorizontal = true;\n\t    }\n\t\n\t    var x = 0,\n\t        y = 0;\n\t\n\t    if (centerText) {\n\t      if (from.x > firstTo.x) {\n\t        x = from.x - (from.x - firstTo.x)/2;\n\t      } else {\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\n\t      }\n\t\n\t      if (from.y > firstTo.y) {\n\t        y = from.y - (from.y - firstTo.y)/2;\n\t      } else {\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\n\t      }\n\t\n\t      if (isHorizontal) {\n\t        x -= textPath.getBBox().width/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin'];\n\t        y -= textPath.getBBox().height/2;\n\t      }\n\t    } else {\n\t      x = from.x;\n\t      y = from.y;\n\t\n\t      if (isHorizontal) {\n\t        x += chart.options['text-margin']/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin']/2;\n\t        y += chart.options['text-margin'];\n\t      }\n\t    }\n\t\n\t    textPath.attr({\n\t      'text-anchor': 'start',\n\t      'font-size': chart.options['font-size'],\n\t      'fill': chart.options['font-color'],\n\t      x: x,\n\t      y: y\n\t    });\n\t\n\t    if (font) textPath.attr({ 'font': font });\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\n\t  }\n\t\n\t  return line;\n\t}\n\t\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t  var denominator, a, b, numerator1, numerator2, result = {\n\t    x: null,\n\t    y: null,\n\t    onLine1: false,\n\t    onLine2: false\n\t  };\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n\t  if (denominator === 0) {\n\t    return result;\n\t  }\n\t  a = line1StartY - line2StartY;\n\t  b = line1StartX - line2StartX;\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n\t  a = numerator1 / denominator;\n\t  b = numerator2 / denominator;\n\t\n\t  // if we cast these lines infinitely in both directions, they intersect here:\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\n\t  /*\n\t  // it is worth noting that this should be the same as:\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\n\t  */\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\n\t  if (a > 0 && a < 1) {\n\t    result.onLine1 = true;\n\t  }\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\n\t  if (b > 0 && b < 1) {\n\t    result.onLine2 = true;\n\t  }\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t\tdrawPath: drawPath,\n\t\tdrawLine: drawLine,\n\t\tcheckLineIntersection: checkLineIntersection\n\t};\n\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function t(e,r){ true?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports.Raphael=r():e.Raphael=r()}(this,function(){return function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p=\"\",e(0)}([function(t,e,r){var i,n;i=[r(1),r(3),r(4)],n=function(t){return t}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(2)],n=function(t){function e(r){if(e.is(r,\"function\"))return w?r():t.on(\"raphael.DOMload\",r);if(e.is(r,Q))return e._engine.create[z](e,r.splice(0,3+e.is(r[0],$))).add(r);var i=Array.prototype.slice.call(arguments,0);if(e.is(i[i.length-1],\"function\")){var n=i.pop();return w?n.call(e._engine.create[z](e,i)):t.on(\"raphael.DOMload\",function(){n.call(e._engine.create[z](e,i))})}return e._engine.create[z](e,arguments)}function r(t){if(\"function\"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var i in t)t[T](i)&&(e[i]=r(t[i]));return e}function i(t,e){for(var r=0,i=t.length;i>r;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}function n(t,e,r){function n(){var a=Array.prototype.slice.call(arguments,0),s=a.join(\"␀\"),o=n.cache=n.cache||{},l=n.count=n.count||[];return o[T](s)?(i(l,s),r?r(o[s]):o[s]):(l.length>=1e3&&delete o[l.shift()],l.push(s),o[s]=t[z](e,a),r?r(o[s]):o[s])}return n}function a(){return this.hex}function s(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function o(t,e,r,i,n){var a=-3*e+9*r-9*i+3*n,s=t*a+6*e-12*r+6*i;return t*s-3*e+3*r}function l(t,e,r,i,n,a,s,l,h){null==h&&(h=1),h=h>1?1:0>h?0:h;for(var u=h/2,c=12,f=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,g=0;c>g;g++){var x=u*f[g]+u,v=o(x,t,r,n,s),y=o(x,e,i,a,l),m=v*v+y*y;d+=p[g]*Y.sqrt(m)}return u*d}function h(t,e,r,i,n,a,s,o,h){if(!(0>h||l(t,e,r,i,n,a,s,o)<h)){var u=1,c=u/2,f=u-c,p,d=.01;for(p=l(t,e,r,i,n,a,s,o,f);H(p-h)>d;)c/=2,f+=(h>p?1:-1)*c,p=l(t,e,r,i,n,a,s,o,f);return f}}function u(t,e,r,i,n,a,s,o){if(!(W(t,r)<G(n,s)||G(t,r)>W(n,s)||W(e,i)<G(a,o)||G(e,i)>W(a,o))){var l=(t*i-e*r)*(n-s)-(t-r)*(n*o-a*s),h=(t*i-e*r)*(a-o)-(e-i)*(n*o-a*s),u=(t-r)*(a-o)-(e-i)*(n-s);if(u){var c=l/u,f=h/u,p=+c.toFixed(2),d=+f.toFixed(2);if(!(p<+G(t,r).toFixed(2)||p>+W(t,r).toFixed(2)||p<+G(n,s).toFixed(2)||p>+W(n,s).toFixed(2)||d<+G(e,i).toFixed(2)||d>+W(e,i).toFixed(2)||d<+G(a,o).toFixed(2)||d>+W(a,o).toFixed(2)))return{x:c,y:f}}}}function c(t,e){return p(t,e)}function f(t,e){return p(t,e,1)}function p(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=l.apply(0,t),o=l.apply(0,r),h=W(~~(s/5),1),c=W(~~(o/5),1),f=[],p=[],d={},g=i?0:[],x=0;h+1>x;x++){var v=e.findDotsAtSegment.apply(e,t.concat(x/h));f.push({x:v.x,y:v.y,t:x/h})}for(x=0;c+1>x;x++)v=e.findDotsAtSegment.apply(e,r.concat(x/c)),p.push({x:v.x,y:v.y,t:x/c});for(x=0;h>x;x++)for(var y=0;c>y;y++){var m=f[x],b=f[x+1],_=p[y],w=p[y+1],k=H(b.x-m.x)<.001?\"y\":\"x\",B=H(w.x-_.x)<.001?\"y\":\"x\",C=u(m.x,m.y,b.x,b.y,_.x,_.y,w.x,w.y);if(C){if(d[C.x.toFixed(4)]==C.y.toFixed(4))continue;d[C.x.toFixed(4)]=C.y.toFixed(4);var S=m.t+H((C[k]-m[k])/(b[k]-m[k]))*(b.t-m.t),T=_.t+H((C[B]-_[B])/(w[B]-_[B]))*(w.t-_.t);S>=0&&1.001>=S&&T>=0&&1.001>=T&&(i?g++:g.push({x:C.x,y:C.y,t1:G(S,1),t2:G(T,1)}))}}return g}function d(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,d,g=i?0:[],x=0,v=t.length;v>x;x++){var y=t[x];if(\"M\"==y[0])n=l=y[1],a=h=y[2];else{\"C\"==y[0]?(f=[n,a].concat(y.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var m=0,b=r.length;b>m;m++){var _=r[m];if(\"M\"==_[0])s=u=_[1],o=c=_[2];else{\"C\"==_[0]?(d=[s,o].concat(_.slice(1)),s=d[6],o=d[7]):(d=[s,o,s,o,u,c,u,c],s=u,o=c);var w=p(f,d,i);if(i)g+=w;else{for(var k=0,B=w.length;B>k;k++)w[k].segment1=x,w[k].segment2=m,w[k].bez1=f,w[k].bez2=d;g=g.concat(w)}}}}}return g}function g(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function x(){return this.x+I+this.y}function v(){return this.x+I+this.y+I+this.width+\" × \"+this.height}function y(t,e,r,i,n,a){function s(t){return((c*t+u)*t+h)*t}function o(t,e){var r=l(t,e);return((d*r+p)*r+f)*r}function l(t,e){var r,i,n,a,o,l;for(n=t,l=0;8>l;l++){if(a=s(n)-t,H(a)<e)return n;if(o=(3*c*n+2*u)*n+h,H(o)<1e-6)break;n-=a/o}if(r=0,i=1,n=t,r>n)return r;if(n>i)return i;for(;i>r;){if(a=s(n),H(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}var h=3*e,u=3*(i-e)-h,c=1-h-u,f=3*r,p=3*(n-r)-f,d=1-f-p;return o(t,1/(200*a))}function m(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[T](n)&&(i[ht(n)]=t[n],r.push(ht(n)));r.sort(Bt)}this.anim=i,this.top=r[r.length-1],this.percents=r}function b(r,i,n,a,s,o){n=ht(n);var l,h,u,c=[],f,p,d,x=r.ms,v={},m={},b={};if(a)for(w=0,B=Ee.length;B>w;w++){var _=Ee[w];if(_.el.id==i.id&&_.anim==r){_.percent!=n?(Ee.splice(w,1),u=1):h=_,i.attr(_.totalOrigin);break}}else a=+m;for(var w=0,B=r.percents.length;B>w;w++){if(r.percents[w]==n||r.percents[w]>a*r.top){n=r.percents[w],p=r.percents[w-1]||0,x=x/r.top*(n-p),f=r.percents[w+1],l=r.anim[n];break}a&&i.attr(r.anim[r.percents[w]])}if(l){if(h)h.initstatus=a,h.start=new Date-h.ms*a;else{for(var C in l)if(l[T](C)&&(pt[T](C)||i.paper.customAttributes[T](C)))switch(v[C]=i.attr(C),null==v[C]&&(v[C]=ft[C]),m[C]=l[C],pt[C]){case $:b[C]=(m[C]-v[C])/x;break;case\"colour\":v[C]=e.getRGB(v[C]);var S=e.getRGB(m[C]);b[C]={r:(S.r-v[C].r)/x,g:(S.g-v[C].g)/x,b:(S.b-v[C].b)/x};break;case\"path\":var A=Qt(v[C],m[C]),E=A[1];for(v[C]=A[0],b[C]=[],w=0,B=v[C].length;B>w;w++){b[C][w]=[0];for(var M=1,N=v[C][w].length;N>M;M++)b[C][w][M]=(E[w][M]-v[C][w][M])/x}break;case\"transform\":var L=i._,z=le(L[C],m[C]);if(z)for(v[C]=z.from,m[C]=z.to,b[C]=[],b[C].real=!0,w=0,B=v[C].length;B>w;w++)for(b[C][w]=[v[C][w][0]],M=1,N=v[C][w].length;N>M;M++)b[C][w][M]=(m[C][w][M]-v[C][w][M])/x;else{var F=i.matrix||new g,R={_:{transform:L.transform},getBBox:function(){return i.getBBox(1)}};v[C]=[F.a,F.b,F.c,F.d,F.e,F.f],se(R,m[C]),m[C]=R._.transform,b[C]=[(R.matrix.a-F.a)/x,(R.matrix.b-F.b)/x,(R.matrix.c-F.c)/x,(R.matrix.d-F.d)/x,(R.matrix.e-F.e)/x,(R.matrix.f-F.f)/x]}break;case\"csv\":var I=j(l[C])[q](k),D=j(v[C])[q](k);if(\"clip-rect\"==C)for(v[C]=D,b[C]=[],w=D.length;w--;)b[C][w]=(I[w]-v[C][w])/x;m[C]=I;break;default:for(I=[][P](l[C]),D=[][P](v[C]),b[C]=[],w=i.paper.customAttributes[C].length;w--;)b[C][w]=((I[w]||0)-(D[w]||0))/x}var V=l.easing,O=e.easing_formulas[V];if(!O)if(O=j(V).match(st),O&&5==O.length){var Y=O;O=function(t){return y(t,+Y[1],+Y[2],+Y[3],+Y[4],x)}}else O=St;if(d=l.start||r.start||+new Date,_={anim:r,percent:n,timestamp:d,start:d+(r.del||0),status:0,initstatus:a||0,stop:!1,ms:x,easing:O,from:v,diff:b,to:m,el:i,callback:l.callback,prev:p,next:f,repeat:o||r.times,origin:i.attr(),totalOrigin:s},Ee.push(_),a&&!h&&!u&&(_.stop=!0,_.start=new Date-x*a,1==Ee.length))return Ne();u&&(_.start=new Date-_.ms*a),1==Ee.length&&Me(Ne)}t(\"raphael.anim.start.\"+i.id,i,r)}}function _(t){for(var e=0;e<Ee.length;e++)Ee[e].el.paper==t&&Ee.splice(e--,1)}e.version=\"2.2.0\",e.eve=t;var w,k=/[, ]+/,B={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},C=/\\{(\\d+)\\}/g,S=\"prototype\",T=\"hasOwnProperty\",A={doc:document,win:window},E={was:Object.prototype[T].call(A.win,\"Raphael\"),is:A.win.Raphael},M=function(){this.ca=this.customAttributes={}},N,L=\"appendChild\",z=\"apply\",P=\"concat\",F=\"ontouchstart\"in A.win||A.win.DocumentTouch&&A.doc instanceof DocumentTouch,R=\"\",I=\" \",j=String,q=\"split\",D=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[q](I),V={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},O=j.prototype.toLowerCase,Y=Math,W=Y.max,G=Y.min,H=Y.abs,X=Y.pow,U=Y.PI,$=\"number\",Z=\"string\",Q=\"array\",J=\"toString\",K=\"fill\",tt=Object.prototype.toString,et={},rt=\"push\",it=e._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,nt=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,at={NaN:1,Infinity:1,\"-Infinity\":1},st=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,ot=Y.round,lt=\"setAttribute\",ht=parseFloat,ut=parseInt,ct=j.prototype.toUpperCase,ft=e._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0,\"class\":\"\"},pt=e._availableAnimAttrs={blur:$,\"clip-rect\":\"csv\",cx:$,cy:$,fill:\"colour\",\"fill-opacity\":$,\"font-size\":$,height:$,opacity:$,path:\"path\",r:$,rx:$,ry:$,stroke:\"colour\",\"stroke-opacity\":$,\"stroke-width\":$,transform:\"transform\",width:$,x:$,y:$},dt=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,gt=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,xt={hs:1,rg:1},vt=/,?([achlmqrstvxz]),?/gi,yt=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,mt=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,bt=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,_t=e._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,wt={},kt=function(t,e){return t.key-e.key},Bt=function(t,e){return ht(t)-ht(e)},Ct=function(){},St=function(t){return t},Tt=e._rectPath=function(t,e,r,i,n){return n?[[\"M\",t+n,e],[\"l\",r-2*n,0],[\"a\",n,n,0,0,1,n,n],[\"l\",0,i-2*n],[\"a\",n,n,0,0,1,-n,n],[\"l\",2*n-r,0],[\"a\",n,n,0,0,1,-n,-n],[\"l\",0,2*n-i],[\"a\",n,n,0,0,1,n,-n],[\"z\"]]:[[\"M\",t,e],[\"l\",r,0],[\"l\",0,i],[\"l\",-r,0],[\"z\"]]},At=function(t,e,r,i){return null==i&&(i=r),[[\"M\",t,e],[\"m\",0,-i],[\"a\",r,i,0,1,1,0,2*i],[\"a\",r,i,0,1,1,0,-2*i],[\"z\"]]},Et=e._getPath={path:function(t){return t.attr(\"path\")},circle:function(t){var e=t.attrs;return At(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return At(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return Tt(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return Tt(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return Tt(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return Tt(e.x,e.y,e.width,e.height)}},Mt=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(t=Qt(t),n=0,s=t.length;s>n;n++)for(l=t[n],a=1,o=l.length;o>a;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=A,e.type=A.win.SVGAngle||A.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==e.type){var Nt=A.doc.createElement(\"div\"),Lt;if(Nt.innerHTML='<v:shape adj=\"1\"/>',Lt=Nt.firstChild,Lt.style.behavior=\"url(#default#VML)\",!Lt||\"object\"!=typeof Lt.adj)return e.type=R;Nt=null}e.svg=!(e.vml=\"VML\"==e.type),e._Paper=M,e.fn=N=M.prototype=e.prototype,e._id=0,e.is=function(t,e){return e=O.call(e),\"finite\"==e?!at[T](+t):\"array\"==e?t instanceof Array:\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||\"array\"==e&&Array.isArray&&Array.isArray(t)||tt.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*Y.atan2(-l,-o)/U+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*U/180},e.deg=function(t){return Math.round(180*t/U%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,\"finite\")?i:10,e.is(t,Q)){for(var n=t.length;n--;)if(H(t[n]-r)<=i)return t[n]}else{t=+t;var a=r%t;if(i>a)return r-a;if(a>t-i)return r-a+t}return r};var zt=e.createUUID=function(t,e){return function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(t,e).toUpperCase()}}(/[xy]/g,function(t){var e=16*Y.random()|0,r=\"x\"==t?e:3&e|8;return r.toString(16)});e.setWindow=function(r){t(\"raphael.setWindow\",e,A.win,r),A.win=r,A.doc=A.win.document,e._engine.initWin&&e._engine.initWin(A.win)};var Pt=function(t){if(e.vml){var r=/^\\s+|\\s+$/g,i;try{var a=new ActiveXObject(\"htmlfile\");a.write(\"<body>\"),a.close(),i=a.body}catch(s){i=createPopup().document.body}var o=i.createTextRange();Pt=n(function(t){try{i.style.color=j(t).replace(r,R);var e=o.queryCommandValue(\"ForeColor\");return e=(255&e)<<16|65280&e|(16711680&e)>>>16,\"#\"+(\"000000\"+e.toString(16)).slice(-6)}catch(n){return\"none\"}})}else{var l=A.doc.createElement(\"i\");l.title=\"Raphaël Colour Picker\",l.style.display=\"none\",A.doc.body.appendChild(l),Pt=n(function(t){return l.style.color=t,A.doc.defaultView.getComputedStyle(l,R).getPropertyValue(\"color\")})}return Pt(t)},Ft=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},Rt=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},It=function(){return this.hex},jt=function(t,r,i){if(null==r&&e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,Z)){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},qt=function(t,r,i,n){t*=255,r*=255,i*=255;var a={r:t,g:r,b:i,hex:e.rgb(t,r,i),toString:It};return e.is(n,\"finite\")&&(a.opacity=n),a};e.color=function(t){var r;return e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,\"string\")&&(t=e.getRGB(t)),e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:\"none\"},t.r=t.g=t.b=t.h=t.s=t.v=t.l=-1)),t.toString=It,t},e.hsb2rgb=function(t,e,r,i){this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),t*=360;var n,a,s,o,l;return t=t%360/60,l=r*e,o=l*(1-H(t%2-1)),n=a=s=r-l,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.hsl2rgb=function(t,e,r,i){this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),t*=360;var n,a,s,o,l;return t=t%360/60,l=2*e*(.5>r?r:1-r),o=l*(1-H(t%2-1)),n=a=s=r-l/2,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.rgb2hsb=function(t,e,r){r=jt(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s;return a=W(t,e,r),s=a-G(t,e,r),i=0==s?null:a==t?(e-r)/s:a==e?(r-t)/s+2:(t-e)/s+4,i=(i+360)%6*60/360,n=0==s?0:s/a,{h:i,s:n,b:a,toString:Ft}},e.rgb2hsl=function(t,e,r){r=jt(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s,o,l;return s=W(t,e,r),o=G(t,e,r),l=s-o,i=0==l?null:s==t?(e-r)/l:s==e?(r-t)/l+2:(t-e)/l+4,i=(i+360)%6*60/360,a=(s+o)/2,n=0==l?0:.5>a?l/(2*a):l/(2-2*a),{h:i,s:n,l:a,toString:Rt}},e._path2string=function(){return this.join(\",\").replace(vt,\"$1\")};var Dt=e._preload=function(t,e){var r=A.doc.createElement(\"img\");r.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",r.onload=function(){e.call(this),this.onload=null,A.doc.body.removeChild(this)},r.onerror=function(){A.doc.body.removeChild(this)},A.doc.body.appendChild(r),r.src=t};e.getRGB=n(function(t){if(!t||(t=j(t)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:a};if(\"none\"==t)return{r:-1,g:-1,b:-1,hex:\"none\",toString:a};!(xt[T](t.toLowerCase().substring(0,2))||\"#\"==t.charAt())&&(t=Pt(t));var r,i,n,s,o,l,h,u=t.match(nt);return u?(u[2]&&(s=ut(u[2].substring(5),16),n=ut(u[2].substring(3,5),16),i=ut(u[2].substring(1,3),16)),u[3]&&(s=ut((l=u[3].charAt(3))+l,16),n=ut((l=u[3].charAt(2))+l,16),i=ut((l=u[3].charAt(1))+l,16)),u[4]&&(h=u[4][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),\"rgba\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100)),u[5]?(h=u[5][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),(\"deg\"==h[0].slice(-3)||\"°\"==h[0].slice(-1))&&(i/=360),\"hsba\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100),e.hsb2rgb(i,n,s,o)):u[6]?(h=u[6][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),(\"deg\"==h[0].slice(-3)||\"°\"==h[0].slice(-1))&&(i/=360),\"hsla\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100),e.hsl2rgb(i,n,s,o)):(u={r:i,g:n,b:s,toString:a},u.hex=\"#\"+(16777216|s|n<<8|i<<16).toString(16).slice(1),e.is(o,\"finite\")&&(u.opacity=o),u)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:a}},e),e.hsb=n(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=n(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=n(function(t,e,r){function i(t){return t+.5|0}return\"#\"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=Vt(t);if(r.arr)return Yt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,Q)&&e.is(t[0],Q)&&(n=Yt(t)),n.length||j(t).replace(yt,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(bt,function(t,e){e&&a.push(+e)}),\"m\"==s&&a.length>2&&(n.push([e][P](a.splice(0,2))),s=\"l\",e=\"m\"==e?\"l\":\"L\"),\"r\"==s)n.push([e][P](a));else for(;a.length>=i[s]&&(n.push([e][P](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=Yt(n),n},e.parseTransformString=n(function(t){if(!t)return null;var r={r:3,s:4,t:2,m:6},i=[];return e.is(t,Q)&&e.is(t[0],Q)&&(i=Yt(t)),i.length||j(t).replace(mt,function(t,e,r){var n=[],a=O.call(e);r.replace(bt,function(t,e){e&&n.push(+e)}),i.push([e][P](n))}),i.toString=e._path2string,i});var Vt=function(t){var e=Vt.ps=Vt.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[T](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=X(h,3),c=X(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,x=t+2*l*(r-t)+f*(n-2*r+t),v=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,_=h*e+l*i,w=h*n+l*s,k=h*a+l*o,B=90-180*Y.atan2(x-y,v-m)/U;return(x>y||m>v)&&(B+=180),{x:d,y:g,m:{x:x,y:v},n:{x:y,y:m},start:{x:b,y:_},end:{x:w,y:k},alpha:B}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,\"array\")||(t=[t,r,i,n,a,s,o,l]);var h=Zt.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return d(t,e)},e.pathIntersectionNumber=function(t,e){return d(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&d(t,[[\"M\",r,i],[\"H\",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+e+\"” of removed object\",e)}};var Ot=e.pathBBox=function(t){var e=Vt(t);if(e.bbox)return r(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};t=Qt(t);for(var i=0,n=0,a=[],s=[],o,l=0,h=t.length;h>l;l++)if(o=t[l],\"M\"==o[0])i=o[1],n=o[2],a.push(i),s.push(n);else{var u=Zt(i,n,o[1],o[2],o[3],o[4],o[5],o[6]);a=a[P](u.min.x,u.max.x),s=s[P](u.min.y,u.max.y),i=o[5],n=o[6]}var c=G[z](0,a),f=G[z](0,s),p=W[z](0,a),d=W[z](0,s),g=p-c,x=d-f,v={x:c,y:f,x2:p,y2:d,width:g,height:x,cx:c+g/2,cy:f+x/2};return e.bbox=r(v),v},Yt=function(t){var i=r(t);return i.toString=e._path2string,i},Wt=e._pathToRelative=function(t){var r=Vt(t);if(r.rel)return Yt(r.rel);e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(n=t[0][1],a=t[0][2],s=n,o=a,l++,i.push([\"M\",n,a]));for(var h=l,u=t.length;u>h;h++){var c=i[h]=[],f=t[h];if(f[0]!=O.call(f[0]))switch(c[0]=O.call(f[0]),c[0]){case\"a\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case\"v\":c[1]=+(f[1]-a).toFixed(3);break;case\"m\":s=f[1],o=f[2];default:for(var p=1,d=f.length;d>p;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],\"m\"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,x=f.length;x>g;g++)i[h][g]=f[g]}var v=i[h].length;switch(i[h][0]){case\"z\":n=s,a=o;break;case\"h\":n+=+i[h][v-1];break;case\"v\":a+=+i[h][v-1];break;default:n+=+i[h][v-2],a+=+i[h][v-1]}}return i.toString=e._path2string,r.rel=Yt(i),i},Gt=e._pathToAbsolute=function(t){var r=Vt(t);if(r.abs)return Yt(r.abs);if(e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t)),!t||!t.length)return[[\"M\",0,0]];var i=[],n=0,a=0,o=0,l=0,h=0;\"M\"==t[0][0]&&(n=+t[0][1],a=+t[0][2],o=n,l=a,h++,i[0]=[\"M\",n,a]);for(var u=3==t.length&&\"M\"==t[0][0]&&\"R\"==t[1][0].toUpperCase()&&\"Z\"==t[2][0].toUpperCase(),c,f,p=h,d=t.length;d>p;p++){if(i.push(c=[]),f=t[p],f[0]!=ct.call(f[0]))switch(c[0]=ct.call(f[0]),c[0]){case\"A\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]+n),c[7]=+(f[7]+a);break;case\"V\":c[1]=+f[1]+a;break;case\"H\":c[1]=+f[1]+n;break;case\"R\":for(var g=[n,a][P](f.slice(1)),x=2,v=g.length;v>x;x++)g[x]=+g[x]+n,g[++x]=+g[x]+a;i.pop(),i=i[P](s(g,u));break;case\"M\":o=+f[1]+n,l=+f[2]+a;default:for(x=1,v=f.length;v>x;x++)c[x]=+f[x]+(x%2?n:a)}else if(\"R\"==f[0])g=[n,a][P](f.slice(1)),i.pop(),i=i[P](s(g,u)),c=[\"R\"][P](f.slice(-2));else for(var y=0,m=f.length;m>y;y++)c[y]=f[y];switch(c[0]){case\"Z\":n=o,a=l;break;case\"H\":n=c[1];break;case\"V\":a=c[1];break;case\"M\":o=c[c.length-2],l=c[c.length-1];default:n=c[c.length-2],a=c[c.length-1]}}return i.toString=e._path2string,r.abs=Yt(i),i},Ht=function(t,e,r,i){return[t,e,r,i,r,i]},Xt=function(t,e,r,i,n,a){var s=1/3,o=2/3;return[s*t+o*r,s*e+o*i,s*n+o*r,s*a+o*i,n,a]},Ut=function(t,e,r,i,a,s,o,l,h,u){var c=120*U/180,f=U/180*(+a||0),p=[],d,g=n(function(t,e,r){var i=t*Y.cos(r)-e*Y.sin(r),n=t*Y.sin(r)+e*Y.cos(r);return{x:i,y:n}});if(u)S=u[0],T=u[1],B=u[2],C=u[3];else{d=g(t,e,-f),t=d.x,e=d.y,d=g(l,h,-f),l=d.x,h=d.y;var x=Y.cos(U/180*a),v=Y.sin(U/180*a),y=(t-l)/2,m=(e-h)/2,b=y*y/(r*r)+m*m/(i*i);b>1&&(b=Y.sqrt(b),r=b*r,i=b*i);var _=r*r,w=i*i,k=(s==o?-1:1)*Y.sqrt(H((_*w-_*m*m-w*y*y)/(_*m*m+w*y*y))),B=k*r*m/i+(t+l)/2,C=k*-i*y/r+(e+h)/2,S=Y.asin(((e-C)/i).toFixed(9)),T=Y.asin(((h-C)/i).toFixed(9));S=B>t?U-S:S,T=B>l?U-T:T,0>S&&(S=2*U+S),0>T&&(T=2*U+T),o&&S>T&&(S-=2*U),!o&&T>S&&(T-=2*U)}var A=T-S;if(H(A)>c){var E=T,M=l,N=h;T=S+c*(o&&T>S?1:-1),l=B+r*Y.cos(T),h=C+i*Y.sin(T),p=Ut(l,h,r,i,a,0,o,M,N,[T,E,B,C])}A=T-S;var L=Y.cos(S),z=Y.sin(S),F=Y.cos(T),R=Y.sin(T),I=Y.tan(A/4),j=4/3*r*I,D=4/3*i*I,V=[t,e],O=[t+j*z,e-D*L],W=[l+j*R,h-D*F],G=[l,h];if(O[0]=2*V[0]-O[0],O[1]=2*V[1]-O[1],u)return[O,W,G][P](p);p=[O,W,G][P](p).join()[q](\",\");for(var X=[],$=0,Z=p.length;Z>$;$++)X[$]=$%2?g(p[$-1],p[$],f).y:g(p[$],p[$+1],f).x;return X},$t=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:X(h,3)*t+3*X(h,2)*l*r+3*h*l*l*n+X(l,3)*s,y:X(h,3)*e+3*X(h,2)*l*i+3*h*l*l*a+X(l,3)*o}},Zt=n(function(t,e,r,i,n,a,s,o){var l=n-2*r+t-(s-2*n+r),h=2*(r-t)-2*(n-r),u=t-r,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,p=[e,o],d=[t,s],g;return H(c)>\"1e12\"&&(c=.5),H(f)>\"1e12\"&&(f=.5),c>0&&1>c&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&1>f&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),l=a-2*i+e-(o-2*a+i),h=2*(i-e)-2*(a-i),u=e-i,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,H(c)>\"1e12\"&&(c=.5),H(f)>\"1e12\"&&(f=.5),c>0&&1>c&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&1>f&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),{min:{x:G[z](0,d),y:G[z](0,p)},max:{x:W[z](0,d),y:W[z](0,p)}}}),Qt=e._path2curve=n(function(t,e){var r=!e&&Vt(t);if(!e&&r.curve)return Yt(r.curve);for(var i=Gt(t),n=e&&Gt(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=(function(t,e,r){var i,n,a={T:1,Q:1};if(!t)return[\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in a)&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"][P](Ut[z](0,[e.x,e.y][P](t.slice(1))));break;case\"S\":\"C\"==r||\"S\"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=[\"C\",i,n][P](t.slice(1));break;case\"T\":\"Q\"==r||\"T\"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"][P](Xt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"][P](Xt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"][P](Ht(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"][P](Ht(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"][P](Ht(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"][P](Ht(e.x,e.y,e.X,e.Y))}return t}),l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]=\"A\",n&&(c[e]=\"A\"),t.splice(e++,0,[\"C\"][P](r.splice(0,6)));t.splice(e,1),g=W(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&\"M\"==t[s][0]&&\"M\"!=e[s][0]&&(e.splice(s,0,[\"M\",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],g=W(i.length,n&&n.length||0))},u=[],c=[],f=\"\",p=\"\",d=0,g=W(i.length,n&&n.length||0);g>d;d++){i[d]&&(f=i[d][0]),\"C\"!=f&&(u[d]=f,d&&(p=u[d-1])),i[d]=o(i[d],a,p),\"A\"!=u[d]&&\"C\"==f&&(u[d]=\"C\"),l(i,d),n&&(n[d]&&(f=n[d][0]),\"C\"!=f&&(c[d]=f,d&&(p=c[d-1])),n[d]=o(n[d],s,p),\"A\"!=c[d]&&\"C\"==f&&(c[d]=\"C\"),l(n,d)),h(i,n,a,s,d),h(n,i,s,a,d);var x=i[d],v=n&&n[d],y=x.length,m=n&&v.length;a.x=x[y-2],a.y=x[y-1],a.bx=ht(x[y-4])||a.x,a.by=ht(x[y-3])||a.y,s.bx=n&&(ht(v[m-4])||s.x),s.by=n&&(ht(v[m-3])||s.y),s.x=n&&v[m-2],s.y=n&&v[m-1]}return n||(r.curve=Yt(i)),n?[i,n]:i},null,Yt),Jt=e._parseDots=n(function(t){for(var r=[],i=0,n=t.length;n>i;i++){var a={},s=t[i].match(/^([^:]*):?([\\d\\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+\"%\"),r.push(a)}for(i=1,n=r.length-1;n>i;i++)if(!r[i].offset){for(var o=ht(r[i-1].offset||0),l=0,h=i+1;n>h;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n),l=ht(l);for(var u=(l-o)/(h-i+1);h>i;i++)o+=u,r[i].offset=o+\"%\"}return r}),Kt=e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)},te=e._tofront=function(t,e){e.top!==t&&(Kt(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},ee=e._toback=function(t,e){e.bottom!==t&&(Kt(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},re=e._insertafter=function(t,e,r){Kt(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},ie=e._insertbefore=function(t,e,r){Kt(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},ne=e.toMatrix=function(t,e){var r=Ot(t),i={_:{transform:R},getBBox:function(){return r}};return se(i,e),i.matrix},ae=e.transformPath=function(t,e){return Mt(t,ne(t,e))},se=e._extractTransform=function(t,r){if(null==r)return t._.transform;r=j(r).replace(/\\.{3}|\\u2026/g,t._.transform||R);var i=e.parseTransformString(r),n=0,a=0,s=0,o=1,l=1,h=t._,u=new g;if(h.transform=i||[],i)for(var c=0,f=i.length;f>c;c++){var p=i[c],d=p.length,x=j(p[0]).toLowerCase(),v=p[0]!=x,y=v?u.invert():0,m,b,_,w,k;\"t\"==x&&3==d?v?(m=y.x(0,0),b=y.y(0,0),_=y.x(p[1],p[2]),w=y.y(p[1],p[2]),u.translate(_-m,w-b)):u.translate(p[1],p[2]):\"r\"==x?2==d?(k=k||t.getBBox(1),u.rotate(p[1],k.x+k.width/2,k.y+k.height/2),n+=p[1]):4==d&&(v?(_=y.x(p[2],p[3]),w=y.y(p[2],p[3]),u.rotate(p[1],_,w)):u.rotate(p[1],p[2],p[3]),n+=p[1]):\"s\"==x?2==d||3==d?(k=k||t.getBBox(1),u.scale(p[1],p[d-1],k.x+k.width/2,k.y+k.height/2),o*=p[1],l*=p[d-1]):5==d&&(v?(_=y.x(p[3],p[4]),w=y.y(p[3],p[4]),u.scale(p[1],p[2],_,w)):u.scale(p[1],p[2],p[3],p[4]),o*=p[1],l*=p[2]):\"m\"==x&&7==d&&u.add(p[1],p[2],p[3],p[4],p[5],p[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=n,h.dx=a=u.e,h.dy=s=u.f,1==o&&1==l&&!n&&h.bbox?(h.bbox.x+=+a,h.bbox.y+=+s):h.dirtyT=1},oe=function(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return[e,0,0];case\"m\":return[e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},le=e._equaliseTransform=function(t,r){r=j(r).replace(/\\.{3}|\\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i=W(t.length,r.length),n=[],a=[],s=0,o,l,h,u;i>s;s++){if(h=t[s]||oe(r[s]),u=r[s]||oe(h),h[0]!=u[0]||\"r\"==h[0].toLowerCase()&&(h[2]!=u[2]||h[3]!=u[3])||\"s\"==h[0].toLowerCase()&&(h[3]!=u[3]||h[4]!=u[4]))return;for(n[s]=[],a[s]=[],o=0,l=W(h.length,u.length);l>o;o++)o in h&&(n[s][o]=h[o]),o in u&&(a[s][o]=u[o])}return{from:n,to:a}};e._getContainer=function(t,r,i,n){var a;return a=null!=n||e.is(t,\"object\")?t:A.doc.getElementById(t),null!=a?a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}:void 0},e.pathToRelative=Wt,e._engine={},e.path2curve=Qt,e.matrix=function(t,e,r,i,n,a){return new g(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=Y.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s=[[],[],[]],o=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],l=[[t,r,n],[e,i,a],[0,0,1]],h,u,c,f;for(t&&t instanceof g&&(l=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),h=0;3>h;h++)for(u=0;3>u;u++){for(f=0,c=0;3>c;c++)f+=o[h][c]*l[c][u];s[h][u]=f}this.a=s[0][0],this.b=s[1][0],this.c=s[0][1],this.d=s[1][1],this.e=s[0][2],this.f=s[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new g(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new g(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){\n\tthis.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+Y.cos(t).toFixed(9),a=+Y.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[j.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=Y.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=Y.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return 0>s?(t.rotate=e.deg(Y.acos(s)),0>a&&(t.rotate=360-t.rotate)):t.rotate=e.deg(Y.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[q]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[e.dx,e.dy]:R)+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:R)+(e.rotate?\"r\"+[e.rotate,0,0]:R)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(g.prototype);for(var he=function(){this.returnValue=!1},ue=function(){return this.originalEvent.preventDefault()},ce=function(){this.cancelBubble=!0},fe=function(){return this.originalEvent.stopPropagation()},pe=function(t){var e=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,r=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},de=function(){return A.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=pe(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),F&&V[e]){var a=function(e){for(var n=pe(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;o>s;s++)if(e.targetTouches[s].target==t){e=e.targetTouches[s],e.originalEvent=a,e.preventDefault=ue,e.stopPropagation=fe;break}return r.call(i,e,n.x,n.y)};t.addEventListener(V[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),F&&V[e]&&t.removeEventListener(V[e],a,!1),!0}}:A.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||A.win.event;var e=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,n=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||he,t.stopPropagation=t.stopPropagation||ce,r.call(i,t,a,s)};t.attachEvent(\"on\"+e,n);var a=function(){return t.detachEvent(\"on\"+e,n),!0};return a}:void 0}(),ge=[],xe=function(e){for(var r=e.clientX,i=e.clientY,n=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,a=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,s,o=ge.length;o--;){if(s=ge[o],F&&e.touches){for(var l=e.touches.length,h;l--;)if(h=e.touches[l],h.identifier==s.el._drag.id){r=h.clientX,i=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var u=s.el.node,c,f=u.nextSibling,p=u.parentNode,d=u.style.display;A.win.opera&&p.removeChild(u),u.style.display=\"none\",c=s.el.paper.getElementByPoint(r,i),u.style.display=d,A.win.opera&&(f?p.insertBefore(u,f):p.appendChild(u)),c&&t(\"raphael.drag.over.\"+s.el.id,s.el,c),r+=a,i+=n,t(\"raphael.drag.move.\"+s.el.id,s.move_scope||s.el,r-s.el._drag.x,i-s.el._drag.y,r,i,e)}},ve=function(r){e.unmousemove(xe).unmouseup(ve);for(var i=ge.length,n;i--;)n=ge[i],n.el._drag={},t(\"raphael.drag.end.\"+n.el.id,n.end_scope||n.start_scope||n.move_scope||n.el,r);ge=[]},ye=e.el={},me=D.length;me--;)!function(t){e[t]=ye[t]=function(r,i){return e.is(r,\"function\")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:de(this.shape||this.node||A.doc,t,r,i||this)})),this},e[\"un\"+t]=ye[\"un\"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,\"undefined\")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(D[me]);ye.data=function(r,i){var n=wt[this.id]=wt[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,\"object\")){for(var a in r)r[T](a)&&this.data(a,r[a]);return this}return t(\"raphael.data.get.\"+this.id,this,n[r],r),n[r]}return n[r]=i,t(\"raphael.data.set.\"+this.id,this,i,r),this},ye.removeData=function(t){return null==t?wt[this.id]={}:wt[this.id]&&delete wt[this.id][t],this},ye.getData=function(){return r(wt[this.id]||{})},ye.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},ye.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var be=[];ye.drag=function(r,i,n,a,s,o){function l(l){(l.originalEvent||l).preventDefault();var h=l.clientX,u=l.clientY,c=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,f=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;if(this._drag.id=l.identifier,F&&l.touches)for(var p=l.touches.length,d;p--;)if(d=l.touches[p],this._drag.id=d.identifier,d.identifier==this._drag.id){h=d.clientX,u=d.clientY;break}this._drag.x=h+f,this._drag.y=u+c,!ge.length&&e.mousemove(xe).mouseup(ve),ge.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on(\"raphael.drag.start.\"+this.id,i),r&&t.on(\"raphael.drag.move.\"+this.id,r),n&&t.on(\"raphael.drag.end.\"+this.id,n),t(\"raphael.drag.start.\"+this.id,s||a||this,l.clientX+f,l.clientY+c,l)}return this._drag={},be.push({el:this,start:l}),this.mousedown(l),this},ye.onDragOver=function(e){e?t.on(\"raphael.drag.over.\"+this.id,e):t.unbind(\"raphael.drag.over.\"+this.id)},ye.undrag=function(){for(var r=be.length;r--;)be[r].el==this&&(this.unmousedown(be[r].start),be.splice(r,1),t.unbind(\"raphael.drag.*.\"+this.id));!be.length&&e.unmousemove(xe).unmouseup(ve),ge=[]},N.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},N.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},N.path=function(t){t&&!e.is(t,Z)&&!e.is(t[0],Q)&&(t+=R);var r=e._engine.path(e.format[z](e,arguments),this);return this.__set__&&this.__set__.push(r),r},N.image=function(t,r,i,n,a){var s=e._engine.image(this,t||\"about:blank\",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,j(i));return this.__set__&&this.__set__.push(n),n},N.set=function(t){!e.is(t,\"array\")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ze(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type=\"set\",r},N.setStart=function(t){this.__set__=t||this.set()},N.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},N.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},N.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},N.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},N.top=N.bottom=null,N.raphael=e;var _e=function(t){var e=t.getBoundingClientRect(),r=t.ownerDocument,i=r.body,n=r.documentElement,a=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,o=e.top+(A.win.pageYOffset||n.scrollTop||i.scrollTop)-a,l=e.left+(A.win.pageXOffset||n.scrollLeft||i.scrollLeft)-s;return{y:o,x:l}};N.getElementByPoint=function(t,e){var r=this,i=r.canvas,n=A.doc.elementFromPoint(t,e);if(A.win.opera&&\"svg\"==n.tagName){var a=_e(i),s=i.createSVGRect();s.x=t-a.x,s.y=e-a.y,s.width=s.height=1;var o=i.getIntersectionList(s,null);o.length&&(n=o[o.length-1])}if(!n)return null;for(;n.parentNode&&n!=i.parentNode&&!n.raphael;)n=n.parentNode;return n==r.canvas.parentNode&&(n=i),n=n&&n.raphael?r.getById(n.raphaelid):null},N.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},N.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},N.forEach=function(t,e){for(var r=this.bottom;r;){if(t.call(e,r)===!1)return this;r=r.next}return this},N.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},ye.isPointInside=function(t,r){var i=this.realPath=Et[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(i=e.transformPath(i,this.attr(\"transform\"))),e.isPointInsidePath(i,t,r)},ye.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Et[this.type](this),e.bboxwt=Ot(this.realPath),e.bboxwt.toString=v,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Et[this.type](this)),e.bbox=Ot(Mt(this.realPath,this.matrix)),e.bbox.toString=v,e.dirty=e.dirtyT=0),e.bbox)},ye.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},ye.glow=function(t){if(\"text\"==this.type)return null;t=t||{};var e={width:(t.width||10)+(+this.attr(\"stroke-width\")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||\"#000\"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Et[this.type](this);a=this.matrix?Mt(a,this.matrix):a;for(var s=1;r+1>s;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var we={},ke=function(t,r,i,n,a,s,o,u,c){return null==c?l(t,r,i,n,a,s,o,u):e.findDotsAtSegment(t,r,i,n,a,s,o,u,h(t,r,i,n,a,s,o,u,c))},Be=function(t,r){return function(i,n,a){i=Qt(i);for(var s,o,l,h,u=\"\",c={},f,p=0,d=0,g=i.length;g>d;d++){if(l=i[d],\"M\"==l[0])s=+l[1],o=+l[2];else{if(h=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6]),p+h>n){if(r&&!c.start){if(f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),u+=[\"C\"+f.start.x,f.start.y,f.m.x,f.m.y,f.x,f.y],a)return u;c.start=u,u=[\"M\"+f.x,f.y+\"C\"+f.n.x,f.n.y,f.end.x,f.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),{x:f.x,y:f.y,alpha:f.alpha}}p+=h,s=+l[5],o=+l[6]}u+=l.shift()+l}return c.end=u,f=t?p:r?c:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1),f.alpha&&(f={x:f.x,y:f.y,alpha:f.alpha}),f}},Ce=Be(1),Se=Be(),Te=Be(0,1);e.getTotalLength=Ce,e.getPointAtLength=Se,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Te(t,e).end;var i=Te(t,r,1);return e?Te(i,e).end:i},ye.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():Ce(t)},ye.getPointAtLength=function(t){var e=this.getPath();if(e)return Se(e,t)},ye.getPath=function(){var t,r=e._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return r&&(t=r(this)),t},ye.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Ae=e.easing_formulas={linear:function(t){return t},\"<\":function(t){return X(t,1.7)},\">\":function(t){return X(t,.48)},\"<>\":function(t){var e=.48-t/1.04,r=Y.sqrt(.1734+e*e),i=r-e,n=X(H(i),1/3)*(0>i?-1:1),a=-r-e,s=X(H(a),1/3)*(0>a?-1:1),o=n+s+.5;return 3*(1-o)*o*o+o*o*o},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:X(2,-10*t)*Y.sin((t-.075)*(2*U)/.3)+1},bounce:function(t){var e=7.5625,r=2.75,i;return 1/r>t?i=e*t*t:2/r>t?(t-=1.5/r,i=e*t*t+.75):2.5/r>t?(t-=2.25/r,i=e*t*t+.9375):(t-=2.625/r,i=e*t*t+.984375),i}};Ae.easeIn=Ae[\"ease-in\"]=Ae[\"<\"],Ae.easeOut=Ae[\"ease-out\"]=Ae[\">\"],Ae.easeInOut=Ae[\"ease-in-out\"]=Ae[\"<>\"],Ae[\"back-in\"]=Ae.backIn,Ae[\"back-out\"]=Ae.backOut;var Ee=[],Me=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},Ne=function(){for(var r=+new Date,i=0;i<Ee.length;i++){var n=Ee[i];if(!n.el.removed&&!n.paused){var a=r-n.start,s=n.ms,o=n.easing,l=n.from,h=n.diff,u=n.to,c=n.t,f=n.el,p={},d,g={},x;if(n.initstatus?(a=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*s,n.status=n.initstatus,delete n.initstatus,n.stop&&Ee.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(a/s))/n.anim.top,!(0>a))if(s>a){var v=o(a/s);for(var y in l)if(l[T](y)){switch(pt[y]){case $:d=+l[y]+v*s*h[y];break;case\"colour\":d=\"rgb(\"+[Le(ot(l[y].r+v*s*h[y].r)),Le(ot(l[y].g+v*s*h[y].g)),Le(ot(l[y].b+v*s*h[y].b))].join(\",\")+\")\";break;case\"path\":d=[];for(var m=0,_=l[y].length;_>m;m++){d[m]=[l[y][m][0]];for(var w=1,k=l[y][m].length;k>w;w++)d[m][w]=+l[y][m][w]+v*s*h[y][m][w];d[m]=d[m].join(I)}d=d.join(I);break;case\"transform\":if(h[y].real)for(d=[],m=0,_=l[y].length;_>m;m++)for(d[m]=[l[y][m][0]],w=1,k=l[y][m].length;k>w;w++)d[m][w]=l[y][m][w]+v*s*h[y][m][w];else{var B=function(t){return+l[y][t]+v*s*h[y][t]};d=[[\"m\",B(0),B(1),B(2),B(3),B(4),B(5)]]}break;case\"csv\":if(\"clip-rect\"==y)for(d=[],m=4;m--;)d[m]=+l[y][m]+v*s*h[y][m];break;default:var C=[][P](l[y]);for(d=[],m=f.paper.customAttributes[y].length;m--;)d[m]=+C[m]+v*s*h[y][m]}p[y]=d}f.attr(p),function(e,r,i){setTimeout(function(){t(\"raphael.anim.frame.\"+e,r,i)})}(f.id,f,n.anim)}else{if(function(r,i,n){setTimeout(function(){t(\"raphael.anim.frame.\"+i.id,i,n),t(\"raphael.anim.finish.\"+i.id,i,n),e.is(r,\"function\")&&r.call(i)})}(n.callback,f,n.anim),f.attr(u),Ee.splice(i--,1),n.repeat>1&&!n.next){for(x in u)u[T](x)&&(g[x]=n.totalOrigin[x]);n.el.attr(g),b(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&b(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Ee.length&&Me(Ne)},Le=function(t){return t>255?255:0>t?0:t};ye.animateWith=function(t,r,i,n,a,s){var o=this;if(o.removed)return s&&s.call(o),o;var l=i instanceof m?i:e.animation(i,n,a,s),h,u;b(l,o,l.percents[0],null,o.attr());for(var c=0,f=Ee.length;f>c;c++)if(Ee[c].anim==r&&Ee[c].el==t){Ee[f-1].start=Ee[c].start;break}return o},ye.onAnimation=function(e){return e?t.on(\"raphael.anim.frame.\"+this.id,e):t.unbind(\"raphael.anim.frame.\"+this.id),this},m.prototype.delay=function(t){var e=new m(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},m.prototype.repeat=function(t){var e=new m(this.anim,this.ms);return e.del=this.del,e.times=Y.floor(W(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof m)return t;!e.is(i,\"function\")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a={},s,o;for(o in t)t[T](o)&&ht(o)!=o&&ht(o)+\"%\"!=o&&(s=!0,a[o]=t[o]);if(s)return i&&(a.easing=i),n&&(a.callback=n),new m({100:a},r);if(n){var l=0;for(var h in t){var u=ut(h);t[T](h)&&u>l&&(l=u)}l+=\"%\",!t[l].callback&&(t[l].callback=n)}return new m(t,r)},ye.animate=function(t,r,i,n){var a=this;if(a.removed)return n&&n.call(a),a;var s=t instanceof m?t:e.animation(t,r,i,n);return b(s,a,s.percents[0],null,a.attr()),a},ye.setTime=function(t,e){return t&&null!=e&&this.status(t,G(e,t.ms)/t.ms),this},ye.status=function(t,e){var r=[],i=0,n,a;if(null!=e)return b(t,this,-1,G(e,1)),this;for(n=Ee.length;n>i;i++)if(a=Ee[i],a.el.id==this.id&&(!t||a.anim==t)){if(t)return a.status;r.push({anim:a.anim,status:a.status})}return t?0:r},ye.pause=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t(\"raphael.anim.pause.\"+this.id,this,Ee[r].anim)!==!1&&(Ee[r].paused=!0);return this},ye.resume=function(e){for(var r=0;r<Ee.length;r++)if(Ee[r].el.id==this.id&&(!e||Ee[r].anim==e)){var i=Ee[r];t(\"raphael.anim.resume.\"+this.id,this,i.anim)!==!1&&(delete i.paused,this.status(i.anim,i.status))}return this},ye.stop=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t(\"raphael.anim.stop.\"+this.id,this,Ee[r].anim)!==!1&&Ee.splice(r--,1);return this},t.on(\"raphael.remove\",_),t.on(\"raphael.clear\",_),ye.toString=function(){return\"Raphaël’s object\"};var ze=function(t){if(this.items=[],this.length=0,this.type=\"set\",t)for(var e=0,r=t.length;r>e;e++)!t[e]||t[e].constructor!=ye.constructor&&t[e].constructor!=ze||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},Pe=ze.prototype;Pe.push=function(){for(var t,e,r=0,i=arguments.length;i>r;r++)t=arguments[r],!t||t.constructor!=ye.constructor&&t.constructor!=ze||(e=this.items.length,this[e]=this.items[e]=t,this.length++);return this},Pe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},Pe.forEach=function(t,e){for(var r=0,i=this.items.length;i>r;r++)if(t.call(e,this.items[r],r)===!1)return this;return this};for(var Fe in ye)ye[T](Fe)&&(Pe[Fe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][z](r,e)})}}(Fe));return Pe.attr=function(t,r){if(t&&e.is(t,Q)&&e.is(t[0],\"object\"))for(var i=0,n=t.length;n>i;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;s>a;a++)this.items[a].attr(t,r);return this},Pe.clear=function(){for(;this.length;)this.pop()},Pe.splice=function(t,e,r){t=0>t?W(this.length+t,0):t,e=W(0,G(this.length-t,e));var i=[],n=[],a=[],s;for(s=2;s<arguments.length;s++)a.push(arguments[s]);for(s=0;e>s;s++)n.push(this[t+s]);for(;s<this.length-t;s++)i.push(this[t+s]);var o=a.length;for(s=0;s<o+i.length;s++)this.items[t+s]=this[t+s]=o>s?a[s]:i[s-o];for(s=this.items.length=this.length-=e-o;this[s];)delete this[s++];return new ze(n)},Pe.exclude=function(t){for(var e=0,r=this.length;r>e;e++)if(this[e]==t)return this.splice(e,1),!0},Pe.animate=function(t,r,i,n){(e.is(i,\"function\")||!i)&&(n=i||null);var a=this.items.length,s=a,o,l=this,h;if(!a)return this;n&&(h=function(){!--a&&n.call(l)}),i=e.is(i,Z)?i:h;var u=e.animation(t,r,i,h);for(o=this.items[--s].animate(u);s--;)this.items[s]&&!this.items[s].removed&&this.items[s].animateWith(o,u,u),this.items[s]&&!this.items[s].removed||a--;return this},Pe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},Pe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return t=G[z](0,t),e=G[z](0,e),r=W[z](0,r),i=W[z](0,i),{x:t,y:e,x2:r,y2:i,width:r-t,height:i-e}},Pe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;r>e;e++)t.push(this.items[e].clone());return t},Pe.toString=function(){return\"Raphaël‘s set\"},Pe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},Pe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){return i.isPointInside(t,e)?(r=!0,!1):void 0}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face[\"font-family\"];for(var i in t.face)t.face[T](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg){e.face[\"units-per-em\"]=ut(t.face[\"units-per-em\"],10);for(var n in t.glyphs)if(t.glyphs[T](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&\"M\"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[t]||\"M\"})+\"z\"},a.k)for(var s in a.k)a[T](s)&&(e.glyphs[n].k[s]=a.k[s])}}return t},N.getFont=function(t,r,i,n){if(n=n||\"normal\",i=i||\"normal\",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a=e.fonts[t];if(!a){var s=new RegExp(\"(^|\\\\s)\"+t.replace(/[^\\w\\d\\s+!~.:_-]/g,R)+\"(\\\\s|$)\",\"i\");for(var o in e.fonts)if(e.fonts[T](o)&&s.test(o)){a=e.fonts[o];break}}var l;if(a)for(var h=0,u=a.length;u>h&&(l=a[h],l.face[\"font-weight\"]!=r||l.face[\"font-style\"]!=i&&l.face[\"font-style\"]||l.face[\"font-stretch\"]!=n);h++);return l}},N.print=function(t,r,i,n,a,s,o,l){s=s||\"middle\",o=W(G(o||0,1),-1),l=W(G(l||1,3),1);var h=j(i)[q](R),u=0,c=0,f=R,p;if(e.is(n,\"string\")&&(n=this.getFont(n)),n){p=(a||16)/n.face[\"units-per-em\"];for(var d=n.face.bbox[q](k),g=+d[0],x=d[3]-d[1],v=0,y=+d[1]+(\"baseline\"==s?x+ +n.face.descent:x/2),m=0,b=h.length;b>m;m++){if(\"\\n\"==h[m])u=0,w=0,c=0,v+=x*l;else{var _=c&&n.glyphs[h[m-1]]||{},w=n.glyphs[h[m]];u+=c?(_.w||n.w)+(_.k&&_.k[h[m]]||0)+n.w*o:0,c=1}w&&w.d&&(f+=e.transformPath(w.d,[\"t\",u*p,v*p,\"s\",p,p,g,y,\"t\",(t-g)/p,(r-y)/p]))}}return this.path(f).attr({fill:\"#000\",stroke:\"none\"})},N.add=function(t){if(e.is(t,\"array\"))for(var r=this.set(),i=0,n=t.length,a;n>i;i++)a=t[i]||{},B[T](a.type)&&r.push(this[a.type]().attr(a));return r},e.format=function(t,r){var i=e.is(r,Q)?[0][P](r):arguments;return t&&e.is(t,Z)&&i.length-1&&(t=t.replace(C,function(t,e){return null==i[++e]?R:i[e]})),t||R},e.fullfill=function(){var t=/\\{([^\\}]+)\\}/g,e=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,r=function(t,r,i){var n=i;return r.replace(e,function(t,e,r,i,a){e=e||i,n&&(e in n&&(n=n[e]),\"function\"==typeof n&&a&&(n=n()))}),n=(null==n||n==i?t:n)+\"\"};return function(e,i){return String(e).replace(t,function(t,e){return r(t,e,i)})}}(),e.ninja=function(){if(E.was)A.win.Raphael=E.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=Pe,t.on(\"raphael.DOMload\",function(){w=!0}),function(t,r,i){function n(){/in/.test(t.readyState)?setTimeout(n,9):e.eve(\"raphael.DOMload\")}null==t.readyState&&t.addEventListener&&(t.addEventListener(r,i=function(){t.removeEventListener(r,i,!1),t.readyState=\"complete\"},!1),t.readyState=\"loading\"),n()}(document,\"DOMContentLoaded\"),e}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;!function(r){var a=\"0.4.2\",s=\"hasOwnProperty\",o=/[\\.\\/]/,l=\"*\",h=function(){},u=function(t,e){return t-e},c,f,p={n:{}},d=function(t,e){t=String(t);var r=p,i=f,n=Array.prototype.slice.call(arguments,2),a=d.listeners(t),s=0,o=!1,l,h=[],g={},x=[],v=c,y=[];c=t,f=0;for(var m=0,b=a.length;b>m;m++)\"zIndex\"in a[m]&&(h.push(a[m].zIndex),a[m].zIndex<0&&(g[a[m].zIndex]=a[m]));for(h.sort(u);h[s]<0;)if(l=g[h[s++]],x.push(l.apply(e,n)),f)return f=i,x;for(m=0;b>m;m++)if(l=a[m],\"zIndex\"in l)if(l.zIndex==h[s]){if(x.push(l.apply(e,n)),f)break;do if(s++,l=g[h[s]],l&&x.push(l.apply(e,n)),f)break;while(l)}else g[l.zIndex]=l;else if(x.push(l.apply(e,n)),f)break;return f=i,c=v,x.length?x:null};d._events=p,d.listeners=function(t){var e=t.split(o),r=p,i,n,a,s,h,u,c,f,d=[r],g=[];for(s=0,h=e.length;h>s;s++){for(f=[],u=0,c=d.length;c>u;u++)for(r=d[u].n,n=[r[e[s]],r[l]],a=2;a--;)i=n[a],i&&(f.push(i),g=g.concat(i.f||[]));d=f}return g},d.on=function(t,e){if(t=String(t),\"function\"!=typeof e)return function(){};for(var r=t.split(o),i=p,n=0,a=r.length;a>n;n++)i=i.n,i=i.hasOwnProperty(r[n])&&i[r[n]]||(i[r[n]]={n:{}});for(i.f=i.f||[],n=0,a=i.f.length;a>n;n++)if(i.f[n]==e)return h;return i.f.push(e),function(t){+t==+t&&(e.zIndex=+t)}},d.f=function(t){var e=[].slice.call(arguments,1);return function(){d.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},d.stop=function(){f=1},d.nt=function(t){return t?new RegExp(\"(?:\\\\.|\\\\/|^)\"+t+\"(?:\\\\.|\\\\/|$)\").test(c):c},d.nts=function(){return c.split(o)},d.off=d.unbind=function(t,e){if(!t)return void(d._events=p={n:{}});var r=t.split(o),i,n,a,h,u,c,f,g=[p];for(h=0,u=r.length;u>h;h++)for(c=0;c<g.length;c+=a.length-2){if(a=[c,1],i=g[c].n,r[h]!=l)i[r[h]]&&a.push(i[r[h]]);else for(n in i)i[s](n)&&a.push(i[n]);g.splice.apply(g,a)}for(h=0,u=g.length;u>h;h++)for(i=g[h];i.n;){if(e){if(i.f){for(c=0,f=i.f.length;f>c;c++)if(i.f[c]==e){i.f.splice(c,1);break}!i.f.length&&delete i.f}for(n in i.n)if(i.n[s](n)&&i.n[n].f){var x=i.n[n].f;for(c=0,f=x.length;f>c;c++)if(x[c]==e){x.splice(c,1);break}!x.length&&delete i.n[n].f}}else{delete i.f;for(n in i.n)i.n[s](n)&&i.n[n].f&&delete i.n[n].f}i=i.n}},d.once=function(t,e){var r=function(){return d.unbind(t,r),e.apply(this,arguments)};return d.on(t,r)},d.version=a,d.toString=function(){return\"You are running Eve \"+a},\"undefined\"!=typeof t&&t.exports?t.exports=d:(i=[],n=function(){return d}.apply(e,i),!(void 0!==n&&(t.exports=n)))}(this)},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.svg){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c=\"\",f=\" \",p=\"http://www.w3.org/1999/xlink\",d={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},g={};t.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var x=function(i,n){if(n){\"string\"==typeof i&&(i=x(i));for(var a in n)n[e](a)&&(\"xlink:\"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])))}else i=t._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",i),i.style&&(i.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return i},v=function(e,n){var h=\"linear\",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,v=d.style,y=t._g.doc.getElementById(u);if(!y){if(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h=\"radial\",e&&r){f=i(e),p=i(r);var n=2*(p>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c}),n=n.split(/\\s*\\-\\s*/),\"linear\"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){y=x(h+\"Gradient\",{id:u}),e.gradient=y,x(y,\"radial\"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(y);for(var B=0,C=k.length;C>B;B++)y.appendChild(x(\"stop\",{offset:k[B].offset?k[B].offset:B?\"100%\":\"0%\",\"stop-color\":k[B].color||\"#fff\",\"stop-opacity\":isFinite(k[B].opacity)?k[B].opacity:1}))}}return x(d,{fill:m(u),opacity:1,\"fill-opacity\":1}),v.fill=c,v.opacity=1,v.fillOpacity=1,1},y=function(){var t=document.documentMode;return t&&(9===t||10===t)},m=function(t){if(y())return\"url('#\"+t+\"')\";var e=document.location,r=e.protocol+\"//\"+e.host+e.pathname+e.search;return\"url('\"+r+\"#\"+t+\"')\"},b=function(t){var e=t.getBBox(1);x(t.pattern,{patternTransform:t.matrix.invert()+\" translate(\"+e.x+\",\"+e.y+\")\"})},_=function(i,n,a){if(\"path\"==i.type){for(var s=r(n).toLowerCase().split(\"-\"),o=i.paper,l=a?\"end\":\"start\",h=i.node,u=i.attrs,f=u[\"stroke-width\"],p=s.length,v=\"classic\",y,m,b,_,w,k=3,B=3,C=5;p--;)switch(s[p]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":v=s[p];break;case\"wide\":B=5;break;case\"narrow\":B=2;break;case\"long\":k=5;break;case\"short\":k=2}if(\"open\"==v?(k+=2,B+=2,C+=2,b=1,_=a?4:1,w={fill:\"none\",stroke:u.stroke}):(_=b=k/2,w={fill:u.stroke,stroke:\"none\"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},\"none\"!=v){var S=\"raphael-marker-\"+v,T=\"raphael-marker-\"+l+v+k+B+\"-obj\"+i.id;t._g.doc.getElementById(S)?g[S]++:(o.defs.appendChild(x(x(\"path\"),{\"stroke-linecap\":\"round\",d:d[v],id:S})),g[S]=1);var A=t._g.doc.getElementById(T),E;A?(g[T]++,E=A.getElementsByTagName(\"use\")[0]):(A=x(x(\"marker\"),{id:T,markerHeight:B,markerWidth:k,orient:\"auto\",refX:_,refY:B/2}),E=x(x(\"use\"),{\"xlink:href\":\"#\"+S,transform:(a?\"rotate(180 \"+k/2+\" \"+B/2+\") \":c)+\"scale(\"+k/C+\",\"+B/C+\")\",\"stroke-width\":(1/((k/C+B/C)/2)).toFixed(4)}),A.appendChild(E),o.defs.appendChild(A),g[T]=1),x(E,w);var M=b*(\"diamond\"!=v&&\"oval\"!=v);a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-M*f):(y=M*f,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),w={},w[\"marker-\"+l]=\"url(#\"+T+\")\",(m||y)&&(w.d=t.getSubpath(u.path,y,m)),x(h,w),i._.arrows[l+\"Path\"]=S,i._.arrows[l+\"Marker\"]=T,i._.arrows[l+\"dx\"]=M,i._.arrows[l+\"Type\"]=v,i._.arrows[l+\"String\"]=n}else a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-y):(y=0,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),i._.arrows[l+\"Path\"]&&x(h,{d:t.getSubpath(u.path,y,m)}),delete i._.arrows[l+\"Path\"],delete i._.arrows[l+\"Marker\"],delete i._.arrows[l+\"dx\"],delete i._.arrows[l+\"Type\"],delete i._.arrows[l+\"String\"];for(w in g)if(g[e](w)&&!g[w]){var N=t._g.doc.getElementById(w);N&&N.parentNode.removeChild(N)}}},w={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},k=function(t,e,i){if(e=w[r(e).toLowerCase()]){for(var n=t.attrs[\"stroke-width\"]||\"1\",a={round:n,square:n,butt:0}[t.attrs[\"stroke-linecap\"]||i[\"stroke-linecap\"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;x(t.node,{\"stroke-dasharray\":s.join(\",\")})}else x(t.node,{\"stroke-dasharray\":\"none\"})},B=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;l.style.visibility=\"hidden\";for(var d in a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case\"blur\":i.blur(g);break;case\"title\":var y=l.getElementsByTagName(\"title\");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=x(\"title\");var m=t._g.doc.createTextNode(g);y.appendChild(m),l.appendChild(y)}break;case\"href\":case\"target\":var w=l.parentNode;if(\"a\"!=w.tagName.toLowerCase()){var B=x(\"a\");w.insertBefore(B,l),B.appendChild(l),w=B}\"target\"==d?w.setAttributeNS(p,\"show\",\"blank\"==g?\"new\":g):w.setAttributeNS(p,d,g);break;case\"cursor\":l.style.cursor=g;break;case\"transform\":i.transform(g);break;case\"arrow-start\":_(i,g);break;case\"arrow-end\":_(i,g,1);break;case\"clip-rect\":var C=r(g).split(h);if(4==C.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var T=x(\"clipPath\"),A=x(\"rect\");T.id=t.createUUID(),x(A,{x:C[0],y:C[1],width:C[2],height:C[3]}),T.appendChild(A),i.paper.defs.appendChild(T),x(l,{\"clip-path\":\"url(#\"+T.id+\")\"}),i.clip=A}if(!g){var E=l.getAttribute(\"clip-path\");if(E){var M=t._g.doc.getElementById(E.replace(/(^url\\(#|\\)$)/g,c));M&&M.parentNode.removeChild(M),x(l,{\"clip-path\":c}),delete i.clip}}break;case\"path\":\"path\"==i.type&&(x(l,{d:g?u.path=t._pathToAbsolute(g):\"M0,0\"}),i._.dirty=1,i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1)));break;case\"width\":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d=\"x\",g=u.x;case\"x\":u.fx&&(g=-u.x-(u.width||0));case\"rx\":if(\"rx\"==d&&\"rect\"==i.type)break;case\"cx\":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case\"height\":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d=\"y\",g=u.y;case\"y\":u.fy&&(g=-u.y-(u.height||0));case\"ry\":if(\"ry\"==d&&\"rect\"==i.type)break;case\"cy\":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case\"r\":\"rect\"==i.type?x(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case\"src\":\"image\"==i.type&&l.setAttributeNS(p,\"href\",g);break;case\"stroke-width\":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u[\"stroke-dasharray\"]&&k(i,u[\"stroke-dasharray\"],a),i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1));break;case\"stroke-dasharray\":k(i,g,a);break;case\"fill\":var N=r(g).match(t._ISURL);if(N){T=x(\"pattern\");var L=x(\"image\");T.id=t.createUUID(),x(T,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),x(L,{x:0,y:0,\"xlink:href\":N[1]}),T.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;x(e,{width:t,height:r}),x(L,{width:t,height:r})})}(T),i.paper.defs.appendChild(T),x(l,{fill:\"url(#\"+T.id+\")\"}),i.pattern=T,i.pattern&&b(i);break}var z=t.getRGB(g);if(z.error){if((\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g)){\n\tif(\"opacity\"in u||\"fill-opacity\"in u){var P=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c));if(P){var F=P.getElementsByTagName(\"stop\");x(F[F.length-1],{\"stop-opacity\":(\"opacity\"in u?u.opacity:1)*(\"fill-opacity\"in u?u[\"fill-opacity\"]:1)})}}u.gradient=g,u.fill=\"none\";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,\"undefined\")&&t.is(a.opacity,\"undefined\")&&x(l,{opacity:u.opacity}),!t.is(u[\"fill-opacity\"],\"undefined\")&&t.is(a[\"fill-opacity\"],\"undefined\")&&x(l,{\"fill-opacity\":u[\"fill-opacity\"]});z[e](\"opacity\")&&x(l,{\"fill-opacity\":z.opacity>1?z.opacity/100:z.opacity});case\"stroke\":z=t.getRGB(g),l.setAttribute(d,z.hex),\"stroke\"==d&&z[e](\"opacity\")&&x(l,{\"stroke-opacity\":z.opacity>1?z.opacity/100:z.opacity}),\"stroke\"==d&&i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1));break;case\"gradient\":(\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g);break;case\"opacity\":u.gradient&&!u[e](\"stroke-opacity\")&&x(l,{\"stroke-opacity\":g>1?g/100:g});case\"fill-opacity\":if(u.gradient){P=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c)),P&&(F=P.getElementsByTagName(\"stop\"),x(F[F.length-1],{\"stop-opacity\":g}));break}default:\"font-size\"==d&&(g=n(g,10)+\"px\");var R=d.replace(/(\\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}S(i,a),l.style.visibility=f},C=1.2,S=function(i,a){if(\"text\"==i.type&&(a[e](\"text\")||a[e](\"font\")||a[e](\"font-size\")||a[e](\"x\")||a[e](\"y\"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue(\"font-size\"),10):10;if(a[e](\"text\")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h=r(a.text).split(\"\\n\"),u=[],f,p=0,d=h.length;d>p;p++)f=x(\"tspan\"),p&&x(f,{dy:l*C,x:s.x}),f.appendChild(t._g.doc.createTextNode(h[p])),o.appendChild(f),u[p]=f}else for(u=o.getElementsByTagName(\"tspan\"),p=0,d=u.length;d>p;p++)p?x(u[p],{dy:l*C,x:s.x}):x(u[0],{dy:0});x(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),v=s.y-(g.y+g.height/2);v&&t.is(v,\"finite\")&&x(u[0],{dy:v})}},T=function(t){return t.parentNode&&\"a\"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},A=function(e,r){function i(){return(\"0000\"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5)}var n=0,a=0;this[0]=this.node=e,e.raphael=!0,this.id=i(),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},E=t.el;A.prototype=E,E.constructor=A,t._engine.path=function(t,e){var r=x(\"path\");e.canvas&&e.canvas.appendChild(r);var i=new A(r,e);return i.type=\"path\",B(i,{fill:\"none\",stroke:\"#000\",path:t}),i},E.rotate=function(t,e,n){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([[\"r\",t,e,n]])),this},E.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this},E.translate=function(t,e){return this.removed?this:(t=r(t).split(h),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([[\"t\",t,e]])),this)},E.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&x(this.clip,{transform:this.matrix.invert()}),this.pattern&&b(this),this.node&&x(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":n})}return this},E.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},E.show=function(){return this.removed||(this.node.style.display=\"\"),this},E.remove=function(){var e=T(this.node);if(!this.removed&&e.parentNode){var r=this.paper;r.__set__&&r.__set__.exclude(this),u.unbind(\"raphael.*.*.\"+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData();for(var i in this)this[i]=\"function\"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},E._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var t=!0}var e=!1,r;this.paper.canvas.parentElement?r=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(r=this.paper.canvas.parentNode.style),r&&\"none\"==r.display&&(e=!0,r.display=\"\");var i={};try{i=this.node.getBBox()}catch(n){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},e&&(r.display=\"none\")}return t&&this.hide(),i},E.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;c>l;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;c>l;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,\"object\")&&(f=r);for(var p in f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));this.attrs[p]=f[p];for(var g in d)d[e](g)&&(f[g]=d[g])}return B(this,f),this},E.toFront=function(){if(this.removed)return this;var e=T(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},E.toBack=function(){if(this.removed)return this;var e=T(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);var i=this.paper;return this},E.insertAfter=function(e){if(this.removed||!e)return this;var r=T(this.node),i=T(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},E.insertBefore=function(e){if(this.removed||!e)return this;var r=T(this.node),i=T(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},E.blur=function(e){var r=this;if(0!==+e){var i=x(\"filter\"),n=x(\"feGaussianBlur\");r.attrs.blur=e,i.id=t.createUUID(),x(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,x(r.node,{filter:\"url(#\"+i.id+\")\"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute(\"filter\");return r},t._engine.circle=function(t,e,r,i){var n=x(\"circle\");t.canvas&&t.canvas.appendChild(n);var a=new A(n,t);return a.attrs={cx:e,cy:r,r:i,fill:\"none\",stroke:\"#000\"},a.type=\"circle\",x(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=x(\"rect\");t.canvas&&t.canvas.appendChild(s);var o=new A(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:\"none\",stroke:\"#000\"},o.type=\"rect\",x(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=x(\"ellipse\");t.canvas&&t.canvas.appendChild(a);var s=new A(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:\"none\",stroke:\"#000\"},s.type=\"ellipse\",x(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=x(\"image\");x(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:\"none\"}),s.setAttributeNS(p,\"href\",e),t.canvas&&t.canvas.appendChild(s);var o=new A(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type=\"image\",o},t._engine.text=function(e,r,i,n){var a=x(\"text\");e.canvas&&e.canvas.appendChild(a);var s=new A(a,e);return s.attrs={x:r,y:i,\"text-anchor\":\"middle\",text:n,\"font-family\":t._availableAttrs[\"font-family\"],\"font-size\":t._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},s.type=\"text\",B(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container,i=e.x,n=e.y,a=e.width,s=e.height;if(!r)throw new Error(\"SVG container not found.\");var o=x(\"svg\"),l=\"overflow:hidden;\",h;return i=i||0,n=n||0,a=a||512,s=s||342,x(o,{height:s,version:1.1,width:a,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==r?(o.style.cssText=l+\"position:absolute;left:\"+i+\"px;top:\"+n+\"px\",t._g.doc.body.appendChild(o),h=1):(o.style.cssText=l+\"position:relative\",r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o)),r=new t._Paper,r.width=a,r.height=s,r.canvas=o,r.clear(),r._left=r._top=0,h&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u(\"raphael.setViewBox\",this,this._viewBox,[t,e,r,i,n]);var a=this.getSize(),o=s(r/a.width,i/a.height),l=this.top,h=n?\"xMidYMid meet\":\"xMinYMin\",c,p;for(null==t?(this._vbSize&&(o=1),delete this._vbSize,c=\"0 0 \"+this.width+f+this.height):(this._vbSize=o,c=t+f+e+f+r+f+i),x(this.canvas,{viewBox:c,preserveAspectRatio:h});o&&l;)p=\"stroke-width\"in l.attrs?l.attrs[\"stroke-width\"]:1,l.attr({\"stroke-width\":p}),l._.dirty=1,l._.dirtyT=1,l=l.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t=this.canvas,e=t.style,r;try{r=t.getScreenCTM()||t.createSVGMatrix()}catch(i){r=t.createSVGMatrix()}var n=-r.e%1,a=-r.f%1;(n||a)&&(n&&(this._left=(this._left+n)%1,e.left=this._left+\"px\"),a&&(this._top=(this._top+a)%1,e.top=this._top+\"px\"))},t.prototype.clear=function(){t.eve(\"raphael.clear\",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=x(\"desc\")).appendChild(t._g.doc.createTextNode(\"Created with Raphaël \"+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=x(\"defs\"))},t.prototype.remove=function(){u(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null};var M=t.st;for(var N in E)E[e](N)&&!M[e](N)&&(M[N]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(N))}}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.vml){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h=\"fill\",u=/[, ]+/,c=t.eve,f=\" progid:DXImageTransform.Microsoft\",p=\" \",d=\"\",g={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},x=/([clmz]),?([^clmz]*)/gi,v=/ progid:\\S+Blur\\([^\\)]+\\)/g,y=/-?[^,\\s-]+/g,m=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",b=21600,_={path:1,rect:1,image:1},w={circle:1,ellipse:1},k=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(x,function(t,e,r){var i=[],n=\"m\"==e.toLowerCase(),s=g[e];return r.replace(y,function(t){n&&2==i.length&&(s+=i+g[\"m\"==e?\"l\":\"L\"],i=[]),i.push(a(t*b))}),s+i});return s}var o=n(e),l,h;s=[];for(var u=0,c=o.length;c>u;u++){l=o[u],h=o[u][0].toLowerCase(),\"z\"==h&&(h=\"x\");for(var f=1,v=l.length;v>f;f++)h+=a(l[f]*b)+(f!=v-1?\",\":d);s.push(h)}return s.join(p)},B=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},C=function(t,e,r,i,n,a){var s=t._,o=t.matrix,u=s.fillpos,c=t.node,f=c.style,d=1,g=\"\",x,v=b/e,y=b/r;if(f.visibility=\"hidden\",e&&r){if(c.coordsize=l(v)+p+l(y),f.rotation=a*(0>e*r?-1:1),a){var m=B(a,i,n);i=m.dx,n=m.dy}if(0>e&&(g+=\"x\"),0>r&&(g+=\" y\")&&(d=-1),f.flip=g,c.coordorigin=i*-v+p+n*-y,u||s.fillsize){var _=c.getElementsByTagName(h);_=_&&_[0],c.removeChild(_),u&&(m=B(a,o.x(u[0],u[1]),o.y(u[0],u[1])),_.position=m.dx*d+p+m.dy*d),s.fillsize&&(_.size=s.fillsize[0]*l(e)+p+s.fillsize[1]*l(r)),c.appendChild(_)}f.visibility=\"visible\"}};t.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var S=function(t,e,i){for(var n=r(e).toLowerCase().split(\"-\"),a=i?\"end\":\"start\",s=n.length,o=\"classic\",l=\"medium\",h=\"medium\";s--;)switch(n[s]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":o=n[s];break;case\"wide\":case\"narrow\":h=n[s];break;case\"long\":case\"short\":l=n[s]}var u=t.node.getElementsByTagName(\"stroke\")[0];u[a+\"arrow\"]=o,u[a+\"arrowlength\"]=l,u[a+\"arrowwidth\"]=h},T=function(n,l){n.attrs=n.attrs||{};var c=n.node,f=n.attrs,g=c.style,x,v=_[n.type]&&(l.x!=f.x||l.y!=f.y||l.width!=f.width||l.height!=f.height||l.cx!=f.cx||l.cy!=f.cy||l.rx!=f.rx||l.ry!=f.ry||l.r!=f.r),y=w[n.type]&&(f.cx!=l.cx||f.cy!=l.cy||f.r!=l.r||f.rx!=l.rx||f.ry!=l.ry),m=n;for(var B in l)l[e](B)&&(f[B]=l[B]);if(v&&(f.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(c.href=l.href),l.title&&(c.title=l.title),l.target&&(c.target=l.target),l.cursor&&(g.cursor=l.cursor),\"blur\"in l&&n.blur(l.blur),(l.path&&\"path\"==n.type||v)&&(c.path=k(~r(f.path).toLowerCase().indexOf(\"r\")?t._pathToAbsolute(f.path):f.path),n._.dirty=1,\"image\"==n.type&&(n._.fillpos=[f.x,f.y],n._.fillsize=[f.width,f.height],C(n,1,1,0,0,0))),\"transform\"in l&&n.transform(l.transform),y){var T=+f.cx,E=+f.cy,M=+f.rx||+f.r||0,L=+f.ry||+f.r||0;c.path=t.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",a((T-M)*b),a((E-L)*b),a((T+M)*b),a((E+L)*b),a(T*b)),n._.dirty=1}if(\"clip-rect\"in l){var z=r(l[\"clip-rect\"]).split(u);if(4==z.length){z[2]=+z[2]+ +z[0],z[3]=+z[3]+ +z[1];var P=c.clipRect||t._g.doc.createElement(\"div\"),F=P.style;F.clip=t.format(\"rect({1}px {2}px {3}px {0}px)\",z),c.clipRect||(F.position=\"absolute\",F.top=0,F.left=0,F.width=n.paper.width+\"px\",F.height=n.paper.height+\"px\",c.parentNode.insertBefore(P,c),P.appendChild(c),c.clipRect=P)}l[\"clip-rect\"]||c.clipRect&&(c.clipRect.style.clip=\"auto\")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l[\"font-family\"]&&(R.fontFamily='\"'+l[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,d)+'\"'),l[\"font-size\"]&&(R.fontSize=l[\"font-size\"]),l[\"font-weight\"]&&(R.fontWeight=l[\"font-weight\"]),l[\"font-style\"]&&(R.fontStyle=l[\"font-style\"])}if(\"arrow-start\"in l&&S(m,l[\"arrow-start\"]),\"arrow-end\"in l&&S(m,l[\"arrow-end\"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||null!=l[\"fill-opacity\"]||null!=l[\"stroke-dasharray\"]||null!=l[\"stroke-miterlimit\"]||null!=l[\"stroke-linejoin\"]||null!=l[\"stroke-linecap\"]){var I=c.getElementsByTagName(h),j=!1;if(I=I&&I[0],!I&&(j=I=N(h)),\"image\"==n.type&&l.src&&(I.src=l.src),l.fill&&(I.on=!0),null!=I.on&&\"none\"!=l.fill&&null!==l.fill||(I.on=!1),I.on&&l.fill){var q=r(l.fill).match(t._ISURL);if(q){I.parentNode==c&&c.removeChild(I),I.rotate=!0,I.src=q[1],I.type=\"tile\";var D=n.getBBox(1);I.position=D.x+p+D.y,n._.fillpos=[D.x,D.y],t._preload(q[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else I.color=t.getRGB(l.fill).hex,I.src=d,I.type=\"solid\",t.getRGB(l.fill).error&&(m.type in{circle:1,ellipse:1}||\"r\"!=r(l.fill).charAt())&&A(m,l.fill,I)&&(f.fill=\"none\",f.gradient=l.fill,I.rotate=!1)}if(\"fill-opacity\"in l||\"opacity\"in l){var V=((+f[\"fill-opacity\"]+1||2)-1)*((+f.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);V=o(s(V,0),1),I.opacity=V,I.src&&(I.color=\"none\")}c.appendChild(I);var O=c.getElementsByTagName(\"stroke\")&&c.getElementsByTagName(\"stroke\")[0],Y=!1;!O&&(Y=O=N(\"stroke\")),(l.stroke&&\"none\"!=l.stroke||l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||l[\"stroke-dasharray\"]||l[\"stroke-miterlimit\"]||l[\"stroke-linejoin\"]||l[\"stroke-linecap\"])&&(O.on=!0),(\"none\"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l[\"stroke-width\"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),V=((+f[\"stroke-opacity\"]+1||2)-1)*((+f.opacity+1||2)-1)*((+W.o+1||2)-1);var G=.75*(i(l[\"stroke-width\"])||1);if(V=o(s(V,0),1),null==l[\"stroke-width\"]&&(G=f[\"stroke-width\"]),l[\"stroke-width\"]&&(O.weight=G),G&&1>G&&(V*=G)&&(O.weight=1),O.opacity=V,l[\"stroke-linejoin\"]&&(O.joinstyle=l[\"stroke-linejoin\"]||\"miter\"),O.miterlimit=l[\"stroke-miterlimit\"]||8,l[\"stroke-linecap\"]&&(O.endcap=\"butt\"==l[\"stroke-linecap\"]?\"flat\":\"square\"==l[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in l){var H={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};O.dashstyle=H[e](l[\"stroke-dasharray\"])?H[l[\"stroke-dasharray\"]]:d}Y&&c.appendChild(O)}if(\"text\"==m.type){m.paper.canvas.style.display=d;var X=m.paper.span,U=100,$=f.font&&f.font.match(/\\d+(?:\\.\\d*)?(?=px)/);g=X.style,f.font&&(g.font=f.font),f[\"font-family\"]&&(g.fontFamily=f[\"font-family\"]),f[\"font-weight\"]&&(g.fontWeight=f[\"font-weight\"]),f[\"font-style\"]&&(g.fontStyle=f[\"font-style\"]),$=i(f[\"font-size\"]||$&&$[0])||10,g.fontSize=$*U+\"px\",m.textpath.string&&(X.innerHTML=r(m.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var Z=X.getBoundingClientRect();m.W=f.w=(Z.right-Z.left)/U,m.H=f.h=(Z.bottom-Z.top)/U,m.X=f.x,m.Y=f.y+m.H/2,(\"x\"in l||\"y\"in l)&&(m.path.v=t.format(\"m{0},{1}l{2},{1}\",a(f.x*b),a(f.y*b),a(f.x*b)+1));for(var Q=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],J=0,K=Q.length;K>J;J++)if(Q[J]in l){m._.dirty=1;break}switch(f[\"text-anchor\"]){case\"start\":m.textpath.style[\"v-text-align\"]=\"left\",m.bbx=m.W/2;break;case\"end\":m.textpath.style[\"v-text-align\"]=\"right\",m.bbx=-m.W/2;break;default:m.textpath.style[\"v-text-align\"]=\"center\",m.bbx=0}m.textpath.style[\"v-text-kern\"]=!0}},A=function(e,a,s){e.attrs=e.attrs||{};var o=e.attrs,l=Math.pow,h,u,c=\"linear\",f=\".5 .5\";if(e.attrs.gradient=a,a=r(a).replace(t._radial_gradient,function(t,e,r){return c=\"radial\",e&&r&&(e=i(e),r=i(r),l(e-.5,2)+l(r-.5,2)>.25&&(r=n.sqrt(.25-l(e-.5,2))*(2*(r>.5)-1)+.5),f=e+p+r),d}),a=a.split(/\\s*\\-\\s*/),\"linear\"==c){var g=a.shift();if(g=-i(g),isNaN(g))return null}var x=t._parseDots(a);if(!x)return null;if(e=e.shape||e.node,x.length){e.removeChild(s),s.on=!0,s.method=\"none\",s.color=x[0].color,s.color2=x[x.length-1].color;for(var v=[],y=0,m=x.length;m>y;y++)x[y].offset&&v.push(x[y].offset+p+x[y].color);s.colors=v.length?v.join():\"0% \"+s.color,\"radial\"==c?(s.type=\"gradientTitle\",s.focus=\"100%\",s.focussize=\"0 0\",s.focusposition=f,s.angle=0):(s.type=\"gradient\",s.angle=(270-g)%360),e.appendChild(s)}return 1},E=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},M=t.el;E.prototype=M,M.constructor=E,M.transform=function(e){if(null==e)return this._.transform;var i=this.paper._viewBoxShift,n=i?\"s\"+[i.scale,i.scale]+\"-1-1t\"+[i.dx,i.dy]:d,a;i&&(a=e=r(e).replace(/\\.{3}|\\u2026/g,this._.transform||d)),t._extractTransform(this,n+e);var s=this.matrix.clone(),o=this.skew,l=this.node,h,u=~r(this.attrs.fill).indexOf(\"-\"),c=!r(this.attrs.fill).indexOf(\"url(\");if(s.translate(1,1),c||u||\"image\"==this.type)if(o.matrix=\"1 0 0 1\",o.offset=\"0 0\",h=s.split(),u&&h.noRotation||!h.isSimple){l.style.filter=s.toFilter();var f=this.getBBox(),g=this.getBBox(1),x=f.x-g.x,v=f.y-g.y;l.coordorigin=x*-b+p+v*-b,C(this,1,1,x,v,0)}else l.style.filter=d,C(this,h.scalex,h.scaley,h.dx,h.dy,h.rotate);else l.style.filter=d,o.matrix=r(s),o.offset=s.offset();return null!==a&&(this._.transform=a,t._extractTransform(this,a)),this},M.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",t,e,n]])),this}},M.translate=function(t,e){return this.removed?this:(t=r(t).split(u),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([[\"t\",t,e]])),this)},M.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this._.dirtyT=1,this},M.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},M.show=function(){return!this.removed&&(this.node.style.display=d),this},M.auxGetBBox=t.el.getBBox,M.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},M._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},M.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind(\"raphael.*.*.\"+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},M.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(r==h&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(u),o={},l=0,f=s.length;f>l;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return f-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,\"array\")){for(o={},l=0,f=r.length;f>l;l++)o[r[l]]=this.attr(r[l]);return o}var p;null!=i&&(p={},p[r]=i),null==i&&t.is(r,\"object\")&&(p=r);for(var d in p)c(\"raphael.attr.\"+d+\".\"+this.id,this,p[d]);if(p){for(d in this.paper.customAttributes)if(this.paper.customAttributes[e](d)&&p[e](d)&&t.is(this.paper.customAttributes[d],\"function\")){var g=this.paper.customAttributes[d].apply(this,[].concat(p[d]));this.attrs[d]=p[d];for(var x in g)g[e](x)&&(p[x]=g[x])}p.text&&\"text\"==this.type&&(this.textpath.string=p.text),T(this,p)}return this},M.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},M.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},M.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},M.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},M.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(v,d),0!==+e?(this.attrs.blur=e,r.filter=i+p+f+\".Blur(pixelradius=\"+(+e||1.5)+\")\",r.margin=t.format(\"-{0}px 0 0 -{0}px\",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=N(\"shape\");r.style.cssText=m,r.coordsize=b+p+b,r.coordorigin=e.coordorigin;var i=new E(r,e),n={fill:\"none\",stroke:\"#000\"};t&&(n.path=t),i.type=\"path\",i.path=[],i.Path=d,T(i,n),e.canvas&&e.canvas.appendChild(r);var a=N(\"skew\");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(d),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type=\"rect\",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path(),s=a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type=\"ellipse\",T(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path(),a=n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type=\"circle\",T(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:\"none\"}),u=l.attrs,c=l.node,f=c.getElementsByTagName(h)[0];return u.src=r,l.X=u.x=i,l.Y=u.y=n,l.W=u.width=a,l.H=u.height=s,u.path=o,l.type=\"image\",f.parentNode==c&&c.removeChild(f),f.rotate=!0,f.src=r,f.type=\"tile\",l._.fillpos=[i,n],l._.fillsize=[a,s],c.appendChild(f),C(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=N(\"shape\"),l=N(\"path\"),h=N(\"textpath\");i=i||0,n=n||0,s=s||\"\",l.v=t.format(\"m{0},{1}l{2},{1}\",a(i*b),a(n*b),a(i*b)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=m,o.coordsize=b+p+b,o.coordorigin=\"0 0\";var u=new E(o,e),c={fill:\"#000\",stroke:\"none\",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type=\"text\",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,T(u,c),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var f=N(\"skew\");return f.on=!0,o.appendChild(f),u.skew=f,u.transform(d),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+=\"px\"),r==+r&&(r+=\"px\"),i.width=e,i.height=r,i.clip=\"rect(0 \"+e+\" \"+r+\" 0)\",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve(\"raphael.setViewBox\",this,this._viewBox,[e,r,i,n,a]);var s=this.getSize(),o=s.width,l=s.height,h,u;return a&&(h=l/n,u=o/i,o>i*h&&(e-=(o-i*h)/2/h),l>n*u&&(r-=(l-n*u)/2/u)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:s},this.forEach(function(t){t.transform(\"...\")}),this};var N;t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):e.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!e.namespaces.rvml&&e.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),N=function(t){return e.createElement(\"<rvml:\"+t+' class=\"rvml\">')}}catch(r){N=function(t){return e.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n,a=e.width,s=e.x,o=e.y;if(!r)throw new Error(\"VML container not found.\");var l=new t._Paper,h=l.canvas=t._g.doc.createElement(\"div\"),u=h.style;return s=s||0,o=o||0,a=a||512,i=i||342,l.width=a,l.height=i,a==+a&&(a+=\"px\"),i==+i&&(i+=\"px\"),l.coordsize=1e3*b+p+1e3*b,l.coordorigin=\"0 0\",l.span=t._g.doc.createElement(\"span\"),l.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",h.appendChild(l.span),u.cssText=t.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",a,i),1==r?(t._g.doc.body.appendChild(h),u.left=s+\"px\",u.top=o+\"px\",u.position=\"absolute\"):r.firstChild?r.insertBefore(h,r.firstChild):r.appendChild(h),l.renderfix=function(){},l},t.prototype.clear=function(){t.eve(\"raphael.clear\",this),this.canvas.innerHTML=d,this.span=t._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){t.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;return!0};var L=t.st;for(var z in M)M[e](z)&&!L[e](z)&&(L[z]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(z))}}.apply(e,i),!(void 0!==n&&(t.exports=n))}])});\n\n/***/ },\n\n/***/ 176:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(213);\n\tvar Start = __webpack_require__(219);\n\tvar End = __webpack_require__(216);\n\tvar Operation = __webpack_require__(218);\n\tvar InputOutput = __webpack_require__(217);\n\tvar Subroutine = __webpack_require__(220);\n\tvar Condition = __webpack_require__(177);\n\t\n\tfunction parse(input) {\n\t  input = input || '';\n\t  input = input.trim();\n\t\n\t  var chart = {\n\t    symbols: {},\n\t    start: null,\n\t    drawSVG: function(container, options) {\n\t      var self = this;\n\t\n\t      if (this.diagram) {\n\t        this.diagram.clean();\n\t      }\n\t\n\t      var diagram = new FlowChart(container, options);\n\t      this.diagram = diagram;\n\t      var dispSymbols = {};\n\t\n\t      function getDisplaySymbol(s) {\n\t        if (dispSymbols[s.key]) {\n\t          return dispSymbols[s.key];\n\t        }\n\t\n\t        switch (s.symbolType) {\n\t          case 'start':\n\t            dispSymbols[s.key] = new Start(diagram, s);\n\t            break;\n\t          case 'end':\n\t            dispSymbols[s.key] = new End(diagram, s);\n\t            break;\n\t          case 'operation':\n\t            dispSymbols[s.key] = new Operation(diagram, s);\n\t            break;\n\t          case 'inputoutput':\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\n\t            break;\n\t          case 'subroutine':\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\n\t            break;\n\t          case 'condition':\n\t            dispSymbols[s.key] = new Condition(diagram, s);\n\t            break;\n\t          default:\n\t            return new Error('Wrong symbol type!');\n\t        }\n\t\n\t        return dispSymbols[s.key];\n\t      }\n\t\n\t      (function constructChart(s, prevDisp, prev) {\n\t        var dispSymb = getDisplaySymbol(s);\n\t\n\t        if (self.start === s) {\n\t          diagram.startWith(dispSymb);\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\n\t          if (prevDisp instanceof(Condition)) {\n\t            if (prev.yes === s) {\n\t              prevDisp.yes(dispSymb);\n\t            }\n\t            if (prev.no === s) {\n\t              prevDisp.no(dispSymb);\n\t            }\n\t          } else {\n\t            prevDisp.then(dispSymb);\n\t          }\n\t        }\n\t\n\t        if (dispSymb.pathOk) {\n\t          return dispSymb;\n\t        }\n\t\n\t        if (dispSymb instanceof(Condition)) {\n\t          if (s.yes) {\n\t            constructChart(s.yes, dispSymb, s);\n\t          }\n\t          if (s.no) {\n\t            constructChart(s.no, dispSymb, s);\n\t          }\n\t        } else if (s.next) {\n\t          constructChart(s.next, dispSymb, s);\n\t        }\n\t\n\t        return dispSymb;\n\t      })(this.start);\n\t\n\t      diagram.render();\n\t    },\n\t    clean: function() {\n\t      this.diagram.clean();\n\t    }\n\t  };\n\t\n\t  var lines = [];\n\t  var prevBreak = 0;\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n\t      var line0 = input.substring(prevBreak, i0);\n\t      prevBreak = i0 + 1;\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n\t    }\n\t  }\n\t\n\t  if(prevBreak < input.length) {\n\t    lines.push(input.substr(prevBreak));\n\t  }\n\t\n\t  for (var l = 1, len = lines.length; l < len;) {\n\t    var currentLine = lines[l];\n\t\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0) {\n\t      lines[l - 1] += '\\n' + currentLine;\n\t      lines.splice(l, 1);\n\t      len--;\n\t    } else {\n\t      l++;\n\t    }\n\t  }\n\t\n\t  function getSymbol(s) {\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\n\t    }\n\t    return chart.symbols[s];\n\t  }\n\t\n\t  function getNextPath(s) {\n\t    var next = 'next';\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      next = flowSymb.substring(startIndex, endIndex);\n\t      if (next.indexOf(',') < 0) {\n\t        if (next !== 'yes' && next !== 'no') {\n\t          next = 'next, ' + next;\n\t        }\n\t      }\n\t    }\n\t    return next;\n\t  }\n\t\n\t  while (lines.length > 0) {\n\t    var line = lines.splice(0, 1)[0];\n\t\n\t    if (line.indexOf('=>') >= 0) {\n\t      // definition\n\t      var parts = line.split('=>');\n\t      var symbol = {\n\t        key: parts[0],\n\t        symbolType: parts[1],\n\t        text: null,\n\t        link: null,\n\t        target: null,\n\t        flowstate: null\n\t      };\n\t\n\t      var sub;\n\t\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\n\t        sub = symbol.symbolType.split(': ');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.text = sub.join(': ');\n\t      }\n\t\n\t      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n\t        sub = symbol.text.split(':>');\n\t        symbol.text = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n\t        sub = symbol.symbolType.split(':>');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      }\n\t\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n\t      }\n\t\n\t      /* adding support for links */\n\t      if (symbol.link) {\n\t        var startIndex = symbol.link.indexOf('[') + 1;\n\t        var endIndex = symbol.link.indexOf(']');\n\t        if (startIndex >= 0 && endIndex >= 0) {\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\n\t        }\n\t      }\n\t      /* end of link support */\n\t\n\t      /* adding support for flowstates */\n\t      if (symbol.text) {\n\t        if (symbol.text.indexOf('|') >= 0) {\n\t          var txtAndState = symbol.text.split('|');\n\t          symbol.flowstate = txtAndState.pop().trim();\n\t          symbol.text = txtAndState.join('|');\n\t        }\n\t      }\n\t      /* end of flowstate support */\n\t\n\t      chart.symbols[symbol.key] = symbol;\n\t\n\t    } else if (line.indexOf('->') >= 0) {\n\t      // flow\n\t      var flowSymbols = line.split('->');\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n\t        var flowSymb = flowSymbols[i];\n\t\n\t        var realSymb = getSymbol(flowSymb);\n\t        var next = getNextPath(flowSymb);\n\t\n\t        var direction = null;\n\t        if (next.indexOf(',') >= 0) {\n\t          var condOpt = next.split(',');\n\t          next = condOpt[0];\n\t          direction = condOpt[1].trim();\n\t        }\n\t\n\t        if (!chart.start) {\n\t          chart.start = realSymb;\n\t        }\n\t\n\t        if (i + 1 < lenS) {\n\t          var nextSymb = flowSymbols[i + 1];\n\t          realSymb[next] = getSymbol(nextSymb);\n\t          realSymb['direction_' + next] = direction;\n\t          direction = null;\n\t        }\n\t      }\n\t    }\n\t\n\t  }\n\t  return chart;\n\t}\n\t\n\tmodule.exports = parse;\n\n\n/***/ },\n\n/***/ 177:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\tvar drawAPI = __webpack_require__(7);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Condition(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t  this.yes_direction = 'bottom';\n\t  this.no_direction = 'right';\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n\t    if (options.direction_yes === 'right') {\n\t      this.no_direction = 'bottom';\n\t      this.yes_direction = 'right';\n\t    } else {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'bottom';\n\t    }\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n\t    if (options.direction_no === 'right') {\n\t      this.yes_direction = 'bottom';\n\t      this.no_direction = 'right';\n\t    } else {\n\t      this.yes_direction = 'right';\n\t      this.no_direction = 'bottom';\n\t    }\n\t  } else {\n\t    this.yes_direction = 'bottom';\n\t    this.no_direction = 'right';\n\t  }\n\t\n\t  this.yes_direction = this.yes_direction || 'bottom';\n\t  this.no_direction = this.no_direction || 'right';\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 2\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\n\t  width += width/2;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  height += height/2;\n\t  height = Math.max(width * 0.5, height);\n\t  var startX = width/4;\n\t  var startY = height/4;\n\t\n\t  this.text.attr({\n\t    x: startX + this.textMargin/2\n\t  });\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - width/4, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n\t    {x: startX - width/4 + width, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n\t    {x: startX - width/4, y: startY + height/4}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Condition, Symbol);\n\t\n\tCondition.prototype.render = function() {\n\t\n\t  if (this.yes_direction) {\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n\t  }\n\t\n\t  if (this.no_direction) {\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\n\t  }\n\t\n\t  var lineLength = this.getAttr('line-length');\n\t\n\t  if (this.bottom_symbol) {\n\t    var bottomPoint = this.getBottom();\n\t\n\t    if (!this.bottom_symbol.isPositioned) {\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n\t      this.bottom_symbol.isPositioned = true;\n\t\n\t      this.bottom_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.right_symbol) {\n\t    var rightPoint = this.getRight();\n\t\n\t    if (!this.right_symbol.isPositioned) {\n\t\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t      var self = this;\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n\t          if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n\t            hasSymbolUnder = true;\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.right_symbol.isPositioned = true;\n\t\n\t      this.right_symbol.render();\n\t    }\n\t  }\n\t};\n\t\n\tCondition.prototype.renderLines = function() {\n\t  if (this.yes_symbol) {\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n\t  }\n\t\n\t  if (this.no_symbol) {\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n\t  }\n\t};\n\t\n\tmodule.exports = Condition;\n\n\n/***/ },\n\n/***/ 212:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(215);\n\tvar parse = __webpack_require__(176);\n\t__webpack_require__(221);\n\t\n\tvar FlowChart = {\n\t\tparse: parse\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t\twindow.flowchart = FlowChart;\n\t}\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ },\n\n/***/ 213:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(8);\n\tvar defaults = __webpack_require__(1).defaults;\n\tvar defaultOptions = __webpack_require__(214);\n\tvar Condition = __webpack_require__(177);\n\t\n\tfunction FlowChart(container, options) {\n\t  options = options || {};\n\t\n\t  this.paper = new Raphael(container);\n\t\n\t  this.options = defaults(options, defaultOptions);\n\t\n\t  this.symbols = [];\n\t  this.lines = [];\n\t  this.start = null;\n\t}\n\t\n\tFlowChart.prototype.handle = function(symbol) {\n\t  if (this.symbols.indexOf(symbol) <= -1) {\n\t    this.symbols.push(symbol);\n\t  }\n\t\n\t  var flowChart = this;\n\t\n\t  if (symbol instanceof(Condition)) {\n\t    symbol.yes = function(nextSymbol) {\n\t      symbol.yes_symbol = nextSymbol;\n\t      if(symbol.no_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.no = function(nextSymbol) {\n\t      symbol.no_symbol = nextSymbol;\n\t      if(symbol.yes_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  } else {\n\t    symbol.then = function(nextSymbol) {\n\t      symbol.next = nextSymbol;\n\t      symbol.pathOk = true;\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  }\n\t\n\t  return symbol;\n\t};\n\t\n\tFlowChart.prototype.startWith = function(symbol) {\n\t  this.start = symbol;\n\t  return this.handle(symbol);\n\t};\n\t\n\tFlowChart.prototype.render = function() {\n\t  var maxWidth = 0,\n\t      maxHeight = 0,\n\t      i = 0,\n\t      len = 0,\n\t      maxX = 0,\n\t      maxY = 0,\n\t      minX = 0,\n\t      minY = 0,\n\t      symbol,\n\t      line;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    if (symbol.width > maxWidth) {\n\t      maxWidth = symbol.width;\n\t    }\n\t    if (symbol.height > maxHeight) {\n\t      maxHeight = symbol.height;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n\t  }\n\t\n\t  this.start.render();\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\n\t  //   symbol = this.symbols[i];\n\t  //   symbol.render();\n\t  // }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.renderLines();\n\t  }\n\t\n\t  maxX = this.maxXFromLine;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    var x = symbol.getX() + symbol.width;\n\t    var y = symbol.getY() + symbol.height;\n\t    if (x > maxX) {\n\t      maxX = x;\n\t    }\n\t    if (y > maxY) {\n\t      maxY = y;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\n\t    line = this.lines[i].getBBox();\n\t    var x = line.x;\n\t    var y = line.y;\n\t    var x2 = line.x2;\n\t    var y2 = line.y2;\n\t    if (x < minX) {\n\t      minX = x;\n\t    }\n\t    if (y < minY) {\n\t      minY = y;\n\t    }\n\t    if (x2 > maxX) {\n\t      maxX = x2;\n\t    }\n\t    if (y2 > maxY) {\n\t      maxY = y2;\n\t    }\n\t  }\n\t\n\t  var scale = this.options['scale'];\n\t  var lineWidth = this.options['line-width'];\n\t\n\t  if (minX < 0) minX -= lineWidth;\n\t  if (minY < 0) minY -= lineWidth;\n\t\n\t  var width = maxX + lineWidth - minX;\n\t  var height = maxY + lineWidth - minY;\n\t\n\t  this.paper.setSize(width * scale, height * scale);\n\t  this.paper.setViewBox(minX, minY, width, height, true);\n\t};\n\t\n\tFlowChart.prototype.clean = function() {\n\t  if (this.paper) {\n\t    var paperDom = this.paper.canvas;\n\t    paperDom.parentNode.removeChild(paperDom);\n\t  }\n\t};\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ },\n\n/***/ 214:\n/***/ function(module, exports) {\n\n\t// defaults\n\tmodule.exports = {\n\t  'x': 0,\n\t  'y': 0,\n\t  'line-width': 3,\n\t  'line-length': 50,\n\t  'text-margin': 10,\n\t  'font-size': 14,\n\t  'font-color': 'black',\n\t  // 'font': 'normal',\n\t  // 'font-family': 'calibri',\n\t  // 'font-weight': 'normal',\n\t  'line-color': 'black',\n\t  'element-color': 'black',\n\t  'fill': 'white',\n\t  'yes-text': 'yes',\n\t  'no-text': 'no',\n\t  'arrow-end': 'block',\n\t  'class': 'flowchart',\n\t  'scale': 1,\n\t  'symbols': {\n\t    'start': {},\n\t    'end': {},\n\t    'condition': {},\n\t    'inputoutput': {},\n\t    'operation': {},\n\t    'subroutine': {}\n\t  }//,\n\t  // 'flowstate' : {\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n\t  //   'future' : { 'fill': '#FFFF99'},\n\t  //   'invalid': {'fill': '#444444'}\n\t  // }\n\t};\n\n\n/***/ },\n\n/***/ 215:\n/***/ function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.indexOf) {\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = 0;\n\t    if (arguments.length > 0) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) { // shortcut for verifying if it's NaN\n\t        n = 0;\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    if (n >= len) {\n\t      return -1;\n\t    }\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t    for (; k < len; k++) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.lastIndexOf) {\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = len;\n\t    if (arguments.length > 1) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) {\n\t        n = 0;\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n\t    for (; k >= 0; k--) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function() {\n\t    return this.replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t}\n\n/***/ },\n\n/***/ 216:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\t\n\tfunction End(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'End';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(End, Symbol);\n\t\n\tmodule.exports = End;\n\n\n/***/ },\n\n/***/ 217:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\tvar drawAPI = __webpack_require__(7);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction InputOutput(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 3\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  var startX = this.textMargin;\n\t  var startY = height/2;\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - this.textMargin, y: height},\n\t    {x: startX - this.textMargin + width, y: height},\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n\t    {x: startX, y: startY}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(InputOutput, Symbol);\n\t\n\tInputOutput.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tInputOutput.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tmodule.exports = InputOutput;\n\n\n/***/ },\n\n/***/ 218:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\t\n\tfunction Operation(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Operation, Symbol);\n\t\n\tmodule.exports = Operation;\n\n\n/***/ },\n\n/***/ 219:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\t\n\tfunction Start(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'Start';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Start, Symbol);\n\t\n\tmodule.exports = Start;\n\t\n\t// Start.prototype.render = function() {\n\t//   if (this.next) {\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\t\n\t//     var bottomPoint = this.getBottom();\n\t//     var topPoint = this.next.getTop();\n\t\n\t//     if (!this.next.isPositioned) {\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\n\t//       this.next.isPositioned = true;\n\t\n\t//       this.next.render();\n\t//     }\n\t//   }\n\t// };\n\t\n\t// Start.prototype.renderLines = function() {\n\t//   if (this.next) {\n\t//     this.drawLineTo(this.next);\n\t//   }\n\t// };\n\n\n/***/ },\n\n/***/ 220:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(2);\n\tvar inherits = __webpack_require__(1).inherits;\n\t\n\tfunction Subroutine(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t\n\t  symbol.attr({\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n\t  });\n\t\n\t  this.text.attr({\n\t    'x': 2 * this.getAttr('text-margin')\n\t  });\n\t\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n\t  innerWrap.attr({\n\t    x: this.getAttr('text-margin'),\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\t\n\t  var font = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) innerWrap.attr({ 'font': font });\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { innerWrap.attr('href', options.link); }\n\t  if (options.target) { innerWrap.attr('target', options.target); }\n\t  this.group.push(innerWrap);\n\t  innerWrap.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Subroutine, Symbol);\n\t\n\tmodule.exports = Subroutine;\n\n\n/***/ },\n\n/***/ 221:\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\n\t\tvar parse = __webpack_require__(176);\n\t\t(function( $ ) {\n\t\t\t$.fn.flowChart = function( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t\t$this.html('');\n\t\t\t\t\tchart.drawSVG(this, options);\n\t\t\t\t});\n\t\t\t};\n\t\t})(jQuery); // eslint-disable-line\n\t}\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1.1.js\n **/","function _defaults(options, defaultOptions) {\n  if (!options || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  var merged = {};\n  for (var attrname in defaultOptions) {\n    merged[attrname] = defaultOptions[attrname];\n  }\n\n  for (attrname in options) {\n    if (options[attrname]) {\n      if (typeof merged[attrname] === 'object') {\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n      } else {\n        merged[attrname] = options[attrname];\n      }\n    }\n  }\n  return merged;\n}\n\nfunction _inherits(ctor, superCtor) {\n  if (typeof(Object.create) === 'function') {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  } else {\n    // old school shim for old browsers\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n}\n\n// move dependent functions to a container so that\n// they can be overriden easier in no jquery environment (node.js)\nmodule.exports = {\n  defaults: _defaults,\n  inherits: _inherits\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.helpers.js\n ** module id = 1\n ** module chunks = 1\n **/","var drawAPI = require('./flowchart.functions');\nvar drawLine = drawAPI.drawLine;\nvar checkLineIntersection = drawAPI.checkLineIntersection;\n\nfunction Symbol(chart, options, symbol) {\n  this.chart = chart;\n  this.group = this.chart.paper.set();\n  this.symbol = symbol;\n  this.connectedTo = [];\n  this.symbolType = options.symbolType;\n  this.flowstate = (options.flowstate || 'future');\n\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\n  this.text = this.chart.paper.text(0, 0, options.text);\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n  if (options.key) { this.text.node.id = options.key + 't'; }\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\n  this.text.attr({\n    'text-anchor': 'start',\n    'x'          : this.getAttr('text-margin'),\n    'fill'       : this.getAttr('font-color'),\n    'font-size'  : this.getAttr('font-size')\n  });\n\n  var font  = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) this.text.attr({ 'font': font });\n  if (fontF) this.text.attr({ 'font-family': fontF });\n  if (fontW) this.text.attr({ 'font-weight': fontW });\n\n  if (options.link) { this.text.attr('href', options.link); }\n  if (options.target) { this.text.attr('target', options.target); }\n\n  var maxWidth = this.getAttr('maxWidth');\n  if (maxWidth) {\n    // using this approach: http://stackoverflow.com/a/3153457/22466\n    var words = options.text.split(' ');\n    var tempText = \"\";\n    for (var i=0, ii=words.length; i<ii; i++) {\n      var word = words[i];\n      this.text.attr(\"text\", tempText + \" \" + word);\n      if (this.text.getBBox().width > maxWidth) {\n        tempText += \"\\n\" + word;\n      } else {\n        tempText += \" \" + word;\n      }\n    }\n    this.text.attr(\"text\", tempText.substring(1));\n  }\n\n  this.group.push(this.text);\n\n  if (symbol) {\n    var tmpMargin = this.getAttr('text-margin');\n\n    symbol.attr({\n      'fill' : this.getAttr('fill'),\n      'stroke' : this.getAttr('element-color'),\n      'stroke-width' : this.getAttr('line-width'),\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\n      'height' : this.text.getBBox().height + 2 * tmpMargin\n    });\n\n    symbol.node.setAttribute('class', this.getAttr('class'));\n\n    if (options.link) { symbol.attr('href', options.link); }\n    if (options.target) { symbol.attr('target', options.target); }\n    if (options.key) { symbol.node.id = options.key; }\n\n    this.group.push(symbol);\n    symbol.insertBefore(this.text);\n\n    this.text.attr({\n      'y': symbol.getBBox().height/2\n    });\n\n    this.initialize();\n  }\n\n}\n\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\nSymbol.prototype.getAttr = function(attName) {\n  if (!this.chart) {\n    return undefined;\n  }\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n  var opt1;\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n  }\n  return (opt1 || opt2 || opt3);\n};\n\nSymbol.prototype.initialize = function() {\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\n  this.width = this.group.getBBox().width;\n  this.height = this.group.getBBox().height;\n};\n\nSymbol.prototype.getCenter = function() {\n  return {x: this.getX() + this.width/2,\n          y: this.getY() + this.height/2};\n};\n\nSymbol.prototype.getX = function() {\n  return this.group.getBBox().x;\n};\n\nSymbol.prototype.getY = function() {\n  return this.group.getBBox().y;\n};\n\nSymbol.prototype.shiftX = function(x) {\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n};\n\nSymbol.prototype.setX = function(x) {\n  this.group.transform('t' + x + ',' + this.getY());\n};\n\nSymbol.prototype.shiftY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n};\n\nSymbol.prototype.setY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + y);\n};\n\nSymbol.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getBottom = function() {\n  var y = this.getY() + this.height;\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX();\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.render = function() {\n  if (this.next) {\n\n    var lineLength = this.getAttr('line-length');\n\n    if (this.next_direction === 'right') {\n\n      var rightPoint = this.getRight();\n\n      if (!this.next.isPositioned) {\n\n        this.next.setY(rightPoint.y - this.next.height/2);\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n        var self = this;\n        (function shift() {\n          var hasSymbolUnder = false;\n          var symb;\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n            symb = self.chart.symbols[i];\n\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n\n          if (hasSymbolUnder) {\n            self.next.setX(symb.getX() + symb.width + lineLength);\n            shift();\n          }\n        })();\n\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    } else {\n      var bottomPoint = this.getBottom();\n\n      if (!this.next.isPositioned) {\n        this.next.shiftY(this.getY() + this.height + lineLength);\n        this.next.setX(bottomPoint.x - this.next.width/2);\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    }\n  }\n};\n\nSymbol.prototype.renderLines = function() {\n  if (this.next) {\n    if (this.next_direction) {\n      this.drawLineTo(this.next, '', this.next_direction);\n    } else {\n      this.drawLineTo(this.next);\n    }\n  }\n};\n\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n  if (this.connectedTo.indexOf(symbol) < 0) {\n    this.connectedTo.push(symbol);\n  }\n\n  var x = this.getCenter().x,\n      y = this.getCenter().y,\n      right = this.getRight(),\n      bottom = this.getBottom(),\n      left = this.getLeft();\n\n  var symbolX = symbol.getCenter().x,\n      symbolY = symbol.getCenter().y,\n      symbolTop = symbol.getTop(),\n      symbolRight = symbol.getRight(),\n      symbolLeft = symbol.getLeft();\n\n  var isOnSameColumn = x === symbolX,\n      isOnSameLine = y === symbolY,\n      isUnder = y < symbolY,\n      isUpper = y > symbolY || this === symbol,\n      isLeft = x > symbolX,\n      isRight = x < symbolX;\n\n  var maxX = 0,\n      line,\n      lineLength = this.getAttr('line-length'),\n      lineWith = this.getAttr('line-width');\n\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, bottom, symbolTop, text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x;\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n    line = drawLine(this.chart, right, symbolLeft, text);\n    this.rightStart = true;\n    symbol.leftEnd = true;\n    maxX = symbolLeft.x;\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n    line = drawLine(this.chart, left, symbolRight, text);\n    this.leftStart = true;\n    symbol.rightEnd = true;\n    maxX = symbolRight.x;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'bottom') && isLeft) {\n    if (this.leftEnd && isUpper) {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    } else {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    }\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((!origin || origin === 'bottom') && isRight) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((origin && origin === 'right') && isLeft) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'right') && isRight) {\n    line = drawLine(this.chart, right, [\n      {x: symbolTop.x, y: right.y},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + lineLength/2;\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n    var diffX = left.x - lineLength/2;\n    if (symbolLeft.x < left.x) {\n      diffX = symbolLeft.x - lineLength/2;\n    }\n    line = drawLine(this.chart, left, [\n      {x: diffX, y: left.y},\n      {x: diffX, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  } else if ((origin === 'left')) {\n    line = drawLine(this.chart, left, [\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  }\n\n  if (line) {\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n      var otherLine = this.chart.lines[l];\n      var len;\n\n      var ePath = otherLine.attr('path'),\n          lPath = line.attr('path');\n\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n        var newPath = [];\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\n        var line1_from_x = newPath[0][1];\n        var line1_from_y = newPath[0][2];\n        var line1_to_x = newPath[1][1];\n        var line1_to_y = newPath[1][2];\n\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n          var newLinePath = [];\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\n          var line2_from_x = newLinePath[0][1];\n          var line2_from_y = newLinePath[0][2];\n          var line2_to_x = newLinePath[1][1];\n          var line2_to_y = newLinePath[1][2];\n\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n          if (res.onLine1 && res.onLine2) {\n\n            var newSegment;\n            if (line2_from_y === line2_to_y) {\n              if (line2_from_x > line2_to_x) {\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            } else {\n              if (line2_from_y > line2_to_y) {\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            }\n\n            lP += 2;\n            len += 2;\n          }\n        }\n      }\n    }\n\n    this.chart.lines.push(line);\n  }\n\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n    this.chart.maxXFromLine = maxX;\n  }\n};\n\nmodule.exports = Symbol;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.js\n ** module id = 2\n ** module chunks = 1\n **/","function drawPath(chart, location, points) {\n  var i, len;\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [location.x, location.y];\n  for (i = 0, len = points.length; i < len; i++) {\n    pathValues.push(points[i].x);\n    pathValues.push(points[i].y);\n  }\n  var symbol = chart.paper.path(path, pathValues);\n  symbol.attr('stroke', chart.options['element-color']);\n  symbol.attr('stroke-width', chart.options['line-width']);\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) symbol.attr({ 'font': font });\n  if (fontF) symbol.attr({ 'font-family': fontF });\n  if (fontW) symbol.attr({ 'font-weight': fontW });\n\n  return symbol;\n}\n\nfunction drawLine(chart, from, to, text) {\n  var i, len;\n\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\n    to = [to];\n  }\n\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [from.x, from.y];\n  for (i = 0, len = to.length; i < len; i++) {\n    pathValues.push(to[i].x);\n    pathValues.push(to[i].y);\n  }\n\n  var line = chart.paper.path(path, pathValues);\n  line.attr({\n    stroke: chart.options['line-color'],\n    'stroke-width': chart.options['line-width'],\n    'arrow-end': chart.options['arrow-end']\n  });\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) line.attr({ 'font': font });\n  if (fontF) line.attr({ 'font-family': fontF });\n  if (fontW) line.attr({ 'font-weight': fontW });\n\n  if (text) {\n\n    var centerText = false;\n\n    var textPath = chart.paper.text(0, 0, text);\n\n    var isHorizontal = false;\n    var firstTo = to[0];\n\n    if (from.y === firstTo.y) {\n      isHorizontal = true;\n    }\n\n    var x = 0,\n        y = 0;\n\n    if (centerText) {\n      if (from.x > firstTo.x) {\n        x = from.x - (from.x - firstTo.x)/2;\n      } else {\n        x = firstTo.x - (firstTo.x - from.x)/2;\n      }\n\n      if (from.y > firstTo.y) {\n        y = from.y - (from.y - firstTo.y)/2;\n      } else {\n        y = firstTo.y - (firstTo.y - from.y)/2;\n      }\n\n      if (isHorizontal) {\n        x -= textPath.getBBox().width/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin'];\n        y -= textPath.getBBox().height/2;\n      }\n    } else {\n      x = from.x;\n      y = from.y;\n\n      if (isHorizontal) {\n        x += chart.options['text-margin']/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin']/2;\n        y += chart.options['text-margin'];\n      }\n    }\n\n    textPath.attr({\n      'text-anchor': 'start',\n      'font-size': chart.options['font-size'],\n      'fill': chart.options['font-color'],\n      x: x,\n      y: y\n    });\n\n    if (font) textPath.attr({ 'font': font });\n    if (fontF) textPath.attr({ 'font-family': fontF });\n    if (fontW) textPath.attr({ 'font-weight': fontW });\n  }\n\n  return line;\n}\n\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n  var denominator, a, b, numerator1, numerator2, result = {\n    x: null,\n    y: null,\n    onLine1: false,\n    onLine2: false\n  };\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n  if (denominator === 0) {\n    return result;\n  }\n  a = line1StartY - line2StartY;\n  b = line1StartX - line2StartX;\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  // if we cast these lines infinitely in both directions, they intersect here:\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\n  /*\n  // it is worth noting that this should be the same as:\n  x = line2StartX + (b * (line2EndX - line2StartX));\n  y = line2StartX + (b * (line2EndY - line2StartY));\n  */\n  // if line1 is a segment and line2 is infinite, they intersect if:\n  if (a > 0 && a < 1) {\n    result.onLine1 = true;\n  }\n  // if line2 is a segment and line1 is infinite, they intersect if:\n  if (b > 0 && b < 1) {\n    result.onLine2 = true;\n  }\n  // if line1 and line2 are segments, they intersect if both of the above are true\n  return result;\n}\n\nmodule.exports = {\n\tdrawPath: drawPath,\n\tdrawLine: drawLine,\n\tcheckLineIntersection: checkLineIntersection\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.functions.js\n ** module id = 7\n ** module chunks = 1\n **/","!function t(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports.Raphael=r():e.Raphael=r()}(this,function(){return function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p=\"\",e(0)}([function(t,e,r){var i,n;i=[r(1),r(3),r(4)],n=function(t){return t}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(2)],n=function(t){function e(r){if(e.is(r,\"function\"))return w?r():t.on(\"raphael.DOMload\",r);if(e.is(r,Q))return e._engine.create[z](e,r.splice(0,3+e.is(r[0],$))).add(r);var i=Array.prototype.slice.call(arguments,0);if(e.is(i[i.length-1],\"function\")){var n=i.pop();return w?n.call(e._engine.create[z](e,i)):t.on(\"raphael.DOMload\",function(){n.call(e._engine.create[z](e,i))})}return e._engine.create[z](e,arguments)}function r(t){if(\"function\"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var i in t)t[T](i)&&(e[i]=r(t[i]));return e}function i(t,e){for(var r=0,i=t.length;i>r;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}function n(t,e,r){function n(){var a=Array.prototype.slice.call(arguments,0),s=a.join(\"␀\"),o=n.cache=n.cache||{},l=n.count=n.count||[];return o[T](s)?(i(l,s),r?r(o[s]):o[s]):(l.length>=1e3&&delete o[l.shift()],l.push(s),o[s]=t[z](e,a),r?r(o[s]):o[s])}return n}function a(){return this.hex}function s(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function o(t,e,r,i,n){var a=-3*e+9*r-9*i+3*n,s=t*a+6*e-12*r+6*i;return t*s-3*e+3*r}function l(t,e,r,i,n,a,s,l,h){null==h&&(h=1),h=h>1?1:0>h?0:h;for(var u=h/2,c=12,f=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,g=0;c>g;g++){var x=u*f[g]+u,v=o(x,t,r,n,s),y=o(x,e,i,a,l),m=v*v+y*y;d+=p[g]*Y.sqrt(m)}return u*d}function h(t,e,r,i,n,a,s,o,h){if(!(0>h||l(t,e,r,i,n,a,s,o)<h)){var u=1,c=u/2,f=u-c,p,d=.01;for(p=l(t,e,r,i,n,a,s,o,f);H(p-h)>d;)c/=2,f+=(h>p?1:-1)*c,p=l(t,e,r,i,n,a,s,o,f);return f}}function u(t,e,r,i,n,a,s,o){if(!(W(t,r)<G(n,s)||G(t,r)>W(n,s)||W(e,i)<G(a,o)||G(e,i)>W(a,o))){var l=(t*i-e*r)*(n-s)-(t-r)*(n*o-a*s),h=(t*i-e*r)*(a-o)-(e-i)*(n*o-a*s),u=(t-r)*(a-o)-(e-i)*(n-s);if(u){var c=l/u,f=h/u,p=+c.toFixed(2),d=+f.toFixed(2);if(!(p<+G(t,r).toFixed(2)||p>+W(t,r).toFixed(2)||p<+G(n,s).toFixed(2)||p>+W(n,s).toFixed(2)||d<+G(e,i).toFixed(2)||d>+W(e,i).toFixed(2)||d<+G(a,o).toFixed(2)||d>+W(a,o).toFixed(2)))return{x:c,y:f}}}}function c(t,e){return p(t,e)}function f(t,e){return p(t,e,1)}function p(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=l.apply(0,t),o=l.apply(0,r),h=W(~~(s/5),1),c=W(~~(o/5),1),f=[],p=[],d={},g=i?0:[],x=0;h+1>x;x++){var v=e.findDotsAtSegment.apply(e,t.concat(x/h));f.push({x:v.x,y:v.y,t:x/h})}for(x=0;c+1>x;x++)v=e.findDotsAtSegment.apply(e,r.concat(x/c)),p.push({x:v.x,y:v.y,t:x/c});for(x=0;h>x;x++)for(var y=0;c>y;y++){var m=f[x],b=f[x+1],_=p[y],w=p[y+1],k=H(b.x-m.x)<.001?\"y\":\"x\",B=H(w.x-_.x)<.001?\"y\":\"x\",C=u(m.x,m.y,b.x,b.y,_.x,_.y,w.x,w.y);if(C){if(d[C.x.toFixed(4)]==C.y.toFixed(4))continue;d[C.x.toFixed(4)]=C.y.toFixed(4);var S=m.t+H((C[k]-m[k])/(b[k]-m[k]))*(b.t-m.t),T=_.t+H((C[B]-_[B])/(w[B]-_[B]))*(w.t-_.t);S>=0&&1.001>=S&&T>=0&&1.001>=T&&(i?g++:g.push({x:C.x,y:C.y,t1:G(S,1),t2:G(T,1)}))}}return g}function d(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,d,g=i?0:[],x=0,v=t.length;v>x;x++){var y=t[x];if(\"M\"==y[0])n=l=y[1],a=h=y[2];else{\"C\"==y[0]?(f=[n,a].concat(y.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var m=0,b=r.length;b>m;m++){var _=r[m];if(\"M\"==_[0])s=u=_[1],o=c=_[2];else{\"C\"==_[0]?(d=[s,o].concat(_.slice(1)),s=d[6],o=d[7]):(d=[s,o,s,o,u,c,u,c],s=u,o=c);var w=p(f,d,i);if(i)g+=w;else{for(var k=0,B=w.length;B>k;k++)w[k].segment1=x,w[k].segment2=m,w[k].bez1=f,w[k].bez2=d;g=g.concat(w)}}}}}return g}function g(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function x(){return this.x+I+this.y}function v(){return this.x+I+this.y+I+this.width+\" × \"+this.height}function y(t,e,r,i,n,a){function s(t){return((c*t+u)*t+h)*t}function o(t,e){var r=l(t,e);return((d*r+p)*r+f)*r}function l(t,e){var r,i,n,a,o,l;for(n=t,l=0;8>l;l++){if(a=s(n)-t,H(a)<e)return n;if(o=(3*c*n+2*u)*n+h,H(o)<1e-6)break;n-=a/o}if(r=0,i=1,n=t,r>n)return r;if(n>i)return i;for(;i>r;){if(a=s(n),H(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}var h=3*e,u=3*(i-e)-h,c=1-h-u,f=3*r,p=3*(n-r)-f,d=1-f-p;return o(t,1/(200*a))}function m(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[T](n)&&(i[ht(n)]=t[n],r.push(ht(n)));r.sort(Bt)}this.anim=i,this.top=r[r.length-1],this.percents=r}function b(r,i,n,a,s,o){n=ht(n);var l,h,u,c=[],f,p,d,x=r.ms,v={},m={},b={};if(a)for(w=0,B=Ee.length;B>w;w++){var _=Ee[w];if(_.el.id==i.id&&_.anim==r){_.percent!=n?(Ee.splice(w,1),u=1):h=_,i.attr(_.totalOrigin);break}}else a=+m;for(var w=0,B=r.percents.length;B>w;w++){if(r.percents[w]==n||r.percents[w]>a*r.top){n=r.percents[w],p=r.percents[w-1]||0,x=x/r.top*(n-p),f=r.percents[w+1],l=r.anim[n];break}a&&i.attr(r.anim[r.percents[w]])}if(l){if(h)h.initstatus=a,h.start=new Date-h.ms*a;else{for(var C in l)if(l[T](C)&&(pt[T](C)||i.paper.customAttributes[T](C)))switch(v[C]=i.attr(C),null==v[C]&&(v[C]=ft[C]),m[C]=l[C],pt[C]){case $:b[C]=(m[C]-v[C])/x;break;case\"colour\":v[C]=e.getRGB(v[C]);var S=e.getRGB(m[C]);b[C]={r:(S.r-v[C].r)/x,g:(S.g-v[C].g)/x,b:(S.b-v[C].b)/x};break;case\"path\":var A=Qt(v[C],m[C]),E=A[1];for(v[C]=A[0],b[C]=[],w=0,B=v[C].length;B>w;w++){b[C][w]=[0];for(var M=1,N=v[C][w].length;N>M;M++)b[C][w][M]=(E[w][M]-v[C][w][M])/x}break;case\"transform\":var L=i._,z=le(L[C],m[C]);if(z)for(v[C]=z.from,m[C]=z.to,b[C]=[],b[C].real=!0,w=0,B=v[C].length;B>w;w++)for(b[C][w]=[v[C][w][0]],M=1,N=v[C][w].length;N>M;M++)b[C][w][M]=(m[C][w][M]-v[C][w][M])/x;else{var F=i.matrix||new g,R={_:{transform:L.transform},getBBox:function(){return i.getBBox(1)}};v[C]=[F.a,F.b,F.c,F.d,F.e,F.f],se(R,m[C]),m[C]=R._.transform,b[C]=[(R.matrix.a-F.a)/x,(R.matrix.b-F.b)/x,(R.matrix.c-F.c)/x,(R.matrix.d-F.d)/x,(R.matrix.e-F.e)/x,(R.matrix.f-F.f)/x]}break;case\"csv\":var I=j(l[C])[q](k),D=j(v[C])[q](k);if(\"clip-rect\"==C)for(v[C]=D,b[C]=[],w=D.length;w--;)b[C][w]=(I[w]-v[C][w])/x;m[C]=I;break;default:for(I=[][P](l[C]),D=[][P](v[C]),b[C]=[],w=i.paper.customAttributes[C].length;w--;)b[C][w]=((I[w]||0)-(D[w]||0))/x}var V=l.easing,O=e.easing_formulas[V];if(!O)if(O=j(V).match(st),O&&5==O.length){var Y=O;O=function(t){return y(t,+Y[1],+Y[2],+Y[3],+Y[4],x)}}else O=St;if(d=l.start||r.start||+new Date,_={anim:r,percent:n,timestamp:d,start:d+(r.del||0),status:0,initstatus:a||0,stop:!1,ms:x,easing:O,from:v,diff:b,to:m,el:i,callback:l.callback,prev:p,next:f,repeat:o||r.times,origin:i.attr(),totalOrigin:s},Ee.push(_),a&&!h&&!u&&(_.stop=!0,_.start=new Date-x*a,1==Ee.length))return Ne();u&&(_.start=new Date-_.ms*a),1==Ee.length&&Me(Ne)}t(\"raphael.anim.start.\"+i.id,i,r)}}function _(t){for(var e=0;e<Ee.length;e++)Ee[e].el.paper==t&&Ee.splice(e--,1)}e.version=\"2.2.0\",e.eve=t;var w,k=/[, ]+/,B={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},C=/\\{(\\d+)\\}/g,S=\"prototype\",T=\"hasOwnProperty\",A={doc:document,win:window},E={was:Object.prototype[T].call(A.win,\"Raphael\"),is:A.win.Raphael},M=function(){this.ca=this.customAttributes={}},N,L=\"appendChild\",z=\"apply\",P=\"concat\",F=\"ontouchstart\"in A.win||A.win.DocumentTouch&&A.doc instanceof DocumentTouch,R=\"\",I=\" \",j=String,q=\"split\",D=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[q](I),V={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},O=j.prototype.toLowerCase,Y=Math,W=Y.max,G=Y.min,H=Y.abs,X=Y.pow,U=Y.PI,$=\"number\",Z=\"string\",Q=\"array\",J=\"toString\",K=\"fill\",tt=Object.prototype.toString,et={},rt=\"push\",it=e._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,nt=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i,at={NaN:1,Infinity:1,\"-Infinity\":1},st=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,ot=Y.round,lt=\"setAttribute\",ht=parseFloat,ut=parseInt,ct=j.prototype.toUpperCase,ft=e._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0,\"class\":\"\"},pt=e._availableAnimAttrs={blur:$,\"clip-rect\":\"csv\",cx:$,cy:$,fill:\"colour\",\"fill-opacity\":$,\"font-size\":$,height:$,opacity:$,path:\"path\",r:$,rx:$,ry:$,stroke:\"colour\",\"stroke-opacity\":$,\"stroke-width\":$,transform:\"transform\",width:$,x:$,y:$},dt=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]/g,gt=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,xt={hs:1,rg:1},vt=/,?([achlmqrstvxz]),?/gi,yt=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,mt=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,bt=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,_t=e._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,wt={},kt=function(t,e){return t.key-e.key},Bt=function(t,e){return ht(t)-ht(e)},Ct=function(){},St=function(t){return t},Tt=e._rectPath=function(t,e,r,i,n){return n?[[\"M\",t+n,e],[\"l\",r-2*n,0],[\"a\",n,n,0,0,1,n,n],[\"l\",0,i-2*n],[\"a\",n,n,0,0,1,-n,n],[\"l\",2*n-r,0],[\"a\",n,n,0,0,1,-n,-n],[\"l\",0,2*n-i],[\"a\",n,n,0,0,1,n,-n],[\"z\"]]:[[\"M\",t,e],[\"l\",r,0],[\"l\",0,i],[\"l\",-r,0],[\"z\"]]},At=function(t,e,r,i){return null==i&&(i=r),[[\"M\",t,e],[\"m\",0,-i],[\"a\",r,i,0,1,1,0,2*i],[\"a\",r,i,0,1,1,0,-2*i],[\"z\"]]},Et=e._getPath={path:function(t){return t.attr(\"path\")},circle:function(t){var e=t.attrs;return At(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return At(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return Tt(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return Tt(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return Tt(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return Tt(e.x,e.y,e.width,e.height)}},Mt=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(t=Qt(t),n=0,s=t.length;s>n;n++)for(l=t[n],a=1,o=l.length;o>a;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=A,e.type=A.win.SVGAngle||A.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==e.type){var Nt=A.doc.createElement(\"div\"),Lt;if(Nt.innerHTML='<v:shape adj=\"1\"/>',Lt=Nt.firstChild,Lt.style.behavior=\"url(#default#VML)\",!Lt||\"object\"!=typeof Lt.adj)return e.type=R;Nt=null}e.svg=!(e.vml=\"VML\"==e.type),e._Paper=M,e.fn=N=M.prototype=e.prototype,e._id=0,e.is=function(t,e){return e=O.call(e),\"finite\"==e?!at[T](+t):\"array\"==e?t instanceof Array:\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||\"array\"==e&&Array.isArray&&Array.isArray(t)||tt.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*Y.atan2(-l,-o)/U+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*U/180},e.deg=function(t){return Math.round(180*t/U%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,\"finite\")?i:10,e.is(t,Q)){for(var n=t.length;n--;)if(H(t[n]-r)<=i)return t[n]}else{t=+t;var a=r%t;if(i>a)return r-a;if(a>t-i)return r-a+t}return r};var zt=e.createUUID=function(t,e){return function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(t,e).toUpperCase()}}(/[xy]/g,function(t){var e=16*Y.random()|0,r=\"x\"==t?e:3&e|8;return r.toString(16)});e.setWindow=function(r){t(\"raphael.setWindow\",e,A.win,r),A.win=r,A.doc=A.win.document,e._engine.initWin&&e._engine.initWin(A.win)};var Pt=function(t){if(e.vml){var r=/^\\s+|\\s+$/g,i;try{var a=new ActiveXObject(\"htmlfile\");a.write(\"<body>\"),a.close(),i=a.body}catch(s){i=createPopup().document.body}var o=i.createTextRange();Pt=n(function(t){try{i.style.color=j(t).replace(r,R);var e=o.queryCommandValue(\"ForeColor\");return e=(255&e)<<16|65280&e|(16711680&e)>>>16,\"#\"+(\"000000\"+e.toString(16)).slice(-6)}catch(n){return\"none\"}})}else{var l=A.doc.createElement(\"i\");l.title=\"Raphaël Colour Picker\",l.style.display=\"none\",A.doc.body.appendChild(l),Pt=n(function(t){return l.style.color=t,A.doc.defaultView.getComputedStyle(l,R).getPropertyValue(\"color\")})}return Pt(t)},Ft=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},Rt=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},It=function(){return this.hex},jt=function(t,r,i){if(null==r&&e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,Z)){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},qt=function(t,r,i,n){t*=255,r*=255,i*=255;var a={r:t,g:r,b:i,hex:e.rgb(t,r,i),toString:It};return e.is(n,\"finite\")&&(a.opacity=n),a};e.color=function(t){var r;return e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,\"string\")&&(t=e.getRGB(t)),e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:\"none\"},t.r=t.g=t.b=t.h=t.s=t.v=t.l=-1)),t.toString=It,t},e.hsb2rgb=function(t,e,r,i){this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),t*=360;var n,a,s,o,l;return t=t%360/60,l=r*e,o=l*(1-H(t%2-1)),n=a=s=r-l,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.hsl2rgb=function(t,e,r,i){this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),t*=360;var n,a,s,o,l;return t=t%360/60,l=2*e*(.5>r?r:1-r),o=l*(1-H(t%2-1)),n=a=s=r-l/2,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.rgb2hsb=function(t,e,r){r=jt(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s;return a=W(t,e,r),s=a-G(t,e,r),i=0==s?null:a==t?(e-r)/s:a==e?(r-t)/s+2:(t-e)/s+4,i=(i+360)%6*60/360,n=0==s?0:s/a,{h:i,s:n,b:a,toString:Ft}},e.rgb2hsl=function(t,e,r){r=jt(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s,o,l;return s=W(t,e,r),o=G(t,e,r),l=s-o,i=0==l?null:s==t?(e-r)/l:s==e?(r-t)/l+2:(t-e)/l+4,i=(i+360)%6*60/360,a=(s+o)/2,n=0==l?0:.5>a?l/(2*a):l/(2-2*a),{h:i,s:n,l:a,toString:Rt}},e._path2string=function(){return this.join(\",\").replace(vt,\"$1\")};var Dt=e._preload=function(t,e){var r=A.doc.createElement(\"img\");r.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",r.onload=function(){e.call(this),this.onload=null,A.doc.body.removeChild(this)},r.onerror=function(){A.doc.body.removeChild(this)},A.doc.body.appendChild(r),r.src=t};e.getRGB=n(function(t){if(!t||(t=j(t)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:a};if(\"none\"==t)return{r:-1,g:-1,b:-1,hex:\"none\",toString:a};!(xt[T](t.toLowerCase().substring(0,2))||\"#\"==t.charAt())&&(t=Pt(t));var r,i,n,s,o,l,h,u=t.match(nt);return u?(u[2]&&(s=ut(u[2].substring(5),16),n=ut(u[2].substring(3,5),16),i=ut(u[2].substring(1,3),16)),u[3]&&(s=ut((l=u[3].charAt(3))+l,16),n=ut((l=u[3].charAt(2))+l,16),i=ut((l=u[3].charAt(1))+l,16)),u[4]&&(h=u[4][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),\"rgba\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100)),u[5]?(h=u[5][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),(\"deg\"==h[0].slice(-3)||\"°\"==h[0].slice(-1))&&(i/=360),\"hsba\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100),e.hsb2rgb(i,n,s,o)):u[6]?(h=u[6][q](gt),i=ht(h[0]),\"%\"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),\"%\"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),\"%\"==h[2].slice(-1)&&(s*=2.55),(\"deg\"==h[0].slice(-3)||\"°\"==h[0].slice(-1))&&(i/=360),\"hsla\"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&\"%\"==h[3].slice(-1)&&(o/=100),e.hsl2rgb(i,n,s,o)):(u={r:i,g:n,b:s,toString:a},u.hex=\"#\"+(16777216|s|n<<8|i<<16).toString(16).slice(1),e.is(o,\"finite\")&&(u.opacity=o),u)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:a}},e),e.hsb=n(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=n(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=n(function(t,e,r){function i(t){return t+.5|0}return\"#\"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=Vt(t);if(r.arr)return Yt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,Q)&&e.is(t[0],Q)&&(n=Yt(t)),n.length||j(t).replace(yt,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(bt,function(t,e){e&&a.push(+e)}),\"m\"==s&&a.length>2&&(n.push([e][P](a.splice(0,2))),s=\"l\",e=\"m\"==e?\"l\":\"L\"),\"r\"==s)n.push([e][P](a));else for(;a.length>=i[s]&&(n.push([e][P](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=Yt(n),n},e.parseTransformString=n(function(t){if(!t)return null;var r={r:3,s:4,t:2,m:6},i=[];return e.is(t,Q)&&e.is(t[0],Q)&&(i=Yt(t)),i.length||j(t).replace(mt,function(t,e,r){var n=[],a=O.call(e);r.replace(bt,function(t,e){e&&n.push(+e)}),i.push([e][P](n))}),i.toString=e._path2string,i});var Vt=function(t){var e=Vt.ps=Vt.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[T](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=X(h,3),c=X(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,x=t+2*l*(r-t)+f*(n-2*r+t),v=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,_=h*e+l*i,w=h*n+l*s,k=h*a+l*o,B=90-180*Y.atan2(x-y,v-m)/U;return(x>y||m>v)&&(B+=180),{x:d,y:g,m:{x:x,y:v},n:{x:y,y:m},start:{x:b,y:_},end:{x:w,y:k},alpha:B}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,\"array\")||(t=[t,r,i,n,a,s,o,l]);var h=Zt.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return d(t,e)},e.pathIntersectionNumber=function(t,e){return d(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&d(t,[[\"M\",r,i],[\"H\",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+e+\"” of removed object\",e)}};var Ot=e.pathBBox=function(t){var e=Vt(t);if(e.bbox)return r(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};t=Qt(t);for(var i=0,n=0,a=[],s=[],o,l=0,h=t.length;h>l;l++)if(o=t[l],\"M\"==o[0])i=o[1],n=o[2],a.push(i),s.push(n);else{var u=Zt(i,n,o[1],o[2],o[3],o[4],o[5],o[6]);a=a[P](u.min.x,u.max.x),s=s[P](u.min.y,u.max.y),i=o[5],n=o[6]}var c=G[z](0,a),f=G[z](0,s),p=W[z](0,a),d=W[z](0,s),g=p-c,x=d-f,v={x:c,y:f,x2:p,y2:d,width:g,height:x,cx:c+g/2,cy:f+x/2};return e.bbox=r(v),v},Yt=function(t){var i=r(t);return i.toString=e._path2string,i},Wt=e._pathToRelative=function(t){var r=Vt(t);if(r.rel)return Yt(r.rel);e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(n=t[0][1],a=t[0][2],s=n,o=a,l++,i.push([\"M\",n,a]));for(var h=l,u=t.length;u>h;h++){var c=i[h]=[],f=t[h];if(f[0]!=O.call(f[0]))switch(c[0]=O.call(f[0]),c[0]){case\"a\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case\"v\":c[1]=+(f[1]-a).toFixed(3);break;case\"m\":s=f[1],o=f[2];default:for(var p=1,d=f.length;d>p;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],\"m\"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,x=f.length;x>g;g++)i[h][g]=f[g]}var v=i[h].length;switch(i[h][0]){case\"z\":n=s,a=o;break;case\"h\":n+=+i[h][v-1];break;case\"v\":a+=+i[h][v-1];break;default:n+=+i[h][v-2],a+=+i[h][v-1]}}return i.toString=e._path2string,r.rel=Yt(i),i},Gt=e._pathToAbsolute=function(t){var r=Vt(t);if(r.abs)return Yt(r.abs);if(e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t)),!t||!t.length)return[[\"M\",0,0]];var i=[],n=0,a=0,o=0,l=0,h=0;\"M\"==t[0][0]&&(n=+t[0][1],a=+t[0][2],o=n,l=a,h++,i[0]=[\"M\",n,a]);for(var u=3==t.length&&\"M\"==t[0][0]&&\"R\"==t[1][0].toUpperCase()&&\"Z\"==t[2][0].toUpperCase(),c,f,p=h,d=t.length;d>p;p++){if(i.push(c=[]),f=t[p],f[0]!=ct.call(f[0]))switch(c[0]=ct.call(f[0]),c[0]){case\"A\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]+n),c[7]=+(f[7]+a);break;case\"V\":c[1]=+f[1]+a;break;case\"H\":c[1]=+f[1]+n;break;case\"R\":for(var g=[n,a][P](f.slice(1)),x=2,v=g.length;v>x;x++)g[x]=+g[x]+n,g[++x]=+g[x]+a;i.pop(),i=i[P](s(g,u));break;case\"M\":o=+f[1]+n,l=+f[2]+a;default:for(x=1,v=f.length;v>x;x++)c[x]=+f[x]+(x%2?n:a)}else if(\"R\"==f[0])g=[n,a][P](f.slice(1)),i.pop(),i=i[P](s(g,u)),c=[\"R\"][P](f.slice(-2));else for(var y=0,m=f.length;m>y;y++)c[y]=f[y];switch(c[0]){case\"Z\":n=o,a=l;break;case\"H\":n=c[1];break;case\"V\":a=c[1];break;case\"M\":o=c[c.length-2],l=c[c.length-1];default:n=c[c.length-2],a=c[c.length-1]}}return i.toString=e._path2string,r.abs=Yt(i),i},Ht=function(t,e,r,i){return[t,e,r,i,r,i]},Xt=function(t,e,r,i,n,a){var s=1/3,o=2/3;return[s*t+o*r,s*e+o*i,s*n+o*r,s*a+o*i,n,a]},Ut=function(t,e,r,i,a,s,o,l,h,u){var c=120*U/180,f=U/180*(+a||0),p=[],d,g=n(function(t,e,r){var i=t*Y.cos(r)-e*Y.sin(r),n=t*Y.sin(r)+e*Y.cos(r);return{x:i,y:n}});if(u)S=u[0],T=u[1],B=u[2],C=u[3];else{d=g(t,e,-f),t=d.x,e=d.y,d=g(l,h,-f),l=d.x,h=d.y;var x=Y.cos(U/180*a),v=Y.sin(U/180*a),y=(t-l)/2,m=(e-h)/2,b=y*y/(r*r)+m*m/(i*i);b>1&&(b=Y.sqrt(b),r=b*r,i=b*i);var _=r*r,w=i*i,k=(s==o?-1:1)*Y.sqrt(H((_*w-_*m*m-w*y*y)/(_*m*m+w*y*y))),B=k*r*m/i+(t+l)/2,C=k*-i*y/r+(e+h)/2,S=Y.asin(((e-C)/i).toFixed(9)),T=Y.asin(((h-C)/i).toFixed(9));S=B>t?U-S:S,T=B>l?U-T:T,0>S&&(S=2*U+S),0>T&&(T=2*U+T),o&&S>T&&(S-=2*U),!o&&T>S&&(T-=2*U)}var A=T-S;if(H(A)>c){var E=T,M=l,N=h;T=S+c*(o&&T>S?1:-1),l=B+r*Y.cos(T),h=C+i*Y.sin(T),p=Ut(l,h,r,i,a,0,o,M,N,[T,E,B,C])}A=T-S;var L=Y.cos(S),z=Y.sin(S),F=Y.cos(T),R=Y.sin(T),I=Y.tan(A/4),j=4/3*r*I,D=4/3*i*I,V=[t,e],O=[t+j*z,e-D*L],W=[l+j*R,h-D*F],G=[l,h];if(O[0]=2*V[0]-O[0],O[1]=2*V[1]-O[1],u)return[O,W,G][P](p);p=[O,W,G][P](p).join()[q](\",\");for(var X=[],$=0,Z=p.length;Z>$;$++)X[$]=$%2?g(p[$-1],p[$],f).y:g(p[$],p[$+1],f).x;return X},$t=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:X(h,3)*t+3*X(h,2)*l*r+3*h*l*l*n+X(l,3)*s,y:X(h,3)*e+3*X(h,2)*l*i+3*h*l*l*a+X(l,3)*o}},Zt=n(function(t,e,r,i,n,a,s,o){var l=n-2*r+t-(s-2*n+r),h=2*(r-t)-2*(n-r),u=t-r,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,p=[e,o],d=[t,s],g;return H(c)>\"1e12\"&&(c=.5),H(f)>\"1e12\"&&(f=.5),c>0&&1>c&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&1>f&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),l=a-2*i+e-(o-2*a+i),h=2*(i-e)-2*(a-i),u=e-i,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,H(c)>\"1e12\"&&(c=.5),H(f)>\"1e12\"&&(f=.5),c>0&&1>c&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&1>f&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),{min:{x:G[z](0,d),y:G[z](0,p)},max:{x:W[z](0,d),y:W[z](0,p)}}}),Qt=e._path2curve=n(function(t,e){var r=!e&&Vt(t);if(!e&&r.curve)return Yt(r.curve);for(var i=Gt(t),n=e&&Gt(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=(function(t,e,r){var i,n,a={T:1,Q:1};if(!t)return[\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in a)&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"][P](Ut[z](0,[e.x,e.y][P](t.slice(1))));break;case\"S\":\"C\"==r||\"S\"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=[\"C\",i,n][P](t.slice(1));break;case\"T\":\"Q\"==r||\"T\"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"][P](Xt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"][P](Xt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"][P](Ht(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"][P](Ht(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"][P](Ht(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"][P](Ht(e.x,e.y,e.X,e.Y))}return t}),l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]=\"A\",n&&(c[e]=\"A\"),t.splice(e++,0,[\"C\"][P](r.splice(0,6)));t.splice(e,1),g=W(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&\"M\"==t[s][0]&&\"M\"!=e[s][0]&&(e.splice(s,0,[\"M\",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],g=W(i.length,n&&n.length||0))},u=[],c=[],f=\"\",p=\"\",d=0,g=W(i.length,n&&n.length||0);g>d;d++){i[d]&&(f=i[d][0]),\"C\"!=f&&(u[d]=f,d&&(p=u[d-1])),i[d]=o(i[d],a,p),\"A\"!=u[d]&&\"C\"==f&&(u[d]=\"C\"),l(i,d),n&&(n[d]&&(f=n[d][0]),\"C\"!=f&&(c[d]=f,d&&(p=c[d-1])),n[d]=o(n[d],s,p),\"A\"!=c[d]&&\"C\"==f&&(c[d]=\"C\"),l(n,d)),h(i,n,a,s,d),h(n,i,s,a,d);var x=i[d],v=n&&n[d],y=x.length,m=n&&v.length;a.x=x[y-2],a.y=x[y-1],a.bx=ht(x[y-4])||a.x,a.by=ht(x[y-3])||a.y,s.bx=n&&(ht(v[m-4])||s.x),s.by=n&&(ht(v[m-3])||s.y),s.x=n&&v[m-2],s.y=n&&v[m-1]}return n||(r.curve=Yt(i)),n?[i,n]:i},null,Yt),Jt=e._parseDots=n(function(t){for(var r=[],i=0,n=t.length;n>i;i++){var a={},s=t[i].match(/^([^:]*):?([\\d\\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+\"%\"),r.push(a)}for(i=1,n=r.length-1;n>i;i++)if(!r[i].offset){for(var o=ht(r[i-1].offset||0),l=0,h=i+1;n>h;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n),l=ht(l);for(var u=(l-o)/(h-i+1);h>i;i++)o+=u,r[i].offset=o+\"%\"}return r}),Kt=e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)},te=e._tofront=function(t,e){e.top!==t&&(Kt(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},ee=e._toback=function(t,e){e.bottom!==t&&(Kt(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},re=e._insertafter=function(t,e,r){Kt(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},ie=e._insertbefore=function(t,e,r){Kt(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},ne=e.toMatrix=function(t,e){var r=Ot(t),i={_:{transform:R},getBBox:function(){return r}};return se(i,e),i.matrix},ae=e.transformPath=function(t,e){return Mt(t,ne(t,e))},se=e._extractTransform=function(t,r){if(null==r)return t._.transform;r=j(r).replace(/\\.{3}|\\u2026/g,t._.transform||R);var i=e.parseTransformString(r),n=0,a=0,s=0,o=1,l=1,h=t._,u=new g;if(h.transform=i||[],i)for(var c=0,f=i.length;f>c;c++){var p=i[c],d=p.length,x=j(p[0]).toLowerCase(),v=p[0]!=x,y=v?u.invert():0,m,b,_,w,k;\"t\"==x&&3==d?v?(m=y.x(0,0),b=y.y(0,0),_=y.x(p[1],p[2]),w=y.y(p[1],p[2]),u.translate(_-m,w-b)):u.translate(p[1],p[2]):\"r\"==x?2==d?(k=k||t.getBBox(1),u.rotate(p[1],k.x+k.width/2,k.y+k.height/2),n+=p[1]):4==d&&(v?(_=y.x(p[2],p[3]),w=y.y(p[2],p[3]),u.rotate(p[1],_,w)):u.rotate(p[1],p[2],p[3]),n+=p[1]):\"s\"==x?2==d||3==d?(k=k||t.getBBox(1),u.scale(p[1],p[d-1],k.x+k.width/2,k.y+k.height/2),o*=p[1],l*=p[d-1]):5==d&&(v?(_=y.x(p[3],p[4]),w=y.y(p[3],p[4]),u.scale(p[1],p[2],_,w)):u.scale(p[1],p[2],p[3],p[4]),o*=p[1],l*=p[2]):\"m\"==x&&7==d&&u.add(p[1],p[2],p[3],p[4],p[5],p[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=n,h.dx=a=u.e,h.dy=s=u.f,1==o&&1==l&&!n&&h.bbox?(h.bbox.x+=+a,h.bbox.y+=+s):h.dirtyT=1},oe=function(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return[e,0,0];case\"m\":return[e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},le=e._equaliseTransform=function(t,r){r=j(r).replace(/\\.{3}|\\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i=W(t.length,r.length),n=[],a=[],s=0,o,l,h,u;i>s;s++){if(h=t[s]||oe(r[s]),u=r[s]||oe(h),h[0]!=u[0]||\"r\"==h[0].toLowerCase()&&(h[2]!=u[2]||h[3]!=u[3])||\"s\"==h[0].toLowerCase()&&(h[3]!=u[3]||h[4]!=u[4]))return;for(n[s]=[],a[s]=[],o=0,l=W(h.length,u.length);l>o;o++)o in h&&(n[s][o]=h[o]),o in u&&(a[s][o]=u[o])}return{from:n,to:a}};e._getContainer=function(t,r,i,n){var a;return a=null!=n||e.is(t,\"object\")?t:A.doc.getElementById(t),null!=a?a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}:void 0},e.pathToRelative=Wt,e._engine={},e.path2curve=Qt,e.matrix=function(t,e,r,i,n,a){return new g(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=Y.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s=[[],[],[]],o=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],l=[[t,r,n],[e,i,a],[0,0,1]],h,u,c,f;for(t&&t instanceof g&&(l=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),h=0;3>h;h++)for(u=0;3>u;u++){for(f=0,c=0;3>c;c++)f+=o[h][c]*l[c][u];s[h][u]=f}this.a=s[0][0],this.b=s[1][0],this.c=s[0][1],this.d=s[1][1],this.e=s[0][2],this.f=s[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new g(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new g(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){\nthis.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+Y.cos(t).toFixed(9),a=+Y.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[j.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=Y.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=Y.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return 0>s?(t.rotate=e.deg(Y.acos(s)),0>a&&(t.rotate=360-t.rotate)):t.rotate=e.deg(Y.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[q]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[e.dx,e.dy]:R)+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:R)+(e.rotate?\"r\"+[e.rotate,0,0]:R)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(g.prototype);for(var he=function(){this.returnValue=!1},ue=function(){return this.originalEvent.preventDefault()},ce=function(){this.cancelBubble=!0},fe=function(){return this.originalEvent.stopPropagation()},pe=function(t){var e=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,r=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},de=function(){return A.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=pe(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),F&&V[e]){var a=function(e){for(var n=pe(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;o>s;s++)if(e.targetTouches[s].target==t){e=e.targetTouches[s],e.originalEvent=a,e.preventDefault=ue,e.stopPropagation=fe;break}return r.call(i,e,n.x,n.y)};t.addEventListener(V[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),F&&V[e]&&t.removeEventListener(V[e],a,!1),!0}}:A.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||A.win.event;var e=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,n=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||he,t.stopPropagation=t.stopPropagation||ce,r.call(i,t,a,s)};t.attachEvent(\"on\"+e,n);var a=function(){return t.detachEvent(\"on\"+e,n),!0};return a}:void 0}(),ge=[],xe=function(e){for(var r=e.clientX,i=e.clientY,n=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,a=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft,s,o=ge.length;o--;){if(s=ge[o],F&&e.touches){for(var l=e.touches.length,h;l--;)if(h=e.touches[l],h.identifier==s.el._drag.id){r=h.clientX,i=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var u=s.el.node,c,f=u.nextSibling,p=u.parentNode,d=u.style.display;A.win.opera&&p.removeChild(u),u.style.display=\"none\",c=s.el.paper.getElementByPoint(r,i),u.style.display=d,A.win.opera&&(f?p.insertBefore(u,f):p.appendChild(u)),c&&t(\"raphael.drag.over.\"+s.el.id,s.el,c),r+=a,i+=n,t(\"raphael.drag.move.\"+s.el.id,s.move_scope||s.el,r-s.el._drag.x,i-s.el._drag.y,r,i,e)}},ve=function(r){e.unmousemove(xe).unmouseup(ve);for(var i=ge.length,n;i--;)n=ge[i],n.el._drag={},t(\"raphael.drag.end.\"+n.el.id,n.end_scope||n.start_scope||n.move_scope||n.el,r);ge=[]},ye=e.el={},me=D.length;me--;)!function(t){e[t]=ye[t]=function(r,i){return e.is(r,\"function\")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:de(this.shape||this.node||A.doc,t,r,i||this)})),this},e[\"un\"+t]=ye[\"un\"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,\"undefined\")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(D[me]);ye.data=function(r,i){var n=wt[this.id]=wt[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,\"object\")){for(var a in r)r[T](a)&&this.data(a,r[a]);return this}return t(\"raphael.data.get.\"+this.id,this,n[r],r),n[r]}return n[r]=i,t(\"raphael.data.set.\"+this.id,this,i,r),this},ye.removeData=function(t){return null==t?wt[this.id]={}:wt[this.id]&&delete wt[this.id][t],this},ye.getData=function(){return r(wt[this.id]||{})},ye.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},ye.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var be=[];ye.drag=function(r,i,n,a,s,o){function l(l){(l.originalEvent||l).preventDefault();var h=l.clientX,u=l.clientY,c=A.doc.documentElement.scrollTop||A.doc.body.scrollTop,f=A.doc.documentElement.scrollLeft||A.doc.body.scrollLeft;if(this._drag.id=l.identifier,F&&l.touches)for(var p=l.touches.length,d;p--;)if(d=l.touches[p],this._drag.id=d.identifier,d.identifier==this._drag.id){h=d.clientX,u=d.clientY;break}this._drag.x=h+f,this._drag.y=u+c,!ge.length&&e.mousemove(xe).mouseup(ve),ge.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on(\"raphael.drag.start.\"+this.id,i),r&&t.on(\"raphael.drag.move.\"+this.id,r),n&&t.on(\"raphael.drag.end.\"+this.id,n),t(\"raphael.drag.start.\"+this.id,s||a||this,l.clientX+f,l.clientY+c,l)}return this._drag={},be.push({el:this,start:l}),this.mousedown(l),this},ye.onDragOver=function(e){e?t.on(\"raphael.drag.over.\"+this.id,e):t.unbind(\"raphael.drag.over.\"+this.id)},ye.undrag=function(){for(var r=be.length;r--;)be[r].el==this&&(this.unmousedown(be[r].start),be.splice(r,1),t.unbind(\"raphael.drag.*.\"+this.id));!be.length&&e.unmousemove(xe).unmouseup(ve),ge=[]},N.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},N.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},N.path=function(t){t&&!e.is(t,Z)&&!e.is(t[0],Q)&&(t+=R);var r=e._engine.path(e.format[z](e,arguments),this);return this.__set__&&this.__set__.push(r),r},N.image=function(t,r,i,n,a){var s=e._engine.image(this,t||\"about:blank\",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,j(i));return this.__set__&&this.__set__.push(n),n},N.set=function(t){!e.is(t,\"array\")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ze(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type=\"set\",r},N.setStart=function(t){this.__set__=t||this.set()},N.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},N.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},N.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},N.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},N.top=N.bottom=null,N.raphael=e;var _e=function(t){var e=t.getBoundingClientRect(),r=t.ownerDocument,i=r.body,n=r.documentElement,a=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,o=e.top+(A.win.pageYOffset||n.scrollTop||i.scrollTop)-a,l=e.left+(A.win.pageXOffset||n.scrollLeft||i.scrollLeft)-s;return{y:o,x:l}};N.getElementByPoint=function(t,e){var r=this,i=r.canvas,n=A.doc.elementFromPoint(t,e);if(A.win.opera&&\"svg\"==n.tagName){var a=_e(i),s=i.createSVGRect();s.x=t-a.x,s.y=e-a.y,s.width=s.height=1;var o=i.getIntersectionList(s,null);o.length&&(n=o[o.length-1])}if(!n)return null;for(;n.parentNode&&n!=i.parentNode&&!n.raphael;)n=n.parentNode;return n==r.canvas.parentNode&&(n=i),n=n&&n.raphael?r.getById(n.raphaelid):null},N.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},N.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},N.forEach=function(t,e){for(var r=this.bottom;r;){if(t.call(e,r)===!1)return this;r=r.next}return this},N.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},ye.isPointInside=function(t,r){var i=this.realPath=Et[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(i=e.transformPath(i,this.attr(\"transform\"))),e.isPointInsidePath(i,t,r)},ye.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Et[this.type](this),e.bboxwt=Ot(this.realPath),e.bboxwt.toString=v,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Et[this.type](this)),e.bbox=Ot(Mt(this.realPath,this.matrix)),e.bbox.toString=v,e.dirty=e.dirtyT=0),e.bbox)},ye.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},ye.glow=function(t){if(\"text\"==this.type)return null;t=t||{};var e={width:(t.width||10)+(+this.attr(\"stroke-width\")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||\"#000\"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Et[this.type](this);a=this.matrix?Mt(a,this.matrix):a;for(var s=1;r+1>s;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var we={},ke=function(t,r,i,n,a,s,o,u,c){return null==c?l(t,r,i,n,a,s,o,u):e.findDotsAtSegment(t,r,i,n,a,s,o,u,h(t,r,i,n,a,s,o,u,c))},Be=function(t,r){return function(i,n,a){i=Qt(i);for(var s,o,l,h,u=\"\",c={},f,p=0,d=0,g=i.length;g>d;d++){if(l=i[d],\"M\"==l[0])s=+l[1],o=+l[2];else{if(h=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6]),p+h>n){if(r&&!c.start){if(f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),u+=[\"C\"+f.start.x,f.start.y,f.m.x,f.m.y,f.x,f.y],a)return u;c.start=u,u=[\"M\"+f.x,f.y+\"C\"+f.n.x,f.n.y,f.end.x,f.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),{x:f.x,y:f.y,alpha:f.alpha}}p+=h,s=+l[5],o=+l[6]}u+=l.shift()+l}return c.end=u,f=t?p:r?c:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1),f.alpha&&(f={x:f.x,y:f.y,alpha:f.alpha}),f}},Ce=Be(1),Se=Be(),Te=Be(0,1);e.getTotalLength=Ce,e.getPointAtLength=Se,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Te(t,e).end;var i=Te(t,r,1);return e?Te(i,e).end:i},ye.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():Ce(t)},ye.getPointAtLength=function(t){var e=this.getPath();if(e)return Se(e,t)},ye.getPath=function(){var t,r=e._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return r&&(t=r(this)),t},ye.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Ae=e.easing_formulas={linear:function(t){return t},\"<\":function(t){return X(t,1.7)},\">\":function(t){return X(t,.48)},\"<>\":function(t){var e=.48-t/1.04,r=Y.sqrt(.1734+e*e),i=r-e,n=X(H(i),1/3)*(0>i?-1:1),a=-r-e,s=X(H(a),1/3)*(0>a?-1:1),o=n+s+.5;return 3*(1-o)*o*o+o*o*o},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:X(2,-10*t)*Y.sin((t-.075)*(2*U)/.3)+1},bounce:function(t){var e=7.5625,r=2.75,i;return 1/r>t?i=e*t*t:2/r>t?(t-=1.5/r,i=e*t*t+.75):2.5/r>t?(t-=2.25/r,i=e*t*t+.9375):(t-=2.625/r,i=e*t*t+.984375),i}};Ae.easeIn=Ae[\"ease-in\"]=Ae[\"<\"],Ae.easeOut=Ae[\"ease-out\"]=Ae[\">\"],Ae.easeInOut=Ae[\"ease-in-out\"]=Ae[\"<>\"],Ae[\"back-in\"]=Ae.backIn,Ae[\"back-out\"]=Ae.backOut;var Ee=[],Me=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},Ne=function(){for(var r=+new Date,i=0;i<Ee.length;i++){var n=Ee[i];if(!n.el.removed&&!n.paused){var a=r-n.start,s=n.ms,o=n.easing,l=n.from,h=n.diff,u=n.to,c=n.t,f=n.el,p={},d,g={},x;if(n.initstatus?(a=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*s,n.status=n.initstatus,delete n.initstatus,n.stop&&Ee.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(a/s))/n.anim.top,!(0>a))if(s>a){var v=o(a/s);for(var y in l)if(l[T](y)){switch(pt[y]){case $:d=+l[y]+v*s*h[y];break;case\"colour\":d=\"rgb(\"+[Le(ot(l[y].r+v*s*h[y].r)),Le(ot(l[y].g+v*s*h[y].g)),Le(ot(l[y].b+v*s*h[y].b))].join(\",\")+\")\";break;case\"path\":d=[];for(var m=0,_=l[y].length;_>m;m++){d[m]=[l[y][m][0]];for(var w=1,k=l[y][m].length;k>w;w++)d[m][w]=+l[y][m][w]+v*s*h[y][m][w];d[m]=d[m].join(I)}d=d.join(I);break;case\"transform\":if(h[y].real)for(d=[],m=0,_=l[y].length;_>m;m++)for(d[m]=[l[y][m][0]],w=1,k=l[y][m].length;k>w;w++)d[m][w]=l[y][m][w]+v*s*h[y][m][w];else{var B=function(t){return+l[y][t]+v*s*h[y][t]};d=[[\"m\",B(0),B(1),B(2),B(3),B(4),B(5)]]}break;case\"csv\":if(\"clip-rect\"==y)for(d=[],m=4;m--;)d[m]=+l[y][m]+v*s*h[y][m];break;default:var C=[][P](l[y]);for(d=[],m=f.paper.customAttributes[y].length;m--;)d[m]=+C[m]+v*s*h[y][m]}p[y]=d}f.attr(p),function(e,r,i){setTimeout(function(){t(\"raphael.anim.frame.\"+e,r,i)})}(f.id,f,n.anim)}else{if(function(r,i,n){setTimeout(function(){t(\"raphael.anim.frame.\"+i.id,i,n),t(\"raphael.anim.finish.\"+i.id,i,n),e.is(r,\"function\")&&r.call(i)})}(n.callback,f,n.anim),f.attr(u),Ee.splice(i--,1),n.repeat>1&&!n.next){for(x in u)u[T](x)&&(g[x]=n.totalOrigin[x]);n.el.attr(g),b(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&b(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Ee.length&&Me(Ne)},Le=function(t){return t>255?255:0>t?0:t};ye.animateWith=function(t,r,i,n,a,s){var o=this;if(o.removed)return s&&s.call(o),o;var l=i instanceof m?i:e.animation(i,n,a,s),h,u;b(l,o,l.percents[0],null,o.attr());for(var c=0,f=Ee.length;f>c;c++)if(Ee[c].anim==r&&Ee[c].el==t){Ee[f-1].start=Ee[c].start;break}return o},ye.onAnimation=function(e){return e?t.on(\"raphael.anim.frame.\"+this.id,e):t.unbind(\"raphael.anim.frame.\"+this.id),this},m.prototype.delay=function(t){var e=new m(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},m.prototype.repeat=function(t){var e=new m(this.anim,this.ms);return e.del=this.del,e.times=Y.floor(W(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof m)return t;!e.is(i,\"function\")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a={},s,o;for(o in t)t[T](o)&&ht(o)!=o&&ht(o)+\"%\"!=o&&(s=!0,a[o]=t[o]);if(s)return i&&(a.easing=i),n&&(a.callback=n),new m({100:a},r);if(n){var l=0;for(var h in t){var u=ut(h);t[T](h)&&u>l&&(l=u)}l+=\"%\",!t[l].callback&&(t[l].callback=n)}return new m(t,r)},ye.animate=function(t,r,i,n){var a=this;if(a.removed)return n&&n.call(a),a;var s=t instanceof m?t:e.animation(t,r,i,n);return b(s,a,s.percents[0],null,a.attr()),a},ye.setTime=function(t,e){return t&&null!=e&&this.status(t,G(e,t.ms)/t.ms),this},ye.status=function(t,e){var r=[],i=0,n,a;if(null!=e)return b(t,this,-1,G(e,1)),this;for(n=Ee.length;n>i;i++)if(a=Ee[i],a.el.id==this.id&&(!t||a.anim==t)){if(t)return a.status;r.push({anim:a.anim,status:a.status})}return t?0:r},ye.pause=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t(\"raphael.anim.pause.\"+this.id,this,Ee[r].anim)!==!1&&(Ee[r].paused=!0);return this},ye.resume=function(e){for(var r=0;r<Ee.length;r++)if(Ee[r].el.id==this.id&&(!e||Ee[r].anim==e)){var i=Ee[r];t(\"raphael.anim.resume.\"+this.id,this,i.anim)!==!1&&(delete i.paused,this.status(i.anim,i.status))}return this},ye.stop=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t(\"raphael.anim.stop.\"+this.id,this,Ee[r].anim)!==!1&&Ee.splice(r--,1);return this},t.on(\"raphael.remove\",_),t.on(\"raphael.clear\",_),ye.toString=function(){return\"Raphaël’s object\"};var ze=function(t){if(this.items=[],this.length=0,this.type=\"set\",t)for(var e=0,r=t.length;r>e;e++)!t[e]||t[e].constructor!=ye.constructor&&t[e].constructor!=ze||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},Pe=ze.prototype;Pe.push=function(){for(var t,e,r=0,i=arguments.length;i>r;r++)t=arguments[r],!t||t.constructor!=ye.constructor&&t.constructor!=ze||(e=this.items.length,this[e]=this.items[e]=t,this.length++);return this},Pe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},Pe.forEach=function(t,e){for(var r=0,i=this.items.length;i>r;r++)if(t.call(e,this.items[r],r)===!1)return this;return this};for(var Fe in ye)ye[T](Fe)&&(Pe[Fe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][z](r,e)})}}(Fe));return Pe.attr=function(t,r){if(t&&e.is(t,Q)&&e.is(t[0],\"object\"))for(var i=0,n=t.length;n>i;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;s>a;a++)this.items[a].attr(t,r);return this},Pe.clear=function(){for(;this.length;)this.pop()},Pe.splice=function(t,e,r){t=0>t?W(this.length+t,0):t,e=W(0,G(this.length-t,e));var i=[],n=[],a=[],s;for(s=2;s<arguments.length;s++)a.push(arguments[s]);for(s=0;e>s;s++)n.push(this[t+s]);for(;s<this.length-t;s++)i.push(this[t+s]);var o=a.length;for(s=0;s<o+i.length;s++)this.items[t+s]=this[t+s]=o>s?a[s]:i[s-o];for(s=this.items.length=this.length-=e-o;this[s];)delete this[s++];return new ze(n)},Pe.exclude=function(t){for(var e=0,r=this.length;r>e;e++)if(this[e]==t)return this.splice(e,1),!0},Pe.animate=function(t,r,i,n){(e.is(i,\"function\")||!i)&&(n=i||null);var a=this.items.length,s=a,o,l=this,h;if(!a)return this;n&&(h=function(){!--a&&n.call(l)}),i=e.is(i,Z)?i:h;var u=e.animation(t,r,i,h);for(o=this.items[--s].animate(u);s--;)this.items[s]&&!this.items[s].removed&&this.items[s].animateWith(o,u,u),this.items[s]&&!this.items[s].removed||a--;return this},Pe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},Pe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return t=G[z](0,t),e=G[z](0,e),r=W[z](0,r),i=W[z](0,i),{x:t,y:e,x2:r,y2:i,width:r-t,height:i-e}},Pe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;r>e;e++)t.push(this.items[e].clone());return t},Pe.toString=function(){return\"Raphaël‘s set\"},Pe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},Pe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){return i.isPointInside(t,e)?(r=!0,!1):void 0}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face[\"font-family\"];for(var i in t.face)t.face[T](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg){e.face[\"units-per-em\"]=ut(t.face[\"units-per-em\"],10);for(var n in t.glyphs)if(t.glyphs[T](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&\"M\"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[t]||\"M\"})+\"z\"},a.k)for(var s in a.k)a[T](s)&&(e.glyphs[n].k[s]=a.k[s])}}return t},N.getFont=function(t,r,i,n){if(n=n||\"normal\",i=i||\"normal\",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a=e.fonts[t];if(!a){var s=new RegExp(\"(^|\\\\s)\"+t.replace(/[^\\w\\d\\s+!~.:_-]/g,R)+\"(\\\\s|$)\",\"i\");for(var o in e.fonts)if(e.fonts[T](o)&&s.test(o)){a=e.fonts[o];break}}var l;if(a)for(var h=0,u=a.length;u>h&&(l=a[h],l.face[\"font-weight\"]!=r||l.face[\"font-style\"]!=i&&l.face[\"font-style\"]||l.face[\"font-stretch\"]!=n);h++);return l}},N.print=function(t,r,i,n,a,s,o,l){s=s||\"middle\",o=W(G(o||0,1),-1),l=W(G(l||1,3),1);var h=j(i)[q](R),u=0,c=0,f=R,p;if(e.is(n,\"string\")&&(n=this.getFont(n)),n){p=(a||16)/n.face[\"units-per-em\"];for(var d=n.face.bbox[q](k),g=+d[0],x=d[3]-d[1],v=0,y=+d[1]+(\"baseline\"==s?x+ +n.face.descent:x/2),m=0,b=h.length;b>m;m++){if(\"\\n\"==h[m])u=0,w=0,c=0,v+=x*l;else{var _=c&&n.glyphs[h[m-1]]||{},w=n.glyphs[h[m]];u+=c?(_.w||n.w)+(_.k&&_.k[h[m]]||0)+n.w*o:0,c=1}w&&w.d&&(f+=e.transformPath(w.d,[\"t\",u*p,v*p,\"s\",p,p,g,y,\"t\",(t-g)/p,(r-y)/p]))}}return this.path(f).attr({fill:\"#000\",stroke:\"none\"})},N.add=function(t){if(e.is(t,\"array\"))for(var r=this.set(),i=0,n=t.length,a;n>i;i++)a=t[i]||{},B[T](a.type)&&r.push(this[a.type]().attr(a));return r},e.format=function(t,r){var i=e.is(r,Q)?[0][P](r):arguments;return t&&e.is(t,Z)&&i.length-1&&(t=t.replace(C,function(t,e){return null==i[++e]?R:i[e]})),t||R},e.fullfill=function(){var t=/\\{([^\\}]+)\\}/g,e=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,r=function(t,r,i){var n=i;return r.replace(e,function(t,e,r,i,a){e=e||i,n&&(e in n&&(n=n[e]),\"function\"==typeof n&&a&&(n=n()))}),n=(null==n||n==i?t:n)+\"\"};return function(e,i){return String(e).replace(t,function(t,e){return r(t,e,i)})}}(),e.ninja=function(){if(E.was)A.win.Raphael=E.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=Pe,t.on(\"raphael.DOMload\",function(){w=!0}),function(t,r,i){function n(){/in/.test(t.readyState)?setTimeout(n,9):e.eve(\"raphael.DOMload\")}null==t.readyState&&t.addEventListener&&(t.addEventListener(r,i=function(){t.removeEventListener(r,i,!1),t.readyState=\"complete\"},!1),t.readyState=\"loading\"),n()}(document,\"DOMContentLoaded\"),e}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;!function(r){var a=\"0.4.2\",s=\"hasOwnProperty\",o=/[\\.\\/]/,l=\"*\",h=function(){},u=function(t,e){return t-e},c,f,p={n:{}},d=function(t,e){t=String(t);var r=p,i=f,n=Array.prototype.slice.call(arguments,2),a=d.listeners(t),s=0,o=!1,l,h=[],g={},x=[],v=c,y=[];c=t,f=0;for(var m=0,b=a.length;b>m;m++)\"zIndex\"in a[m]&&(h.push(a[m].zIndex),a[m].zIndex<0&&(g[a[m].zIndex]=a[m]));for(h.sort(u);h[s]<0;)if(l=g[h[s++]],x.push(l.apply(e,n)),f)return f=i,x;for(m=0;b>m;m++)if(l=a[m],\"zIndex\"in l)if(l.zIndex==h[s]){if(x.push(l.apply(e,n)),f)break;do if(s++,l=g[h[s]],l&&x.push(l.apply(e,n)),f)break;while(l)}else g[l.zIndex]=l;else if(x.push(l.apply(e,n)),f)break;return f=i,c=v,x.length?x:null};d._events=p,d.listeners=function(t){var e=t.split(o),r=p,i,n,a,s,h,u,c,f,d=[r],g=[];for(s=0,h=e.length;h>s;s++){for(f=[],u=0,c=d.length;c>u;u++)for(r=d[u].n,n=[r[e[s]],r[l]],a=2;a--;)i=n[a],i&&(f.push(i),g=g.concat(i.f||[]));d=f}return g},d.on=function(t,e){if(t=String(t),\"function\"!=typeof e)return function(){};for(var r=t.split(o),i=p,n=0,a=r.length;a>n;n++)i=i.n,i=i.hasOwnProperty(r[n])&&i[r[n]]||(i[r[n]]={n:{}});for(i.f=i.f||[],n=0,a=i.f.length;a>n;n++)if(i.f[n]==e)return h;return i.f.push(e),function(t){+t==+t&&(e.zIndex=+t)}},d.f=function(t){var e=[].slice.call(arguments,1);return function(){d.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},d.stop=function(){f=1},d.nt=function(t){return t?new RegExp(\"(?:\\\\.|\\\\/|^)\"+t+\"(?:\\\\.|\\\\/|$)\").test(c):c},d.nts=function(){return c.split(o)},d.off=d.unbind=function(t,e){if(!t)return void(d._events=p={n:{}});var r=t.split(o),i,n,a,h,u,c,f,g=[p];for(h=0,u=r.length;u>h;h++)for(c=0;c<g.length;c+=a.length-2){if(a=[c,1],i=g[c].n,r[h]!=l)i[r[h]]&&a.push(i[r[h]]);else for(n in i)i[s](n)&&a.push(i[n]);g.splice.apply(g,a)}for(h=0,u=g.length;u>h;h++)for(i=g[h];i.n;){if(e){if(i.f){for(c=0,f=i.f.length;f>c;c++)if(i.f[c]==e){i.f.splice(c,1);break}!i.f.length&&delete i.f}for(n in i.n)if(i.n[s](n)&&i.n[n].f){var x=i.n[n].f;for(c=0,f=x.length;f>c;c++)if(x[c]==e){x.splice(c,1);break}!x.length&&delete i.n[n].f}}else{delete i.f;for(n in i.n)i.n[s](n)&&i.n[n].f&&delete i.n[n].f}i=i.n}},d.once=function(t,e){var r=function(){return d.unbind(t,r),e.apply(this,arguments)};return d.on(t,r)},d.version=a,d.toString=function(){return\"You are running Eve \"+a},\"undefined\"!=typeof t&&t.exports?t.exports=d:(i=[],n=function(){return d}.apply(e,i),!(void 0!==n&&(t.exports=n)))}(this)},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.svg){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c=\"\",f=\" \",p=\"http://www.w3.org/1999/xlink\",d={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},g={};t.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var x=function(i,n){if(n){\"string\"==typeof i&&(i=x(i));for(var a in n)n[e](a)&&(\"xlink:\"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])))}else i=t._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",i),i.style&&(i.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return i},v=function(e,n){var h=\"linear\",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,v=d.style,y=t._g.doc.getElementById(u);if(!y){if(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h=\"radial\",e&&r){f=i(e),p=i(r);var n=2*(p>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c}),n=n.split(/\\s*\\-\\s*/),\"linear\"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){y=x(h+\"Gradient\",{id:u}),e.gradient=y,x(y,\"radial\"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(y);for(var B=0,C=k.length;C>B;B++)y.appendChild(x(\"stop\",{offset:k[B].offset?k[B].offset:B?\"100%\":\"0%\",\"stop-color\":k[B].color||\"#fff\",\"stop-opacity\":isFinite(k[B].opacity)?k[B].opacity:1}))}}return x(d,{fill:m(u),opacity:1,\"fill-opacity\":1}),v.fill=c,v.opacity=1,v.fillOpacity=1,1},y=function(){var t=document.documentMode;return t&&(9===t||10===t)},m=function(t){if(y())return\"url('#\"+t+\"')\";var e=document.location,r=e.protocol+\"//\"+e.host+e.pathname+e.search;return\"url('\"+r+\"#\"+t+\"')\"},b=function(t){var e=t.getBBox(1);x(t.pattern,{patternTransform:t.matrix.invert()+\" translate(\"+e.x+\",\"+e.y+\")\"})},_=function(i,n,a){if(\"path\"==i.type){for(var s=r(n).toLowerCase().split(\"-\"),o=i.paper,l=a?\"end\":\"start\",h=i.node,u=i.attrs,f=u[\"stroke-width\"],p=s.length,v=\"classic\",y,m,b,_,w,k=3,B=3,C=5;p--;)switch(s[p]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":v=s[p];break;case\"wide\":B=5;break;case\"narrow\":B=2;break;case\"long\":k=5;break;case\"short\":k=2}if(\"open\"==v?(k+=2,B+=2,C+=2,b=1,_=a?4:1,w={fill:\"none\",stroke:u.stroke}):(_=b=k/2,w={fill:u.stroke,stroke:\"none\"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},\"none\"!=v){var S=\"raphael-marker-\"+v,T=\"raphael-marker-\"+l+v+k+B+\"-obj\"+i.id;t._g.doc.getElementById(S)?g[S]++:(o.defs.appendChild(x(x(\"path\"),{\"stroke-linecap\":\"round\",d:d[v],id:S})),g[S]=1);var A=t._g.doc.getElementById(T),E;A?(g[T]++,E=A.getElementsByTagName(\"use\")[0]):(A=x(x(\"marker\"),{id:T,markerHeight:B,markerWidth:k,orient:\"auto\",refX:_,refY:B/2}),E=x(x(\"use\"),{\"xlink:href\":\"#\"+S,transform:(a?\"rotate(180 \"+k/2+\" \"+B/2+\") \":c)+\"scale(\"+k/C+\",\"+B/C+\")\",\"stroke-width\":(1/((k/C+B/C)/2)).toFixed(4)}),A.appendChild(E),o.defs.appendChild(A),g[T]=1),x(E,w);var M=b*(\"diamond\"!=v&&\"oval\"!=v);a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-M*f):(y=M*f,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),w={},w[\"marker-\"+l]=\"url(#\"+T+\")\",(m||y)&&(w.d=t.getSubpath(u.path,y,m)),x(h,w),i._.arrows[l+\"Path\"]=S,i._.arrows[l+\"Marker\"]=T,i._.arrows[l+\"dx\"]=M,i._.arrows[l+\"Type\"]=v,i._.arrows[l+\"String\"]=n}else a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-y):(y=0,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),i._.arrows[l+\"Path\"]&&x(h,{d:t.getSubpath(u.path,y,m)}),delete i._.arrows[l+\"Path\"],delete i._.arrows[l+\"Marker\"],delete i._.arrows[l+\"dx\"],delete i._.arrows[l+\"Type\"],delete i._.arrows[l+\"String\"];for(w in g)if(g[e](w)&&!g[w]){var N=t._g.doc.getElementById(w);N&&N.parentNode.removeChild(N)}}},w={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},k=function(t,e,i){if(e=w[r(e).toLowerCase()]){for(var n=t.attrs[\"stroke-width\"]||\"1\",a={round:n,square:n,butt:0}[t.attrs[\"stroke-linecap\"]||i[\"stroke-linecap\"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;x(t.node,{\"stroke-dasharray\":s.join(\",\")})}else x(t.node,{\"stroke-dasharray\":\"none\"})},B=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;l.style.visibility=\"hidden\";for(var d in a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case\"blur\":i.blur(g);break;case\"title\":var y=l.getElementsByTagName(\"title\");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=x(\"title\");var m=t._g.doc.createTextNode(g);y.appendChild(m),l.appendChild(y)}break;case\"href\":case\"target\":var w=l.parentNode;if(\"a\"!=w.tagName.toLowerCase()){var B=x(\"a\");w.insertBefore(B,l),B.appendChild(l),w=B}\"target\"==d?w.setAttributeNS(p,\"show\",\"blank\"==g?\"new\":g):w.setAttributeNS(p,d,g);break;case\"cursor\":l.style.cursor=g;break;case\"transform\":i.transform(g);break;case\"arrow-start\":_(i,g);break;case\"arrow-end\":_(i,g,1);break;case\"clip-rect\":var C=r(g).split(h);if(4==C.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var T=x(\"clipPath\"),A=x(\"rect\");T.id=t.createUUID(),x(A,{x:C[0],y:C[1],width:C[2],height:C[3]}),T.appendChild(A),i.paper.defs.appendChild(T),x(l,{\"clip-path\":\"url(#\"+T.id+\")\"}),i.clip=A}if(!g){var E=l.getAttribute(\"clip-path\");if(E){var M=t._g.doc.getElementById(E.replace(/(^url\\(#|\\)$)/g,c));M&&M.parentNode.removeChild(M),x(l,{\"clip-path\":c}),delete i.clip}}break;case\"path\":\"path\"==i.type&&(x(l,{d:g?u.path=t._pathToAbsolute(g):\"M0,0\"}),i._.dirty=1,i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1)));break;case\"width\":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d=\"x\",g=u.x;case\"x\":u.fx&&(g=-u.x-(u.width||0));case\"rx\":if(\"rx\"==d&&\"rect\"==i.type)break;case\"cx\":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case\"height\":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d=\"y\",g=u.y;case\"y\":u.fy&&(g=-u.y-(u.height||0));case\"ry\":if(\"ry\"==d&&\"rect\"==i.type)break;case\"cy\":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case\"r\":\"rect\"==i.type?x(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case\"src\":\"image\"==i.type&&l.setAttributeNS(p,\"href\",g);break;case\"stroke-width\":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u[\"stroke-dasharray\"]&&k(i,u[\"stroke-dasharray\"],a),i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1));break;case\"stroke-dasharray\":k(i,g,a);break;case\"fill\":var N=r(g).match(t._ISURL);if(N){T=x(\"pattern\");var L=x(\"image\");T.id=t.createUUID(),x(T,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),x(L,{x:0,y:0,\"xlink:href\":N[1]}),T.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;x(e,{width:t,height:r}),x(L,{width:t,height:r})})}(T),i.paper.defs.appendChild(T),x(l,{fill:\"url(#\"+T.id+\")\"}),i.pattern=T,i.pattern&&b(i);break}var z=t.getRGB(g);if(z.error){if((\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g)){\nif(\"opacity\"in u||\"fill-opacity\"in u){var P=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c));if(P){var F=P.getElementsByTagName(\"stop\");x(F[F.length-1],{\"stop-opacity\":(\"opacity\"in u?u.opacity:1)*(\"fill-opacity\"in u?u[\"fill-opacity\"]:1)})}}u.gradient=g,u.fill=\"none\";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,\"undefined\")&&t.is(a.opacity,\"undefined\")&&x(l,{opacity:u.opacity}),!t.is(u[\"fill-opacity\"],\"undefined\")&&t.is(a[\"fill-opacity\"],\"undefined\")&&x(l,{\"fill-opacity\":u[\"fill-opacity\"]});z[e](\"opacity\")&&x(l,{\"fill-opacity\":z.opacity>1?z.opacity/100:z.opacity});case\"stroke\":z=t.getRGB(g),l.setAttribute(d,z.hex),\"stroke\"==d&&z[e](\"opacity\")&&x(l,{\"stroke-opacity\":z.opacity>1?z.opacity/100:z.opacity}),\"stroke\"==d&&i._.arrows&&(\"startString\"in i._.arrows&&_(i,i._.arrows.startString),\"endString\"in i._.arrows&&_(i,i._.arrows.endString,1));break;case\"gradient\":(\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g);break;case\"opacity\":u.gradient&&!u[e](\"stroke-opacity\")&&x(l,{\"stroke-opacity\":g>1?g/100:g});case\"fill-opacity\":if(u.gradient){P=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c)),P&&(F=P.getElementsByTagName(\"stop\"),x(F[F.length-1],{\"stop-opacity\":g}));break}default:\"font-size\"==d&&(g=n(g,10)+\"px\");var R=d.replace(/(\\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}S(i,a),l.style.visibility=f},C=1.2,S=function(i,a){if(\"text\"==i.type&&(a[e](\"text\")||a[e](\"font\")||a[e](\"font-size\")||a[e](\"x\")||a[e](\"y\"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue(\"font-size\"),10):10;if(a[e](\"text\")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h=r(a.text).split(\"\\n\"),u=[],f,p=0,d=h.length;d>p;p++)f=x(\"tspan\"),p&&x(f,{dy:l*C,x:s.x}),f.appendChild(t._g.doc.createTextNode(h[p])),o.appendChild(f),u[p]=f}else for(u=o.getElementsByTagName(\"tspan\"),p=0,d=u.length;d>p;p++)p?x(u[p],{dy:l*C,x:s.x}):x(u[0],{dy:0});x(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),v=s.y-(g.y+g.height/2);v&&t.is(v,\"finite\")&&x(u[0],{dy:v})}},T=function(t){return t.parentNode&&\"a\"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},A=function(e,r){function i(){return(\"0000\"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5)}var n=0,a=0;this[0]=this.node=e,e.raphael=!0,this.id=i(),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},E=t.el;A.prototype=E,E.constructor=A,t._engine.path=function(t,e){var r=x(\"path\");e.canvas&&e.canvas.appendChild(r);var i=new A(r,e);return i.type=\"path\",B(i,{fill:\"none\",stroke:\"#000\",path:t}),i},E.rotate=function(t,e,n){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([[\"r\",t,e,n]])),this},E.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this},E.translate=function(t,e){return this.removed?this:(t=r(t).split(h),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([[\"t\",t,e]])),this)},E.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&x(this.clip,{transform:this.matrix.invert()}),this.pattern&&b(this),this.node&&x(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":n})}return this},E.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},E.show=function(){return this.removed||(this.node.style.display=\"\"),this},E.remove=function(){var e=T(this.node);if(!this.removed&&e.parentNode){var r=this.paper;r.__set__&&r.__set__.exclude(this),u.unbind(\"raphael.*.*.\"+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData();for(var i in this)this[i]=\"function\"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},E._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var t=!0}var e=!1,r;this.paper.canvas.parentElement?r=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(r=this.paper.canvas.parentNode.style),r&&\"none\"==r.display&&(e=!0,r.display=\"\");var i={};try{i=this.node.getBBox()}catch(n){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},e&&(r.display=\"none\")}return t&&this.hide(),i},E.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;c>l;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;c>l;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,\"object\")&&(f=r);for(var p in f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));this.attrs[p]=f[p];for(var g in d)d[e](g)&&(f[g]=d[g])}return B(this,f),this},E.toFront=function(){if(this.removed)return this;var e=T(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},E.toBack=function(){if(this.removed)return this;var e=T(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);var i=this.paper;return this},E.insertAfter=function(e){if(this.removed||!e)return this;var r=T(this.node),i=T(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},E.insertBefore=function(e){if(this.removed||!e)return this;var r=T(this.node),i=T(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},E.blur=function(e){var r=this;if(0!==+e){var i=x(\"filter\"),n=x(\"feGaussianBlur\");r.attrs.blur=e,i.id=t.createUUID(),x(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,x(r.node,{filter:\"url(#\"+i.id+\")\"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute(\"filter\");return r},t._engine.circle=function(t,e,r,i){var n=x(\"circle\");t.canvas&&t.canvas.appendChild(n);var a=new A(n,t);return a.attrs={cx:e,cy:r,r:i,fill:\"none\",stroke:\"#000\"},a.type=\"circle\",x(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=x(\"rect\");t.canvas&&t.canvas.appendChild(s);var o=new A(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:\"none\",stroke:\"#000\"},o.type=\"rect\",x(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=x(\"ellipse\");t.canvas&&t.canvas.appendChild(a);var s=new A(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:\"none\",stroke:\"#000\"},s.type=\"ellipse\",x(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=x(\"image\");x(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:\"none\"}),s.setAttributeNS(p,\"href\",e),t.canvas&&t.canvas.appendChild(s);var o=new A(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type=\"image\",o},t._engine.text=function(e,r,i,n){var a=x(\"text\");e.canvas&&e.canvas.appendChild(a);var s=new A(a,e);return s.attrs={x:r,y:i,\"text-anchor\":\"middle\",text:n,\"font-family\":t._availableAttrs[\"font-family\"],\"font-size\":t._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},s.type=\"text\",B(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container,i=e.x,n=e.y,a=e.width,s=e.height;if(!r)throw new Error(\"SVG container not found.\");var o=x(\"svg\"),l=\"overflow:hidden;\",h;return i=i||0,n=n||0,a=a||512,s=s||342,x(o,{height:s,version:1.1,width:a,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==r?(o.style.cssText=l+\"position:absolute;left:\"+i+\"px;top:\"+n+\"px\",t._g.doc.body.appendChild(o),h=1):(o.style.cssText=l+\"position:relative\",r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o)),r=new t._Paper,r.width=a,r.height=s,r.canvas=o,r.clear(),r._left=r._top=0,h&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u(\"raphael.setViewBox\",this,this._viewBox,[t,e,r,i,n]);var a=this.getSize(),o=s(r/a.width,i/a.height),l=this.top,h=n?\"xMidYMid meet\":\"xMinYMin\",c,p;for(null==t?(this._vbSize&&(o=1),delete this._vbSize,c=\"0 0 \"+this.width+f+this.height):(this._vbSize=o,c=t+f+e+f+r+f+i),x(this.canvas,{viewBox:c,preserveAspectRatio:h});o&&l;)p=\"stroke-width\"in l.attrs?l.attrs[\"stroke-width\"]:1,l.attr({\"stroke-width\":p}),l._.dirty=1,l._.dirtyT=1,l=l.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t=this.canvas,e=t.style,r;try{r=t.getScreenCTM()||t.createSVGMatrix()}catch(i){r=t.createSVGMatrix()}var n=-r.e%1,a=-r.f%1;(n||a)&&(n&&(this._left=(this._left+n)%1,e.left=this._left+\"px\"),a&&(this._top=(this._top+a)%1,e.top=this._top+\"px\"))},t.prototype.clear=function(){t.eve(\"raphael.clear\",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=x(\"desc\")).appendChild(t._g.doc.createTextNode(\"Created with Raphaël \"+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=x(\"defs\"))},t.prototype.remove=function(){u(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null};var M=t.st;for(var N in E)E[e](N)&&!M[e](N)&&(M[N]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(N))}}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.vml){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h=\"fill\",u=/[, ]+/,c=t.eve,f=\" progid:DXImageTransform.Microsoft\",p=\" \",d=\"\",g={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},x=/([clmz]),?([^clmz]*)/gi,v=/ progid:\\S+Blur\\([^\\)]+\\)/g,y=/-?[^,\\s-]+/g,m=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",b=21600,_={path:1,rect:1,image:1},w={circle:1,ellipse:1},k=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(x,function(t,e,r){var i=[],n=\"m\"==e.toLowerCase(),s=g[e];return r.replace(y,function(t){n&&2==i.length&&(s+=i+g[\"m\"==e?\"l\":\"L\"],i=[]),i.push(a(t*b))}),s+i});return s}var o=n(e),l,h;s=[];for(var u=0,c=o.length;c>u;u++){l=o[u],h=o[u][0].toLowerCase(),\"z\"==h&&(h=\"x\");for(var f=1,v=l.length;v>f;f++)h+=a(l[f]*b)+(f!=v-1?\",\":d);s.push(h)}return s.join(p)},B=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},C=function(t,e,r,i,n,a){var s=t._,o=t.matrix,u=s.fillpos,c=t.node,f=c.style,d=1,g=\"\",x,v=b/e,y=b/r;if(f.visibility=\"hidden\",e&&r){if(c.coordsize=l(v)+p+l(y),f.rotation=a*(0>e*r?-1:1),a){var m=B(a,i,n);i=m.dx,n=m.dy}if(0>e&&(g+=\"x\"),0>r&&(g+=\" y\")&&(d=-1),f.flip=g,c.coordorigin=i*-v+p+n*-y,u||s.fillsize){var _=c.getElementsByTagName(h);_=_&&_[0],c.removeChild(_),u&&(m=B(a,o.x(u[0],u[1]),o.y(u[0],u[1])),_.position=m.dx*d+p+m.dy*d),s.fillsize&&(_.size=s.fillsize[0]*l(e)+p+s.fillsize[1]*l(r)),c.appendChild(_)}f.visibility=\"visible\"}};t.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var S=function(t,e,i){for(var n=r(e).toLowerCase().split(\"-\"),a=i?\"end\":\"start\",s=n.length,o=\"classic\",l=\"medium\",h=\"medium\";s--;)switch(n[s]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":o=n[s];break;case\"wide\":case\"narrow\":h=n[s];break;case\"long\":case\"short\":l=n[s]}var u=t.node.getElementsByTagName(\"stroke\")[0];u[a+\"arrow\"]=o,u[a+\"arrowlength\"]=l,u[a+\"arrowwidth\"]=h},T=function(n,l){n.attrs=n.attrs||{};var c=n.node,f=n.attrs,g=c.style,x,v=_[n.type]&&(l.x!=f.x||l.y!=f.y||l.width!=f.width||l.height!=f.height||l.cx!=f.cx||l.cy!=f.cy||l.rx!=f.rx||l.ry!=f.ry||l.r!=f.r),y=w[n.type]&&(f.cx!=l.cx||f.cy!=l.cy||f.r!=l.r||f.rx!=l.rx||f.ry!=l.ry),m=n;for(var B in l)l[e](B)&&(f[B]=l[B]);if(v&&(f.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(c.href=l.href),l.title&&(c.title=l.title),l.target&&(c.target=l.target),l.cursor&&(g.cursor=l.cursor),\"blur\"in l&&n.blur(l.blur),(l.path&&\"path\"==n.type||v)&&(c.path=k(~r(f.path).toLowerCase().indexOf(\"r\")?t._pathToAbsolute(f.path):f.path),n._.dirty=1,\"image\"==n.type&&(n._.fillpos=[f.x,f.y],n._.fillsize=[f.width,f.height],C(n,1,1,0,0,0))),\"transform\"in l&&n.transform(l.transform),y){var T=+f.cx,E=+f.cy,M=+f.rx||+f.r||0,L=+f.ry||+f.r||0;c.path=t.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",a((T-M)*b),a((E-L)*b),a((T+M)*b),a((E+L)*b),a(T*b)),n._.dirty=1}if(\"clip-rect\"in l){var z=r(l[\"clip-rect\"]).split(u);if(4==z.length){z[2]=+z[2]+ +z[0],z[3]=+z[3]+ +z[1];var P=c.clipRect||t._g.doc.createElement(\"div\"),F=P.style;F.clip=t.format(\"rect({1}px {2}px {3}px {0}px)\",z),c.clipRect||(F.position=\"absolute\",F.top=0,F.left=0,F.width=n.paper.width+\"px\",F.height=n.paper.height+\"px\",c.parentNode.insertBefore(P,c),P.appendChild(c),c.clipRect=P)}l[\"clip-rect\"]||c.clipRect&&(c.clipRect.style.clip=\"auto\")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l[\"font-family\"]&&(R.fontFamily='\"'+l[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,d)+'\"'),l[\"font-size\"]&&(R.fontSize=l[\"font-size\"]),l[\"font-weight\"]&&(R.fontWeight=l[\"font-weight\"]),l[\"font-style\"]&&(R.fontStyle=l[\"font-style\"])}if(\"arrow-start\"in l&&S(m,l[\"arrow-start\"]),\"arrow-end\"in l&&S(m,l[\"arrow-end\"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||null!=l[\"fill-opacity\"]||null!=l[\"stroke-dasharray\"]||null!=l[\"stroke-miterlimit\"]||null!=l[\"stroke-linejoin\"]||null!=l[\"stroke-linecap\"]){var I=c.getElementsByTagName(h),j=!1;if(I=I&&I[0],!I&&(j=I=N(h)),\"image\"==n.type&&l.src&&(I.src=l.src),l.fill&&(I.on=!0),null!=I.on&&\"none\"!=l.fill&&null!==l.fill||(I.on=!1),I.on&&l.fill){var q=r(l.fill).match(t._ISURL);if(q){I.parentNode==c&&c.removeChild(I),I.rotate=!0,I.src=q[1],I.type=\"tile\";var D=n.getBBox(1);I.position=D.x+p+D.y,n._.fillpos=[D.x,D.y],t._preload(q[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else I.color=t.getRGB(l.fill).hex,I.src=d,I.type=\"solid\",t.getRGB(l.fill).error&&(m.type in{circle:1,ellipse:1}||\"r\"!=r(l.fill).charAt())&&A(m,l.fill,I)&&(f.fill=\"none\",f.gradient=l.fill,I.rotate=!1)}if(\"fill-opacity\"in l||\"opacity\"in l){var V=((+f[\"fill-opacity\"]+1||2)-1)*((+f.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);V=o(s(V,0),1),I.opacity=V,I.src&&(I.color=\"none\")}c.appendChild(I);var O=c.getElementsByTagName(\"stroke\")&&c.getElementsByTagName(\"stroke\")[0],Y=!1;!O&&(Y=O=N(\"stroke\")),(l.stroke&&\"none\"!=l.stroke||l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||l[\"stroke-dasharray\"]||l[\"stroke-miterlimit\"]||l[\"stroke-linejoin\"]||l[\"stroke-linecap\"])&&(O.on=!0),(\"none\"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l[\"stroke-width\"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),V=((+f[\"stroke-opacity\"]+1||2)-1)*((+f.opacity+1||2)-1)*((+W.o+1||2)-1);var G=.75*(i(l[\"stroke-width\"])||1);if(V=o(s(V,0),1),null==l[\"stroke-width\"]&&(G=f[\"stroke-width\"]),l[\"stroke-width\"]&&(O.weight=G),G&&1>G&&(V*=G)&&(O.weight=1),O.opacity=V,l[\"stroke-linejoin\"]&&(O.joinstyle=l[\"stroke-linejoin\"]||\"miter\"),O.miterlimit=l[\"stroke-miterlimit\"]||8,l[\"stroke-linecap\"]&&(O.endcap=\"butt\"==l[\"stroke-linecap\"]?\"flat\":\"square\"==l[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in l){var H={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};O.dashstyle=H[e](l[\"stroke-dasharray\"])?H[l[\"stroke-dasharray\"]]:d}Y&&c.appendChild(O)}if(\"text\"==m.type){m.paper.canvas.style.display=d;var X=m.paper.span,U=100,$=f.font&&f.font.match(/\\d+(?:\\.\\d*)?(?=px)/);g=X.style,f.font&&(g.font=f.font),f[\"font-family\"]&&(g.fontFamily=f[\"font-family\"]),f[\"font-weight\"]&&(g.fontWeight=f[\"font-weight\"]),f[\"font-style\"]&&(g.fontStyle=f[\"font-style\"]),$=i(f[\"font-size\"]||$&&$[0])||10,g.fontSize=$*U+\"px\",m.textpath.string&&(X.innerHTML=r(m.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var Z=X.getBoundingClientRect();m.W=f.w=(Z.right-Z.left)/U,m.H=f.h=(Z.bottom-Z.top)/U,m.X=f.x,m.Y=f.y+m.H/2,(\"x\"in l||\"y\"in l)&&(m.path.v=t.format(\"m{0},{1}l{2},{1}\",a(f.x*b),a(f.y*b),a(f.x*b)+1));for(var Q=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],J=0,K=Q.length;K>J;J++)if(Q[J]in l){m._.dirty=1;break}switch(f[\"text-anchor\"]){case\"start\":m.textpath.style[\"v-text-align\"]=\"left\",m.bbx=m.W/2;break;case\"end\":m.textpath.style[\"v-text-align\"]=\"right\",m.bbx=-m.W/2;break;default:m.textpath.style[\"v-text-align\"]=\"center\",m.bbx=0}m.textpath.style[\"v-text-kern\"]=!0}},A=function(e,a,s){e.attrs=e.attrs||{};var o=e.attrs,l=Math.pow,h,u,c=\"linear\",f=\".5 .5\";if(e.attrs.gradient=a,a=r(a).replace(t._radial_gradient,function(t,e,r){return c=\"radial\",e&&r&&(e=i(e),r=i(r),l(e-.5,2)+l(r-.5,2)>.25&&(r=n.sqrt(.25-l(e-.5,2))*(2*(r>.5)-1)+.5),f=e+p+r),d}),a=a.split(/\\s*\\-\\s*/),\"linear\"==c){var g=a.shift();if(g=-i(g),isNaN(g))return null}var x=t._parseDots(a);if(!x)return null;if(e=e.shape||e.node,x.length){e.removeChild(s),s.on=!0,s.method=\"none\",s.color=x[0].color,s.color2=x[x.length-1].color;for(var v=[],y=0,m=x.length;m>y;y++)x[y].offset&&v.push(x[y].offset+p+x[y].color);s.colors=v.length?v.join():\"0% \"+s.color,\"radial\"==c?(s.type=\"gradientTitle\",s.focus=\"100%\",s.focussize=\"0 0\",s.focusposition=f,s.angle=0):(s.type=\"gradient\",s.angle=(270-g)%360),e.appendChild(s)}return 1},E=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},M=t.el;E.prototype=M,M.constructor=E,M.transform=function(e){if(null==e)return this._.transform;var i=this.paper._viewBoxShift,n=i?\"s\"+[i.scale,i.scale]+\"-1-1t\"+[i.dx,i.dy]:d,a;i&&(a=e=r(e).replace(/\\.{3}|\\u2026/g,this._.transform||d)),t._extractTransform(this,n+e);var s=this.matrix.clone(),o=this.skew,l=this.node,h,u=~r(this.attrs.fill).indexOf(\"-\"),c=!r(this.attrs.fill).indexOf(\"url(\");if(s.translate(1,1),c||u||\"image\"==this.type)if(o.matrix=\"1 0 0 1\",o.offset=\"0 0\",h=s.split(),u&&h.noRotation||!h.isSimple){l.style.filter=s.toFilter();var f=this.getBBox(),g=this.getBBox(1),x=f.x-g.x,v=f.y-g.y;l.coordorigin=x*-b+p+v*-b,C(this,1,1,x,v,0)}else l.style.filter=d,C(this,h.scalex,h.scaley,h.dx,h.dy,h.rotate);else l.style.filter=d,o.matrix=r(s),o.offset=s.offset();return null!==a&&(this._.transform=a,t._extractTransform(this,a)),this},M.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",t,e,n]])),this}},M.translate=function(t,e){return this.removed?this:(t=r(t).split(u),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([[\"t\",t,e]])),this)},M.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this._.dirtyT=1,this},M.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},M.show=function(){return!this.removed&&(this.node.style.display=d),this},M.auxGetBBox=t.el.getBBox,M.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},M._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},M.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind(\"raphael.*.*.\"+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},M.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(r==h&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(u),o={},l=0,f=s.length;f>l;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return f-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,\"array\")){for(o={},l=0,f=r.length;f>l;l++)o[r[l]]=this.attr(r[l]);return o}var p;null!=i&&(p={},p[r]=i),null==i&&t.is(r,\"object\")&&(p=r);for(var d in p)c(\"raphael.attr.\"+d+\".\"+this.id,this,p[d]);if(p){for(d in this.paper.customAttributes)if(this.paper.customAttributes[e](d)&&p[e](d)&&t.is(this.paper.customAttributes[d],\"function\")){var g=this.paper.customAttributes[d].apply(this,[].concat(p[d]));this.attrs[d]=p[d];for(var x in g)g[e](x)&&(p[x]=g[x])}p.text&&\"text\"==this.type&&(this.textpath.string=p.text),T(this,p)}return this},M.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},M.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},M.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},M.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},M.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(v,d),0!==+e?(this.attrs.blur=e,r.filter=i+p+f+\".Blur(pixelradius=\"+(+e||1.5)+\")\",r.margin=t.format(\"-{0}px 0 0 -{0}px\",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=N(\"shape\");r.style.cssText=m,r.coordsize=b+p+b,r.coordorigin=e.coordorigin;var i=new E(r,e),n={fill:\"none\",stroke:\"#000\"};t&&(n.path=t),i.type=\"path\",i.path=[],i.Path=d,T(i,n),e.canvas&&e.canvas.appendChild(r);var a=N(\"skew\");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(d),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type=\"rect\",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path(),s=a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type=\"ellipse\",T(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path(),a=n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type=\"circle\",T(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:\"none\"}),u=l.attrs,c=l.node,f=c.getElementsByTagName(h)[0];return u.src=r,l.X=u.x=i,l.Y=u.y=n,l.W=u.width=a,l.H=u.height=s,u.path=o,l.type=\"image\",f.parentNode==c&&c.removeChild(f),f.rotate=!0,f.src=r,f.type=\"tile\",l._.fillpos=[i,n],l._.fillsize=[a,s],c.appendChild(f),C(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=N(\"shape\"),l=N(\"path\"),h=N(\"textpath\");i=i||0,n=n||0,s=s||\"\",l.v=t.format(\"m{0},{1}l{2},{1}\",a(i*b),a(n*b),a(i*b)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=m,o.coordsize=b+p+b,o.coordorigin=\"0 0\";var u=new E(o,e),c={fill:\"#000\",stroke:\"none\",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type=\"text\",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,T(u,c),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var f=N(\"skew\");return f.on=!0,o.appendChild(f),u.skew=f,u.transform(d),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+=\"px\"),r==+r&&(r+=\"px\"),i.width=e,i.height=r,i.clip=\"rect(0 \"+e+\" \"+r+\" 0)\",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve(\"raphael.setViewBox\",this,this._viewBox,[e,r,i,n,a]);var s=this.getSize(),o=s.width,l=s.height,h,u;return a&&(h=l/n,u=o/i,o>i*h&&(e-=(o-i*h)/2/h),l>n*u&&(r-=(l-n*u)/2/u)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:s},this.forEach(function(t){t.transform(\"...\")}),this};var N;t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):e.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!e.namespaces.rvml&&e.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),N=function(t){return e.createElement(\"<rvml:\"+t+' class=\"rvml\">')}}catch(r){N=function(t){return e.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n,a=e.width,s=e.x,o=e.y;if(!r)throw new Error(\"VML container not found.\");var l=new t._Paper,h=l.canvas=t._g.doc.createElement(\"div\"),u=h.style;return s=s||0,o=o||0,a=a||512,i=i||342,l.width=a,l.height=i,a==+a&&(a+=\"px\"),i==+i&&(i+=\"px\"),l.coordsize=1e3*b+p+1e3*b,l.coordorigin=\"0 0\",l.span=t._g.doc.createElement(\"span\"),l.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",h.appendChild(l.span),u.cssText=t.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",a,i),1==r?(t._g.doc.body.appendChild(h),u.left=s+\"px\",u.top=o+\"px\",u.position=\"absolute\"):r.firstChild?r.insertBefore(h,r.firstChild):r.appendChild(h),l.renderfix=function(){},l},t.prototype.clear=function(){t.eve(\"raphael.clear\",this),this.canvas.innerHTML=d,this.span=t._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){t.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;return!0};var L=t.st;for(var z in M)M[e](z)&&!L[e](z)&&(L[z]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(z))}}.apply(e,i),!(void 0!==n&&(t.exports=n))}])});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raphael/raphael.min.js\n ** module id = 8\n ** module chunks = 1 4\n **/","var FlowChart = require('./flowchart.chart');\nvar Start = require('./flowchart.symbol.start');\nvar End = require('./flowchart.symbol.end');\nvar Operation = require('./flowchart.symbol.operation');\nvar InputOutput = require('./flowchart.symbol.inputoutput');\nvar Subroutine = require('./flowchart.symbol.subroutine');\nvar Condition = require('./flowchart.symbol.condition');\n\nfunction parse(input) {\n  input = input || '';\n  input = input.trim();\n\n  var chart = {\n    symbols: {},\n    start: null,\n    drawSVG: function(container, options) {\n      var self = this;\n\n      if (this.diagram) {\n        this.diagram.clean();\n      }\n\n      var diagram = new FlowChart(container, options);\n      this.diagram = diagram;\n      var dispSymbols = {};\n\n      function getDisplaySymbol(s) {\n        if (dispSymbols[s.key]) {\n          return dispSymbols[s.key];\n        }\n\n        switch (s.symbolType) {\n          case 'start':\n            dispSymbols[s.key] = new Start(diagram, s);\n            break;\n          case 'end':\n            dispSymbols[s.key] = new End(diagram, s);\n            break;\n          case 'operation':\n            dispSymbols[s.key] = new Operation(diagram, s);\n            break;\n          case 'inputoutput':\n            dispSymbols[s.key] = new InputOutput(diagram, s);\n            break;\n          case 'subroutine':\n            dispSymbols[s.key] = new Subroutine(diagram, s);\n            break;\n          case 'condition':\n            dispSymbols[s.key] = new Condition(diagram, s);\n            break;\n          default:\n            return new Error('Wrong symbol type!');\n        }\n\n        return dispSymbols[s.key];\n      }\n\n      (function constructChart(s, prevDisp, prev) {\n        var dispSymb = getDisplaySymbol(s);\n\n        if (self.start === s) {\n          diagram.startWith(dispSymb);\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\n          if (prevDisp instanceof(Condition)) {\n            if (prev.yes === s) {\n              prevDisp.yes(dispSymb);\n            }\n            if (prev.no === s) {\n              prevDisp.no(dispSymb);\n            }\n          } else {\n            prevDisp.then(dispSymb);\n          }\n        }\n\n        if (dispSymb.pathOk) {\n          return dispSymb;\n        }\n\n        if (dispSymb instanceof(Condition)) {\n          if (s.yes) {\n            constructChart(s.yes, dispSymb, s);\n          }\n          if (s.no) {\n            constructChart(s.no, dispSymb, s);\n          }\n        } else if (s.next) {\n          constructChart(s.next, dispSymb, s);\n        }\n\n        return dispSymb;\n      })(this.start);\n\n      diagram.render();\n    },\n    clean: function() {\n      this.diagram.clean();\n    }\n  };\n\n  var lines = [];\n  var prevBreak = 0;\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n      var line0 = input.substring(prevBreak, i0);\n      prevBreak = i0 + 1;\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n    }\n  }\n\n  if(prevBreak < input.length) {\n    lines.push(input.substr(prevBreak));\n  }\n\n  for (var l = 1, len = lines.length; l < len;) {\n    var currentLine = lines[l];\n\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0) {\n      lines[l - 1] += '\\n' + currentLine;\n      lines.splice(l, 1);\n      len--;\n    } else {\n      l++;\n    }\n  }\n\n  function getSymbol(s) {\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return chart.symbols[s.substring(0, startIndex - 1)];\n    }\n    return chart.symbols[s];\n  }\n\n  function getNextPath(s) {\n    var next = 'next';\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      next = flowSymb.substring(startIndex, endIndex);\n      if (next.indexOf(',') < 0) {\n        if (next !== 'yes' && next !== 'no') {\n          next = 'next, ' + next;\n        }\n      }\n    }\n    return next;\n  }\n\n  while (lines.length > 0) {\n    var line = lines.splice(0, 1)[0];\n\n    if (line.indexOf('=>') >= 0) {\n      // definition\n      var parts = line.split('=>');\n      var symbol = {\n        key: parts[0],\n        symbolType: parts[1],\n        text: null,\n        link: null,\n        target: null,\n        flowstate: null\n      };\n\n      var sub;\n\n      if (symbol.symbolType.indexOf(': ') >= 0) {\n        sub = symbol.symbolType.split(': ');\n        symbol.symbolType = sub.shift();\n        symbol.text = sub.join(': ');\n      }\n\n      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n        sub = symbol.text.split(':>');\n        symbol.text = sub.shift();\n        symbol.link = sub.join(':>');\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n        sub = symbol.symbolType.split(':>');\n        symbol.symbolType = sub.shift();\n        symbol.link = sub.join(':>');\n      }\n\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n      }\n\n      /* adding support for links */\n      if (symbol.link) {\n        var startIndex = symbol.link.indexOf('[') + 1;\n        var endIndex = symbol.link.indexOf(']');\n        if (startIndex >= 0 && endIndex >= 0) {\n          symbol.target = symbol.link.substring(startIndex, endIndex);\n          symbol.link = symbol.link.substring(0, startIndex - 1);\n        }\n      }\n      /* end of link support */\n\n      /* adding support for flowstates */\n      if (symbol.text) {\n        if (symbol.text.indexOf('|') >= 0) {\n          var txtAndState = symbol.text.split('|');\n          symbol.flowstate = txtAndState.pop().trim();\n          symbol.text = txtAndState.join('|');\n        }\n      }\n      /* end of flowstate support */\n\n      chart.symbols[symbol.key] = symbol;\n\n    } else if (line.indexOf('->') >= 0) {\n      // flow\n      var flowSymbols = line.split('->');\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n        var flowSymb = flowSymbols[i];\n\n        var realSymb = getSymbol(flowSymb);\n        var next = getNextPath(flowSymb);\n\n        var direction = null;\n        if (next.indexOf(',') >= 0) {\n          var condOpt = next.split(',');\n          next = condOpt[0];\n          direction = condOpt[1].trim();\n        }\n\n        if (!chart.start) {\n          chart.start = realSymb;\n        }\n\n        if (i + 1 < lenS) {\n          var nextSymb = flowSymbols[i + 1];\n          realSymb[next] = getSymbol(nextSymb);\n          realSymb['direction_' + next] = direction;\n          direction = null;\n        }\n      }\n    }\n\n  }\n  return chart;\n}\n\nmodule.exports = parse;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.parse.js\n ** module id = 176\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Condition(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n  this.yes_direction = 'bottom';\n  this.no_direction = 'right';\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n    if (options.direction_yes === 'right') {\n      this.no_direction = 'bottom';\n      this.yes_direction = 'right';\n    } else {\n      this.no_direction = 'right';\n      this.yes_direction = 'bottom';\n    }\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n    if (options.direction_no === 'right') {\n      this.yes_direction = 'bottom';\n      this.no_direction = 'right';\n    } else {\n      this.yes_direction = 'right';\n      this.no_direction = 'bottom';\n    }\n  } else {\n    this.yes_direction = 'bottom';\n    this.no_direction = 'right';\n  }\n\n  this.yes_direction = this.yes_direction || 'bottom';\n  this.no_direction = this.no_direction || 'right';\n\n  this.text.attr({\n    x: this.textMargin * 2\n  });\n\n  var width = this.text.getBBox().width + 3 * this.textMargin;\n  width += width/2;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  height += height/2;\n  height = Math.max(width * 0.5, height);\n  var startX = width/4;\n  var startY = height/4;\n\n  this.text.attr({\n    x: startX + this.textMargin/2\n  });\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - width/4, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n    {x: startX - width/4 + width, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n    {x: startX - width/4, y: startY + height/4}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Condition, Symbol);\n\nCondition.prototype.render = function() {\n\n  if (this.yes_direction) {\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n  }\n\n  if (this.no_direction) {\n    this[this.no_direction + '_symbol'] = this.no_symbol;\n  }\n\n  var lineLength = this.getAttr('line-length');\n\n  if (this.bottom_symbol) {\n    var bottomPoint = this.getBottom();\n\n    if (!this.bottom_symbol.isPositioned) {\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n      this.bottom_symbol.isPositioned = true;\n\n      this.bottom_symbol.render();\n    }\n  }\n\n  if (this.right_symbol) {\n    var rightPoint = this.getRight();\n\n    if (!this.right_symbol.isPositioned) {\n\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n      var self = this;\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n          if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n            hasSymbolUnder = true;\n            break;\n          }\n        }\n\n        if (hasSymbolUnder) {\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.right_symbol.isPositioned = true;\n\n      this.right_symbol.render();\n    }\n  }\n};\n\nCondition.prototype.renderLines = function() {\n  if (this.yes_symbol) {\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n  }\n\n  if (this.no_symbol) {\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n  }\n};\n\nmodule.exports = Condition;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.condition.js\n ** module id = 177\n ** module chunks = 1\n **/","require('./src/flowchart.shim');\nvar parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}\n\nmodule.exports = FlowChart;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/index.js\n ** module id = 212\n ** module chunks = 1\n **/","var Raphael = require('raphael');\nvar defaults = require('./flowchart.helpers').defaults;\nvar defaultOptions = require('./flowchart.defaults');\nvar Condition = require('./flowchart.symbol.condition');\n\nfunction FlowChart(container, options) {\n  options = options || {};\n\n  this.paper = new Raphael(container);\n\n  this.options = defaults(options, defaultOptions);\n\n  this.symbols = [];\n  this.lines = [];\n  this.start = null;\n}\n\nFlowChart.prototype.handle = function(symbol) {\n  if (this.symbols.indexOf(symbol) <= -1) {\n    this.symbols.push(symbol);\n  }\n\n  var flowChart = this;\n\n  if (symbol instanceof(Condition)) {\n    symbol.yes = function(nextSymbol) {\n      symbol.yes_symbol = nextSymbol;\n      if(symbol.no_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.no = function(nextSymbol) {\n      symbol.no_symbol = nextSymbol;\n      if(symbol.yes_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n  } else {\n    symbol.then = function(nextSymbol) {\n      symbol.next = nextSymbol;\n      symbol.pathOk = true;\n      return flowChart.handle(nextSymbol);\n    };\n  }\n\n  return symbol;\n};\n\nFlowChart.prototype.startWith = function(symbol) {\n  this.start = symbol;\n  return this.handle(symbol);\n};\n\nFlowChart.prototype.render = function() {\n  var maxWidth = 0,\n      maxHeight = 0,\n      i = 0,\n      len = 0,\n      maxX = 0,\n      maxY = 0,\n      minX = 0,\n      minY = 0,\n      symbol,\n      line;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    if (symbol.width > maxWidth) {\n      maxWidth = symbol.width;\n    }\n    if (symbol.height > maxHeight) {\n      maxHeight = symbol.height;\n    }\n  }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n  }\n\n  this.start.render();\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\n  //   symbol = this.symbols[i];\n  //   symbol.render();\n  // }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.renderLines();\n  }\n\n  maxX = this.maxXFromLine;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    var x = symbol.getX() + symbol.width;\n    var y = symbol.getY() + symbol.height;\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (y > maxY) {\n      maxY = y;\n    }\n  }\n\n  for (i = 0, len = this.lines.length; i < len; i++) {\n    line = this.lines[i].getBBox();\n    var x = line.x;\n    var y = line.y;\n    var x2 = line.x2;\n    var y2 = line.y2;\n    if (x < minX) {\n      minX = x;\n    }\n    if (y < minY) {\n      minY = y;\n    }\n    if (x2 > maxX) {\n      maxX = x2;\n    }\n    if (y2 > maxY) {\n      maxY = y2;\n    }\n  }\n\n  var scale = this.options['scale'];\n  var lineWidth = this.options['line-width'];\n\n  if (minX < 0) minX -= lineWidth;\n  if (minY < 0) minY -= lineWidth;\n\n  var width = maxX + lineWidth - minX;\n  var height = maxY + lineWidth - minY;\n\n  this.paper.setSize(width * scale, height * scale);\n  this.paper.setViewBox(minX, minY, width, height, true);\n};\n\nFlowChart.prototype.clean = function() {\n  if (this.paper) {\n    var paperDom = this.paper.canvas;\n    paperDom.parentNode.removeChild(paperDom);\n  }\n};\n\nmodule.exports = FlowChart;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.chart.js\n ** module id = 213\n ** module chunks = 1\n **/","// defaults\nmodule.exports = {\n  'x': 0,\n  'y': 0,\n  'line-width': 3,\n  'line-length': 50,\n  'text-margin': 10,\n  'font-size': 14,\n  'font-color': 'black',\n  // 'font': 'normal',\n  // 'font-family': 'calibri',\n  // 'font-weight': 'normal',\n  'line-color': 'black',\n  'element-color': 'black',\n  'fill': 'white',\n  'yes-text': 'yes',\n  'no-text': 'no',\n  'arrow-end': 'block',\n  'class': 'flowchart',\n  'scale': 1,\n  'symbols': {\n    'start': {},\n    'end': {},\n    'condition': {},\n    'inputoutput': {},\n    'operation': {},\n    'subroutine': {}\n  }//,\n  // 'flowstate' : {\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n  //   'future' : { 'fill': '#FFFF99'},\n  //   'invalid': {'fill': '#444444'}\n  // }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.defaults.js\n ** module id = 214\n ** module chunks = 1\n **/","// add indexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = 0;\n    if (arguments.length > 0) {\n      n = Number(arguments[1]);\n      if (n != n) { // shortcut for verifying if it's NaN\n        n = 0;\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    if (n >= len) {\n      return -1;\n    }\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n    for (; k < len; k++) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\n// add lastIndexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.lastIndexOf) {\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = len;\n    if (arguments.length > 1) {\n      n = Number(arguments[1]);\n      if (n != n) {\n        n = 0;\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n    for (; k >= 0; k--) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, '');\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.shim.js\n ** module id = 215\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction End(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'End';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(End, Symbol);\n\nmodule.exports = End;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.end.js\n ** module id = 216\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction InputOutput(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  this.text.attr({\n    x: this.textMargin * 3\n  });\n\n  var width = this.text.getBBox().width + 4 * this.textMargin;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  var startX = this.textMargin;\n  var startY = height/2;\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - this.textMargin, y: height},\n    {x: startX - this.textMargin + width, y: height},\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n    {x: startX, y: startY}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(InputOutput, Symbol);\n\nInputOutput.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.textMargin;\n  return {x: x, y: y};\n};\n\nInputOutput.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n  return {x: x, y: y};\n};\n\nmodule.exports = InputOutput;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.inputoutput.js\n ** module id = 217\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Operation(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Operation, Symbol);\n\nmodule.exports = Operation;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.operation.js\n ** module id = 218\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Start(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'Start';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Start, Symbol);\n\nmodule.exports = Start;\n\n// Start.prototype.render = function() {\n//   if (this.next) {\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\n//     var bottomPoint = this.getBottom();\n//     var topPoint = this.next.getTop();\n\n//     if (!this.next.isPositioned) {\n//       this.next.shiftY(this.getY() + this.height + lineLength);\n//       this.next.setX(bottomPoint.x - this.next.width/2);\n//       this.next.isPositioned = true;\n\n//       this.next.render();\n//     }\n//   }\n// };\n\n// Start.prototype.renderLines = function() {\n//   if (this.next) {\n//     this.drawLineTo(this.next);\n//   }\n// };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.start.js\n ** module id = 219\n ** module chunks = 1\n **/","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Subroutine(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n\n  symbol.attr({\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n  });\n\n  this.text.attr({\n    'x': 2 * this.getAttr('text-margin')\n  });\n\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n  innerWrap.attr({\n    x: this.getAttr('text-margin'),\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n    fill: this.getAttr('fill')\n  });\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\n  var font = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) innerWrap.attr({ 'font': font });\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\n  if (options.link) { innerWrap.attr('href', options.link); }\n  if (options.target) { innerWrap.attr('target', options.target); }\n  this.group.push(innerWrap);\n  innerWrap.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Subroutine, Symbol);\n\nmodule.exports = Subroutine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/flowchart.symbol.subroutine.js\n ** module id = 220\n ** module chunks = 1\n **/","if (typeof jQuery != 'undefined') {\n\tvar parse = require('./flowchart.parse');\n\t(function( $ ) {\n\t\t$.fn.flowChart = function( options ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t$this.html('');\n\t\t\t\tchart.drawSVG(this, options);\n\t\t\t});\n\t\t};\n\t})(jQuery); // eslint-disable-line\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flowchart.js/src/jquery-plugin.js\n ** module id = 221\n ** module chunks = 1\n **/"],"sourceRoot":""}