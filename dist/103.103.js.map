{"version":3,"sources":["webpack:///103.103.js","webpack:///./~/highlight.js/lib/languages/haskell.js"],"names":["webpackJsonp","292","module","exports","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE"],"mappings":"AAAAA,cAAc,MAERC,IACA,SAASC,EAAQC,GCHvBD,EAAAC,QAAA,SAAAC,GACA,GAAAC,IACAC,UACAF,EAAAC,QAAA,UACAD,EAAAC,QACA,KACA,MAEAE,UAAA,YAMAC,GACAC,UAAA,OACAC,MAAA,MAAaC,IAAA,OAGbC,GACAH,UAAA,OACAC,MAAA,KAAAC,IAAA,KAGAE,GACAJ,UAAA,OACAC,MAAA,kBACAI,UAAA,GAGAC,GACAL,MAAA,MAAAC,IAAA,MACAK,QAAA,IACAT,UACAC,EACAI,GACOH,UAAA,OAAAC,MAAA,0CACPN,EAAAa,QAAAb,EAAAc,YAAqCR,MAAA,kBACrCL,IAIAc,GACAT,MAAA,IAAaC,IAAA,IACbJ,SAAAQ,EAAAR,SAGA,QACAa,SAAA,MACAC,SACA,wOAIAd,WAKAe,cAAA,SAAAX,IAAA,QACAU,SAAA,eACAd,UAAAQ,EAAAV,GACAW,QAAA,aAGAN,MAAA,eAAAC,IAAA,IACAU,SAAA,6BACAd,UAAAQ,EAAAV,GACAW,QAAA,aAIAP,UAAA,QACAC,MAAA,8BAAAC,IAAA,QACAU,SAAA,8BACAd,UAAAM,EAAAE,EAAAV,KAGAI,UAAA,QACAC,MAAA,0BAAAC,IAAA,IACAU,SAAA,oCACAd,UAAAC,EAAAK,EAAAE,EAAAI,EAAAd,KAGAiB,cAAA,UAAAX,IAAA,IACAJ,UAAAM,EAAAE,EAAAV,KAGAiB,cAAA,sBAAAX,IAAA,IACAJ,UAAAH,EAAAmB,cAAAlB,KAGAK,MAAA,gBAAAC,IAAA,IACAU,SAAA,uEAEAd,UAAAM,EAAAT,EAAAoB,kBAAAnB,KAGAI,UAAA,OACAC,MAAA,kCAAAC,IAAA,KAKAH,EACAI,EAKAR,EAAAoB,kBACApB,EAAAmB,cACAV,EACAT,EAAAa,QAAAb,EAAAc,YAAqCR,MAAA,mBAErCL,GAEOK,MAAA","file":"103.103.js","sourcesContent":["webpackJsonp([103],{\n\n/***/ 292:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(hljs) {\n\t  var COMMENT = {\n\t    variants: [\n\t      hljs.COMMENT('--', '$'),\n\t      hljs.COMMENT(\n\t        '{-',\n\t        '-}',\n\t        {\n\t          contains: ['self']\n\t        }\n\t      )\n\t    ]\n\t  };\n\t\n\t  var PRAGMA = {\n\t    className: 'meta',\n\t    begin: '{-#', end: '#-}'\n\t  };\n\t\n\t  var PREPROCESSOR = {\n\t    className: 'meta',\n\t    begin: '^#', end: '$'\n\t  };\n\t\n\t  var CONSTRUCTOR = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n\t    relevance: 0\n\t  };\n\t\n\t  var LIST = {\n\t    begin: '\\\\(', end: '\\\\)',\n\t    illegal: '\"',\n\t    contains: [\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\t      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n\t      COMMENT\n\t    ]\n\t  };\n\t\n\t  var RECORD = {\n\t    begin: '{', end: '}',\n\t    contains: LIST.contains\n\t  };\n\t\n\t  return {\n\t    aliases: ['hs'],\n\t    keywords:\n\t      'let in if then else case of where do module import hiding ' +\n\t      'qualified type data newtype deriving class instance as default ' +\n\t      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n\t      'jvm dotnet safe unsafe family forall mdo proc rec',\n\t    contains: [\n\t\n\t      // Top-level constructions.\n\t\n\t      {\n\t        beginKeywords: 'module', end: 'where',\n\t        keywords: 'module where',\n\t        contains: [LIST, COMMENT],\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t      {\n\t        begin: '\\\\bimport\\\\b', end: '$',\n\t        keywords: 'import qualified as hiding',\n\t        contains: [LIST, COMMENT],\n\t        illegal: '\\\\W\\\\.|;'\n\t      },\n\t\n\t      {\n\t        className: 'class',\n\t        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n\t        keywords: 'class family instance where',\n\t        contains: [CONSTRUCTOR, LIST, COMMENT]\n\t      },\n\t      {\n\t        className: 'class',\n\t        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n\t        keywords: 'data family type newtype deriving',\n\t        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n\t      },\n\t      {\n\t        beginKeywords: 'default', end: '$',\n\t        contains: [CONSTRUCTOR, LIST, COMMENT]\n\t      },\n\t      {\n\t        beginKeywords: 'infix infixl infixr', end: '$',\n\t        contains: [hljs.C_NUMBER_MODE, COMMENT]\n\t      },\n\t      {\n\t        begin: '\\\\bforeign\\\\b', end: '$',\n\t        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n\t                  'dotnet safe unsafe',\n\t        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n\t      },\n\t      {\n\t        className: 'meta',\n\t        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n\t      },\n\t\n\t      // \"Whitespaces\".\n\t\n\t      PRAGMA,\n\t      PREPROCESSOR,\n\t\n\t      // Literals and names.\n\t\n\t      // TODO: characters.\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.C_NUMBER_MODE,\n\t      CONSTRUCTOR,\n\t      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\t\n\t      COMMENT,\n\t\n\t      {begin: '->|<-'} // No markup, relevance booster\n\t    ]\n\t  };\n\t};\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 103.103.js\n **/","module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/highlight.js/lib/languages/haskell.js\n ** module id = 292\n ** module chunks = 103\n **/"],"sourceRoot":""}